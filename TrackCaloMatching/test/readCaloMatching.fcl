#
# $Id: readCaloMatching.fcl,v 1.3 2014/05/28 20:58:59 brownd Exp $
# $Author: brownd $
# $Date: 2014/05/28 20:58:59 $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

# Give this job a name.
process_name : DiskCaloMatching

# Start form an empty source
source :
{
 module_type : EmptyEvent
  module_type: RootInput  
 # maxEvents : -1
  fileNames :  ["BkgInput.root"]
}

services :
{
  message : @local::default_message

  TFileService : { fileName : "readCaloMatching_disk_test.root" }

  RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }

  GeometryService : { inputFile : "Mu2eG4/geom/geom_common.txt" }

  ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }

  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }

  BTrkHelper             : @local::BTrkHelperDefault

  G4Helper : { }

  SeedService : @local::automaticSeeds

}

physics :
{
  producers:
  {

    # Generate the event
    generate: @local::generate

    # Run G4 and add hits to the event
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSH : @local::makeSH
    
    FSHPreStereo: @local::FSHPreStereo
 
    MakeStereoHits : @local::MakeStereoHits
    FlagStrawHits  : @local::FlagStrawHits
    FlagBkgHits    : @local::FlagBkgHits
    
    # test module for Kalman fit: the 
    
    # Form CaloHits (APD hits)
    CaloReadoutHitsMaker : @local::MakeCaloReadoutHits

    # Form CaloCrystalHits (reconstruct crystals from APDs)
    CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker

    TrkPatRec : @local::TrkPatRec
 
  makeCaloCluster:
    {
      module_type            : MakeCaloCluster
      diagLevel              : 0
     generatorModuleLabel   : generate
     caloCrystalModuleLabel  : CaloCrystalHitsMaker
     g4ModuleLabel          : g4run
     #caloReadoutModuleLabel : CaloReadoutHitsMaker
     caloClusterAlgorithm    : closest
     caloClusterSeeding     : energy
     #caloClusterSeeding      : time
     deltaTime              : 100.0 #ns
     nCryPerCrystal         : 1
     EnoiseCut              : 0.00 #MeV
     EclusterCut            : 0.00 #MeV  
     maxFullPrint           : 201
    }
      TrkExtrapol :
    {
        module_type       : TrkExtrapol
        diagLevel         : 0
	outPutNtup        : 1
        fitterModuleLabel : TrkPatRec
        # MC truth finder, analyzer configuration
        KalFitMC : 
        {
        }        
 
    }
    
    
     CaloMatching :
    {
        module_type                : CaloMatching
      fitterModuleLabel            : TrkPatRec
      diagLevel                    : 0
      outPutNtup                   : 1
      caloClusterModuleLabel       : makeCaloCluster
      caloClusterAlgorithm         : closest
      caloClusterSeeding           : energy
      trkToCaloExtrapolModuleLabel : TrkExtrapol
     # MC truth finder, analyzer configuration
               
 
    }
    
    
     extractElData:
   {
     module_type           : ExtractElectronsData
     generatorModuleLabel  : generate
     g4ModuleLabel         : g4run
     makerModuleLabel      : makeSH
     #trackerStepPoints    : tracker
     #minEnergyDep         : 0.0001
     #minHits              : 5
     #doDisplay            : true
     #clickToAdvance       : false
   }
   }
   
   filters:
 {
    #Look at the bad events from G4.
    skipBadEvents:
    {
      module_type            : KilledEventFilter
      g4ModuleLabel          : g4run 
    }
 }

   
    analyzers : {
   
     readfits : {
      module_type       : ReadKalFits
      fitterModuleLabel : TrkPatRec
      WeightEvents      : false
      KalFitMC          : { }
      verbosity         : 2
      maxPrint          : 200
   }
     checkhitsEff:
    {                              
      module_type                  : ReadCaloMatching
      fitterModuleLabel            : TrkPatRec
      diagLevel                    : 1
      qualityCuts                  : 2
      generatorModuleLabel         : generate
      g4ModuleLabel                : g4run
      makerModuleLabel             : makeSH
      caloReadoutModuleLabel       : CaloReadoutHitsMaker
      caloCrystalModuleLabel       : CaloCrystalHitsMaker
      caloClusterModuleLabel       : makeCaloCluster
      trkToCaloExtrapolModuleLabel : TrkExtrapol
      trkCaloMatchingModuleLabel   : CaloMatching
      elextractModuleLabel         : extractElData
      maxFullPrint                 : 201
    }
    
  }
  
  p1 : [generate 
        , g4run
        , makeSH
        , CaloReadoutHitsMaker
        , CaloCrystalHitsMaker
        , makeCaloCluster
       # , TrkPatRec
       # , TrkExtrapol
       # , CaloMatching
       # , extractElData
       # , skipBadEvents
        ]
  p2 : [ FSHPreStereo
	, MakeStereoHits
	, FlagStrawHits
	, FlagBkgHits
	, TrkPatRec
        , TrkExtrapol
        , CaloMatching  
	#, extractElData
	]

  e1 : [readfits
	#,checkhitsEff
	# outfile
	]

  trigger_paths  : [p2]
  end_paths      : [e1]

}

outputs:
{
  # Define the output file.
  outfile : 
  {
    module_type    : RootOutput
    fileName       : "data_disck_conv.root"
    outputCommands : ['keep *_*_*_*'
                #   , 'drop mu2ePointTrajectoryMapVector_*_*_*'
                #   , 'drop mu2eSimParticles_*_*_*'
                   # Uncomment the above line to reduce file size.
                     ]  
  }
}

# Override some of the default values.
#physics.producers.generate.inputfile  : "Scripts/genconfig_Conversion.txt"
physics.producers.generate.inputfile  : "Mu2eG4/test/genconfig_01.txt"
#services.GeometryService.inputFile : "Scripts/geom_nohp.txt"
services.GeometryService.inputFile : "Mu2eG4/geom/geom_common.txt"
physics.producers.makeSH.diagLevel    : 0
physics.producers.makeSH.maxFullPrint : 2
source.firstRun                            :  1 
services.SeedService.baseSeed         :  1
services.SeedService.maxUniqueEngines :  20
physics.producers.KalFitTest.KalFit.RemoveFailedFits : false
physics.producers.KalFitTest.KalFitMC.pureHits : false
#
