#
# $Id: caloMatching.fcl,v 1.1 2012/07/10 00:02:19 gianipez Exp $
# $Author: gianipez $
# $Date: 2012/07/10 00:02:19 $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

# Give this job a name.
process_name : Matching

# Start form an empty source
source :
{
  module_type : EmptyEvent
  maxEvents : -1
}

services :
{
  message : @local::default_message

  TFileService : { fileName : "caloMatching.root" }

  RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }

  GeometryService : { inputFile : "Mu2eG4/geom/geom_common.txt" }

  ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }

  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }

  BTrkHelper             : @local::BTrkHelperDefault

  G4Helper : { }

  SeedService : @local::automaticSeeds

}

physics :
{
  producers:
  {

    # Generate the event
    generate: @local::generate

    # Run G4 and add hits to the event
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSH : @local::makeSH

    # test module for Kalman fit: the 
    
    @table::CaloDigiMC.producers
    @table::CaloReco.producers
    @table::CaloCluster.producers
    
    makeCaloCluster:

    TrkPatRec : @local::TrkPatRec
 
 
      TrkExtrapol :
    {
        module_type     : TrkExtrapol
      fitterModuleLabel : TrkPatRec
      diagLevel         : 1
      maxNumberStoresPoints : 2
     # MC truth finder, analyzer configuration
        KalFitMC : 
        {
        }        
 
    }
    
   #  CaloMatching :
   # {
   #     module_type                : CaloMatching
   #   fitterModuleLabel            : TrkPatRec
   #   diagLevel                    : 1
   #   outPutNtup                   : 0
   #   caloClusterModuleLabel       : makeCaloCluster
   #   caloClusterAlgorithm         : closest
   #   caloClusterSeeding           : energy
   #   trkToCaloExtrapolModuleLabel : TrkExtrapol
   # }
    
   }
    analyzers : {
    
    eventdisplay:
    {
      module_type     : EventDisplay
      g4ModuleLabel   : "g4run"
    }
    
  }
  
  p1 : [generate 
        , g4run
        , makeSH
        , @sequence::CaloDigiMC.DigiSim
        , @sequence::CaloReco.Reco 
        , @sequence::CaloCluster.Reco
        , TrkPatRec
        , TrkExtrapol
       # , CaloMatching 
        ]
  e1 : [outfile]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  # Define the output file.
  outfile : 
  {
    module_type    : RootOutput
    fileName       : "data_caloMatching.root"
    outputCommands : ['keep *_*_*_*'
                #   , 'drop mu2ePointTrajectoryMapVector_*_*_*'
                #   , 'drop mu2eSimParticles_*_*_*'
                   # Uncomment the above line to reduce file size.
                     ]  
  }
}

# Override some of the default values.
#physics.producers.generate.inputfile  : "Scripts/genconfig_Conversion.txt"
physics.producers.generate.inputfile  : "CaloCluster/test/genconfig_giani.txt"
#services.GeometryService.inputFile : "Scripts/geom_nohp.txt"
services.GeometryService.inputFile : "Mu2eG4/geom/geom_common.txt"
physics.producers.makeSH.diagLevel    : 0
physics.producers.makeSH.maxFullPrint : 2
source.firstRun                            :  1 
services.SeedService.baseSeed         :  1
services.SeedService.maxUniqueEngines :  20
physics.producers.KalFitTest.KalFit.RemoveFailedFits : false
physics.producers.KalFitTest.KalFitMC.pureHits : false
#
