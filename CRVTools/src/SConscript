#!/usr/bin/env python
#
# Script to build the files found in this directory.
#
# Original author Rob Kutschke.
# Adapted by Dave (Lou) Brown

import os
Import('env')
Import('mu2e_helper')

helper=mu2e_helper(env);

rootlibs = env['ROOTLIBS']

# Libraries need
common = [ 'mu2e_RecoDataProducts',
           'mu2e_ConfigTools',
           'mu2e_GeneralUtilities',
           'art_Framework_Core',
           'art_Framework_IO_Sources',
           'art_Framework_Principal',
           'art_Persistency_Common',
           'art_Persistency_Provenance',
           'art_Framework_Services_Registry',
           'art_root_io_tfile_support',
           'art_root_io_TFileService',
           'art_Utilities',
           'canvas',
           'fhiclcpp',
           'fhiclcpp_types',
           'tbb',
           'cetlib',
           'cetlib_except',
           'CLHEP',
           'Core',
           'boost_filesystem',
           rootlibs
    ]


mainlib = helper.make_mainlib ( [ 'MF_MessageLogger',
                                  'fhiclcpp_types',
                                  'tbb',
                                  'art_root_io_tfile_support',
                                  'art_root_io_TFileService',
                                  'art_Utilities',
                                  'canvas',
                                  'cetlib',
                                  'cetlib_except',
                                  'CLHEP',
                                  rootlibs,
                                ] )

# Each service requires a custom link list so make them one at a time.


# Make all of the _module plugins; do not build any of the
# services, which have been built already.
# Fix me: we need to learn how wasteful it is to have a single
# mother-of-all-link-lists rather than custom lists for each module.
helper.make_plugins( [ mainlib,
                       'mu2e_RecoDataProducts',
                       'mu2e_Mu2eUtilities',
                       'mu2e_ConfigTools',
                       'mu2e_GeneralUtilities',
                       'mu2e_SeedService_SeedService_service',
                       'art_Framework_Core',
                       'art_Framework_IO_Sources',
                       'art_Framework_Principal',
                       'art_Persistency_Common',
                       'art_Persistency_Provenance',
                       'art_Framework_Services_Registry',
                       'art_root_io_tfile_support',
                       'art_root_io_TFileService',
                       'art_Utilities',
                       'canvas',
                       'fhiclcpp',
                       'fhiclcpp_types',
                       'tbb',
                       'cetlib',
                       'cetlib_except',
                       'CLHEP',
                       'Core',
                       'boost_filesystem',
                       rootlibs
                     ]
                     )


# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
