# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# this file is included by fcl/standardProducers.fcl inside the PROLOG section
#------------------------------------------------------------------------------

BEGIN_PROLOG

# time clustering is the 1st stage of track finding 
TimeClusterFinder : {
	module_type  : TimeClusterFinder
	ClusterMVA : { MVAWeights : "TrkPatRec/test/TimeCluster.weights.xml" }
	ClusterCaloMVA : { MVAWeights : "TrkPatRec/test/TimeClusterCalo.weights.xml" }
	ComboHitCollection : "makePH"
	StrawHitFlagCollection : "FlagBkgHits:ComboHits"
	CaloClusterCollection : "CaloClusterFromProtoCluster"
	T0Calculator : { CaloT0Offset : @local::TrackCaloMatching.DtOffset }
	UseCaloCluster : true
	UseCaloClusterPosition : true
	TestFlag : true
}

#cosmics:
TimeClusterFinderCosmics : {
	@table::TimeClusterFinder
	ComboHitCollection : "makePH"
	T0Calculator : { CaloT0Offset : @local::TrackCaloMatching.DtOffset }
	maxdPhi : 10.0
	RefineClusters : false
	PrefilterCluster : false
	UseCaloCluster : false
	UseCaloClusterPosition : false
}

SimpleTimeCluster : {
	module_type : SimpleTimeCluster
	ComboHitCollection : "makePH"
	StrawHitFlagCollection : "FlagBkgHits:ComboHits"
	T0Calculator : { CaloT0Offset : @local::TrackCaloMatching.DtOffset }
	TestFlag : false
}

CHD : {
	module_type : ComboHitDiag
	StrawDigiMCCollection : "compressDigiMCs"
	ComboHitCollection : "makePH"
	UseFlagCollection : true
	StrawHitFlagCollection : "FlagBkgHits:ComboHits"
	TimeOffsets : {inputs : [ @sequence::DigiCompression.NoCosmicTimeMaps ]}
}

CosmicTrackFinder : { #split into Loose and tight below for efficieny studies
	module_type		: CosmicTrackFinder
	ComboHitCollection     : "makePH"
	TimeClusterCollection  : "SimpleTimeCluster"
	StrawDigiMCCollection : "compressDigiMCs"
   
}

CosmicTrackFinderLoose : {
	module_type		: CosmicTrackFinder
	ComboHitCollection     : "makePH"
	TimeClusterCollection  : "SimpleTimeCluster"
	# TimeClusterCollection  : "TimeClusterFinderCosmics"
	StrawDigiMCCollection : "compressDigiMCs"
	DoDrift : true
	CosmicTrackFit :{
		minNComboHits : 4
		MaxSeedChi2DOF : 10
		MaxDeltaChi2 : 0.5
		MaxPosDev : 20000
		MaxHitPullForSeed : 1000
		Noutliers : 2
		GaussianSeedTimeResolution : 24
		MaxTimeResidual : 40
	}
   
}

CosmicTrackFinderTight : {
	module_type		: CosmicTrackFinder
	ComboHitCollection     : "makePH"
	TimeClusterCollection  : "SimpleTimeCluster"
	StrawDigiMCCollection : "compressDigiMCs"
	DoDrift : true
	CosmicTrackFit :{
		minNComboHits : 8
		MaxSeedChi2DOF : 2.5
		MaxDeltaChi2 : 0.001
		MaxPosDev : 200
		MaxHitPullForSeed : 100
		Noutliers : 2
		GaussianSeedTimeResolution : 24
		MaxTimeResidual : 40
	}
}

 CosmicTrackDetails : {
	module_type : CosmicTrackDetails
	ComboHitCollection : "makePH"
	TimeClusterCollection : SimpleTimeCluster
        #TimeClusterCollection : TimeClusterFinderCosmics
        CosmicTrackSeedCollection : CosmicTrackFinder
	StrawDigiMCCollection : "compressDigiMCs"
	TimeOffsets : {inputs : [ @sequence::DigiCompression.NoCosmicTimeMaps ]}
  }

 CosmicAnalysis : {
	module_type : CosmicAnalyzer
	ComboHitCollection : "makePH"
	TimeClusterCollection : SimpleTimeCluster
        #TimeClusterCollection : TimeClusterFinderCosmics
        CosmicTrackSeedCollection : CosmicTrackFinder
	StrawDigiMCCollection : "compressDigiMCs"
	TimeOffsets : {inputs : [ @sequence::DigiCompression.NoCosmicTimeMaps ]}
  }

CosmicFitDisplay : {
	module_type : CosmicFitDisplay
	ComboHitCollection : "makePH"
        _chtag : "makePH"
        _tctag : TimeClusterFinderCosmics
        _sttag : CosmicTrackFinder
        doDisplay            : true
	TimeClusterCollection : TimeClusterFinderCosmicsr
        CosmicTrackSeedCollection : CosmicTrackFinder
        
  }

CosmicTrackDiag : {
	module_type : CosmicTrackDiag
	ComboHitCollection : "makePH"
	TimeClusterCollection : SimpleTimeCluster
	CosmicTrackSeedCollection : CosmicTrackFinder
	StrawDigiMCCollection : "compressDigiMCs"
	TimeOffsets : {inputs : [ @sequence::DigiCompression.NoCosmicTimeMaps ]}
  }

CosmicMuonInfo : {
	module_type : CosmicMuonInfo
	strawDigisTag   : "makeSD"
	strawHitsTag    : "makeSH"
	panelHitsTag    : "makePH"
	strawDigiMCsTag : "compressDigiMCs"
	caloDigisTag    : "CaloDigiFromShower"
	diagLevel       : 0
	filterCuts      : {
	pmin          : 200. # MeV/c set low 
	pmax          : 1000000. # MeV/c currnetly not using 
	minStrawDigis :    2  # Minimum number of digis made by the primary muon //10
	minPlanes     :    2  # Minimum number of planes hit by the muon track//3
	minBackground :    0  # Make > 0 to select events with background digis
	maxBackground : 9999  # Make a small number to limit digis not from the muon
	  }
}
CosmicTracking : {
	producers :{
		SimpleTimeCluster  : @local::SimpleTimeCluster
		TimeClusterFinderCosmics : @local::TimeClusterFinderCosmics
		CosmicTrackFinder  : @local::CosmicTrackFinder
		CosmicTrackFinderLoose  : @local::CosmicTrackFinderLoose
		CosmicTrackFinderTight  : @local::CosmicTrackFinderTight
	}
	analyzers : {

		CosmicAnalysis : @local::CosmicAnalysis
		CosmicFitDisplay : @local::CosmicFitDisplay
		CosmicTrackDetails : @local::CosmicTrackDetails
		CosmicTrackDiag : @local::CosmicTrackDiag
	}
	filters : {
		CosmicMuonInfo: @local::CosmicMuonInfo
	}
}
# 
# define standard outputs 
  Output : {
    Digis : [ "keep mu2e::StrawDigis_*_*_*" ]
    Hits : [ "keep mu2e::StrawHitFlagDetailmu2e::BitMaps_FlagBkgHits_*_*",
	 "keep mu2e::ComboHitCollection_*_*_*",
	  "keep mu2e::StrawHits_*_*_*"	]

    Tracks : [ "keep mu2e::StrawHitFlagDetailmu2e::BitMaps_FlagBkgHits_StrawHits_*",
	 "keep mu2e::ComboHitCollection_makePH_*_*",
	    "keep mu2e::TimeClusters_*_*_*" ]
    MCTracks : ["keep mu2e::GenParticles_*_*_*",
		"keep mu2e::SimParticles_*_*_*" ]
    MCDigis : ["keep mu2e::StrawDigiMCs_*_*_*"]
    MCHits : [ "keep mu2e::StepPointMCs_*_tracker_*",
	      "keep mu2e::StepPointMCs_*_virtualdetector_*"]

  }

#production sequence to find straight track
CosmicTracking.FindCosmics : [  SimpleTimeCluster, CosmicTrackFinder ]
CosmicTracking.FindCosmicsLoose : [  SimpleTimeCluster, CosmicTrackFinderLoose ]
CosmicTracking.FindCosmicsTight : [  SimpleTimeCluster, CosmicTrackFinderTight ]

END_PROLOG
