# -*- mode:tcl -*-
#------------------------------------------------------------------------------
# performs the calorimeter and track reconstruciton
#------------------------------------------------------------------------------
#  > mu2e --config CaloFilters/fcl/runCaloOnlyFilter.fcl --source "your digis file" --TFile CaloOnlyFilter.root --nevts=100
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardServices.fcl"
#include "fcl/standardProducers.fcl"
#include "TrkHitReco/fcl/prolog_trigger.fcl"
#include "CaloCluster/fcl/prolog_trigger.fcl"

BEGIN_PROLOG
#prescale factors for the calorimeter-only trigger
caloOnly_evt_sf         : 1
caloOnly_sf             : 1
#prescale factors for the cosmic muon calibration
caloCosmicMuon_evt_sf         : 1
caloCosmicMuon_sf             : 1
#prescale factors for the caloDigi count filter
cDCount_evt_sf         : 500
cDCount_sf             : 1
#prescale factors for the "large" caloDigi counter filter
largeCDCount_evt_sf    : 500
largeCDCount_sf        : 1
END_PROLOG

#include "CaloFilters/fcl/prolog_trigger.fcl"

process_name : caloOnlyFilter

source :
{
    module_type : RootInput
}
# we don't need any simulation services for this job
#services : @local::Services.Reco

services : @local::Services.SimAndReco


# timing information
services.TimeTracker : {
    dbOutput : {
	filename : "ReadCaloDigis.db"
	overwrite : true
    }
}

services.scheduler.wantSummary: true

producers    : { @table::CaloFilters.producers }
filters      : { @table::CaloFilters.filters   }
paths        : { @table::CaloFilters.sequences }


physics : {
    producers: {
	@table::producers 
	@table::CaloClusterTrigger.producers
	@table::TrkHitRecoTrigger.producers
    }

    filters  : { @table::filters }

    caloOnly_path : [ FetchCaloDigis, @sequence::paths.caloOnly ]

    caloMixed_path : [ FetchCaloDigis, @sequence::paths.caloMixed ]

    out           : [     ]
    end_paths     : [ out ]
}


services.TFileService.fileName : "readCaloDigis.root"
services.SeedService.baseSeed : 8
services.SeedService.maxUniqueEngines : 20

