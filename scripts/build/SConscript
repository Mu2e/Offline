#!/usr/bin/env python
#
#
import os
Import('env')

# make a copy of env with the full build environmentals so it can run exe's
exe_env = env.Clone()
exe_env.Append(ENV=os.environ)

# if building in Muse, default dir will be above Offline
command="scripts/build/bin/procs.sh "
if 'MUSE_WORK_DIR' in env:
    command = "Offline/"+command

# each of these generates a useful file or runs a test
targets = ["DEPS","GDML","ROVERLAPS","TEST03","GITPACK","RMSO","VAL0"]

for target in targets:
    exe_env.AlwaysBuild(exe_env.Alias(target, [], 
                                      command+target))

# the RELEASE target runs all the above generators and tests

exe_env.AlwaysBuild(env.Alias('RELEASE', [], '#echo completed release targets'))
Depends('RELEASE', targets)

# the INCPATH target just prints the include path, for use in making dependencies
inclist=exe_env["CPPPATH"]
incpath="echo "
for dd in inclist:
    incpath=incpath+" -I"+dd
if 'G4INCLUDE' in os.environ:
    incpath = incpath + " -I" + os.environ['G4INCLUDE']
    incpath = incpath + " -I" + os.environ['G4INCLUDE'] + "/Geant4"
    incpath = incpath + " -I" + os.environ['CRYPTOPP_INC']
if 'CRYHOME' in os.environ:
    incpath = incpath + " -I" + os.environ['CRYHOME'] + '/src'

exe_env.AlwaysBuild(env.Alias('INCPATH', [], incpath))


# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
# vi:syntax=python

