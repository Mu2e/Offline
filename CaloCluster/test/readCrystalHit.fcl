# 
#
# $Id: readCrystalHit.fcl,v 1.2 2013/03/14 19:22:02 kutschke Exp $
# $Author: kutschke $
# $Date: 2013/03/14 19:22:02 $
#
# Original author G. Pezzullo

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"


# Give this job a name.  
process_name : CaloClusterTrj

# Start from a source
source : 
{
  module_type : EmptyEvent
  maxEvents : -1
}

services : 
{
  message : @local::default_message 

  TFileService : 
  {
    fileName : "CrystalHit_pileUp_backgrounds.root"
  }

  RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }   
        
  GeometryService :
  {
    inputFile : "Mu2eG4/geom/geom_common.txt"
  }  

  ConditionsService :
  {
    conditionsfile : "Mu2eG4/test/conditions_01.txt"
  }
              
  GlobalConstantsService : { 
    inputFile : "Mu2eG4/test/globalConstants_01.txt" 
  }
  
              
  G4Helper : {         }
   
  SeedService: @local::automaticSeeds

}

physics :
{
  producers:
  {
    # Generate the event
    generate: @local::generate

    # Run G4 and add hits to the event
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSH : @local::makeSH

    # Form CaloHits (APD hits)
    CaloReadoutHitsMaker : @local::MakeCaloReadoutHits

    # Form CaloCrystalHits (reconstruct crystals from APDs)
    CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker
 
    makeCaloCluster:
    {
      module_type            : MakeCaloCluster
      generatorModuleLabel   : generate
      g4ModuleLabel           : g4run
      caloCrystalModuleLabel  : CaloCrystalHitsMaker
      caloClusterAlgorithm    : closest
      caloClusterSeeding      : energy
      deltaTime               : 100.0 #ns
      nCryPerCrystal          : 1
      EnoiseCut               : 0.00 #MeV
      EclusterCut             : 0.00 #MeV  
    }
     
  }
 
 filters:
 {
    #Look at the bad events from G4.
    skipBadEvents:
    {
      module_type            : KilledEventFilter
      g4ModuleLabel          : g4run 
    }
 }
 
  analyzers:
  {
    
    caloTrj:
    {
     module_type            : CrystalHits
     generatorModuleLabel   : generate
     g4ModuleLabel          : g4run
     caloReadoutModuleLabel : CaloReadoutHitsMaker
     caloClusterSeeding     : energy
     caloClusterAlgorithm   : closest
    }
   

  } 

  p1 : [ generate 
        , g4run
        , makeSH
        , CaloReadoutHitsMaker
        , CaloCrystalHitsMaker
        , skipBadEvents 
        ]

  e1 : [ caloTrj ]


  trigger_paths  : [p1]
  end_paths      : [e1]

}
outputs:
{
  # Define the output file.
}


# Override some of the default values.
#physics.producers.generate.inputfile  : "Scripts/genconfig_Conversion.txt"
physics.producers.generate.inputfile  : "Mu2eG4/test/genconfig_example.txt"
#CaloCluster/test/genconfig_giani.txt"
#services.GeometryService.inputFile : "Scripts/geom_nohp.txt"
services.GeometryService.inputFile : "Mu2eG4/geom/geom_common.txt"
physics.producers.makeSH.diagLevel    : 0
physics.producers.makeSH.maxFullPrint : 2
source.firstRun                            :  1 
services.SeedService.baseSeed         :  1
services.SeedService.maxUniqueEngines :  20
physics.producers.KalFitTest.KalFit.RemoveFailedFits : false
physics.producers.KalFitTest.KalFitMC.pureHits : false
#
