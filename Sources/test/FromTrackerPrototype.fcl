#include "Offline/fcl/standardServices.fcl"
#include "Offline/EventGenerator/fcl/prolog.fcl"
#include "Production/JobConfig/common/prolog.fcl"
#include "Production/JobConfig/primary/prolog.fcl"
#include "Production/JobConfig/digitize/prolog.fcl"

# name all processes the same, to mask any provenance in ensemble creation
process_name: VSTData
source : { module_type : FromTrackerPrototypeData
 runNumber : 100000
}
services : @local::Services.SimAndReco # reco is needed for the trigger
physics : {
  producers : {
    @table::Digitize.producers
  }
  filters: {
  }
  analyzers: {  }
  TriggerPath : [EWMProducer]
  EndPath : [ Output ]
}

outputs : {
  Output: {
     module_type : RootOutput
     fileName    : @nil
     outputCommands : [ "keep *_*_*_*"]
  }
}

physics.end_paths : [ EndPath ] # needed for generate_fcl
outputs.Output.fileName: "dig.owner.description.version.sequencer.art"
# no histogram output
services.TFileService.fileName : "/dev/null"

# test values; these get overwritten by generate_fcl
services.SeedService.baseSeed         :  773651
services.SeedService.maxUniqueEngines :  20

services.ProditionsService.eventTiming.OffSpillEventLength : 1024

physics.producers.EWMProducer.SpillType : 0
physics.producers.EWMProducer.InitialPhaseShift : 0
physics.producers.EWMProducer.RecoFromMCTruth : true
