#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"


process_name : corsikaTest

targetParams: {
    projectToTargetBox : true
    targetBoxXmin: -10000
    targetBoxXmax: 3000
    targetBoxYmin: -5000
    targetBoxYmax: 5000
    targetBoxZmin: -5000
    targetBoxZmax: 21000
}

source: {
    module_type: FromCorsikaBinary
    fileNames: ["/mu2e/app/users/srsoleti/corsika-77100/run/DAT110001"]
    runNumber          : 1
    firstSubRunNumber  : 0
    firstEventNumber   : 1
    showerAreaExtension  : 10000
    maxEvents: -1
    @table::targetParams
    seed: 1
    resample: false
    compact: true
    fluxConstant: 1.8e4
    lowE: 1.3
    highE: 1e6
}

customCutPhoton: {
   type: intersection
   pars: [ { type: kineticEnergy cut: 10. },
         { type: pdgId pars: [ 22 ] }]
}
customCutElectron: {
   type: intersection
   pars: [{type: kineticEnergy cut: 10. },
         { type: pdgId pars: [ 11, -11 ] }]
}
customCutNeutron: {
   type: intersection
   // pars: [{type: kineticEnergy cut: 0.001},
   pars: [{type: kineticEnergy cut: 10.000},
         { type: pdgId pars: [ 2112, -2112 ] }]
}


services : {
  message : @local::default_message
  TFileService : { fileName : "nts.corsikaHist.owner.version.sequencer.root" }
  GeometryService : @local::Services.Core.GeometryService

  ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
  G4Helper : { }
  SeedService : @local::automaticSeeds
  RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }

  TimeTracker: {
    printSummary: true  # default
  }
}

services.GeometryService.inputFile : "JobConfig/cosmic/geom_cosmic.txt"

physics : {
  producers : {

    corsikaGen : {
      module_type : CORSIKAEventGenerator
      corsikaModuleLabel: "FromCorsikaBinary"
      refPointChoice: "UNDEFINED"
      projectToTargetBox : true
      targetBoxYmax : 5000
      intDist: -1
    }

    g4run :
    {
      module_type: Mu2eG4
      physics: @local::mu2eg4DefaultPhysics
      ResourceLimits: @local::mu2eg4DefaultResourceLimits
	    TrajectoryControl: @local::mu2eg4DefaultTrajectories
      debug: @local::mu2eg4DefaultDebug
      visualization: @local::mu2eg4NoVisualization

      generatorModuleLabel: corsikaGen

      SDConfig:
      {
         enableAllSDs: false
         enableSD: [ CRV, calorimeter, stoppingtarget, tracker ]
         TimeVD: { times: [] }
      }

      Mu2eG4StackingOnlyCut: @local::mu2eg4CutNeutrinos
      Mu2eG4SteppingOnlyCut: {}
      Mu2eG4CommonCut: {
        type: union
        pars: [@local::customCutPhoton,
          @local::customCutElectron,
          @local::customCutNeutron
        ]
        // write: customCut
      }
    }


    randomsaver : @local::randomsaver

    genCounter: {
      module_type: GenEventCounter
    }


  }

  analyzers : {

    genCountLogger: {
         module_type: GenEventCountReader 
    }

    corsikaGenPlots: {
         CORSIKAModuleLabel   : "corsikaGen"
         CORSIKAInstanceName  : ""
         module_type: CORSIKAGenPlots
    }

  }

  trigFilter: [corsikaGen, g4run, randomsaver]
  e1 : [outfile]
  ana : [corsikaGenPlots]

  trigger_paths  : [trigFilter]
  end_paths : [e1, ana]
}

outputs : {
  outfile : {
    module_type : RootOutput
    fileName : "sim.corsikaOut.owner.version.sequencer.art"
  }
}
services.SeedService.baseSeed         :  3425
services.SeedService.maxUniqueEngines :  20
// vim: set ft=cpp:
