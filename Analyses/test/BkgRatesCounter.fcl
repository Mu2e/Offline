# Configuration file for BkgRatesCounter
#  - Generate events including of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form StrawHits from StepPointMC objects
#  - Write event data to an output file
#  - Save state of random numbers to the event-data output file
#
# $Id: BkgRatesCounter.fcl,v 1.17 2013/03/14 19:22:02 kutschke Exp $
# $Author: kutschke $
# $Date: 2013/03/14 19:22:02 $
#
# Original author Gianni Onorato.

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

# Give this process a name.
process_name : BkgRatesCounter

# Start each new event with an empty event.
source :
{
  module_type : EmptyEvent
#   module_type: RootInput  
  maxEvents : -1
#   fileNames :  ["BkgInput.root"]
}

services : @local::Services.SimAndReco

physics :
{
  producers:
  {
    # Generate the event
    generate: @local::generate

    # Run G4 and add hits to the event
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSH : @local::makeSH

    @table::CaloDigiMC.producers
    @table::CaloReco.producers

#    randomsaver : @local::randomsaver

  }

  filters:
  { 
    # Filter module. Do not write events with no Tracker or calo hits
    filterEmpty :
    {
      module_type      : FilterEmptyEvents
      makerModuleLabel : makeSH
      keepTrackOrCalo  : 0
    }
  }

  analyzers:
  {
   # Look at the hits from G4.
    CountRates:
    {
      module_type         : BkgRates
      diagLevel           : -1
      makerModuleLabel    : makeSH
      maxFullPrint        : 0
      # g4ModuleLabel     : g4run
      minimumEnergyTracker: 0.000
      minimumEnergyCalo   : 0.000
    }

    eventdisplay:
    {
      module_type     : EventDisplay
      g4ModuleLabel   : "g4run"
    }


  }

  p1 : [ 
#randomsaver,
       generate
       , g4run
       , makeSH
       , @sequence::CaloDigiMC.DigiSim
       , @sequence::CaloReco.Reco
       # , filterEmpty
       ]
  e1 : [CountRates, outfile ]


  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  # Define the output file.
  outfile : 
  {
    module_type    : RootOutput
    fileName       : "data_bkg.root"
    fastCloning    : false
    outputCommands : ['keep *_*_*_*'
                #   , 'drop mu2ePointTrajectoryMapVector_*_*_*'
                #   , 'drop mu2eSimParticles_*_*_*'
                   # Uncomment the above line to reduce file size.
                     ]  
  }
}

physics.producers.makeSH.diagLevel : -1
physics.producers.makeSH.maxFullPrint : 0
physics.producers.generate.inputfile : "Analyses/test/genconfig_Bkg.txt"
#physics.producers.generate.inputfile : "Analyses/test/genconfig_fromBeam.txt"
services.TFileService.fileName : "BkgRates.root"
services.SeedService.baseSeed         :  0
services.SeedService.maxUniqueEngines :  20
