//
// Run-time config info for the event generators.
//
// $Id: genconfig_Bkg.txt,v 1.17 2012/02/20 21:07:17 onoratog Exp $
// $Author: onoratog $
// $Date: 2012/02/20 21:07:17 $
//
// Original author Rob Kutschke
// adapted by Gianni Onorato
// 

// what processes to do
bool ejectedProtonGun.do = 0;
bool decayinorbitGun.do = 0;
bool primaryProtonGun.do = 0;
bool ejectedNeutronGun.do = 1;
bool ejectedPhotonGun.do = 0;
bool conversionGun.do = 0;

//string decayinorbitGun.energySpectrum = "ShankerWanatabe";

// Limits on cos(polar angle):
double decayinorbitGun.czmin = -1.;
double decayinorbitGun.czmax = 1.;
double ejectedProtonGun.czmin = -1.;
double ejectedProtonGun.czmax = 1.;
//double ejectedProtonGun.pPulseShift = 300.;
double ejectedNeutronGun.czmin = -1.;
double ejectedNeutronGun.czmax = 1.;
double ejectedPhotonGun.czmin = -1.;
double ejectedPhotonGun.czmax = 1.;

double primaryProtonGun.czmin = 1;
double primaryProtonGun.czmax = 1;

// Position of PrimaryProtonGun (local to target)
vector<double> beamDisplacementOnTarget = {0.,0.,0.};

// Distribution parameter of Primary Proton Gun beam
double primaryProtonGun.stdDev = 1; //units are mm

//int decayinorbitGun.nToSkip = 200000; 
//int ejectedProtonGun.nToSkip = 323000;
//int ejectedNeutronGun.nToSkip = 380000;
//int ejectedPhotonGun.nToSkip = 100000;


// Energy Ranges; upper energy fro DIO is always conversion energy (MeV)
double decayinorbitGun.elow = 0.1;
//double decayinorbitGun.ehi = 50.;
double ejectedProtonGun.elow = 0.0;
double ejectedProtonGun.ehi = 300.;
double ejectedNeutronGun.elow = 0.03;
double ejectedNeutronGun.ehi = 150.;
double ejectedPhotonGun.elow = 0.;
double ejectedPhotonGun.ehi = 7.;

// Time limits in ns, relative to protons on target.
double decayinorbitGun.tmin  =  0.;
double decayinorbitGun.tmax  = 1694.;
double ejectedProtonGun.tmin  =  0.;
double ejectedProtonGun.tmax  = 1694.;
double ejectedNeutronGun.tmin  =  0.;
double ejectedNeutronGun.tmax  = 10000.;
double ejectedPhotonGun.tmin  =  0.;
double ejectedPhotonGun.tmax  = 1694.;
double primaryProtonGun.tmin  =  700.;
double primaryProtonGun.tmax  = 1694.;

// Mean multiplicities for the two background generators.
double ejectedProtonGun.mean = -1;
double ejectedNeutronGun.mean = -1;
double ejectedPhotonGun.mean = -1;
double decayinorbitGun.mean = -1;

bool FoilParticleGenerator.foldingTimeOption = false;

// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
