# Configuration file for NeutronRatesCounter
#  - Generate events including of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form StrawHits from StepPointMC objects
#  - Write event data to an output file
#  - Save state of random numbers to the event-data output file
#
# $Id: NeutronCRV.fcl,v 1.5 2012/03/02 17:16:22 gandr Exp $
# $Author: gandr $
# $Date: 2012/03/02 17:16:22 $
#
# Original author Gianni Onorato.

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"

# Give this process a name.
process_name : NeutronRatesCounter

# Read events from a file (made by Mu2eG4 example g4test_03.py)

#  module_type : RootInput
#  fileNames : ["/prj/mu2e/users/kutschke/beamlineData_01.root"]

source :
{
  module_type : EmptyEvent
  maxEvents : 100
}

services : @local::Services.SimAndReco

physics :
{
  producers:
  {
    # Make some generated tracks and add them to the event.
    generate:
    {
      module_type   : EventGenerator
      inputfile     : "Analyses/test/genconfigCRV.txt"
      seed          : [7789]
    }
    # Run G4 and add its hits to the event.
    g4run:
    {
      module_type          : G4
      generatorModuleLabel : generate
      seed                 : [9877]
    }
    # Form StrawHits (SH).
    # Note: In original py file, this is named makeTH, not SH
    #       But it is configured exactly as the standard makeSH
    makeSH: @local::makeSH        

    @table::CaloDigiMC.producers
    @table::CaloReco.producers

    # Save state of random numbers to the event.
    randomsaver : @local::randomsaver


  }

  filters:
  {
    # since looking at CRV, don't want this filter--> 
    # if no tracker or calo hits,still interesting
    #
    # filterEmpty :
    # {
    #   module_type      : FilterEmptyEvents
    #   makerModuleLabel : makeTH
    #   keepTrackOrCalo  : 0
    # }

  }

  analyzers:
  {
    # Look at the hits from G4.
    CountRates:
    {
      module_type   : NeutronCRV
      diagLevel     : 0
      makerModuleLabel : makeSH
      maxFullPrint  : 50
      g4ModuleLabel : g4run
      minimumEnergy   : 0.000
    }
  }

  p1 : [generate, g4run, makeSH]
  e1 : [CountRates, outfile ]
 

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  # Define the output file.
  outfile : 
  {
    module_type    : RootOutput
    fileName       : "NeutronCRVData.root"
    outputCommands : [ "keep *_*_*_*"
#                     , "drop mu2ePointTrajectorymv_*_*_*"
                     ]  
  }
}

physics.producers.makeSH.diagLevel : 0
physics.producers.makeSH.maxFullPrint : 5
services.TFileService.fileName : "NeutronRates.root"
services.GeometryService.inputFile : "Mu2eG4/test/geom_cosmic.txt"
services.SeedService.baseSeed : 8
services.SeedService.maxUniqueEngines : 20
