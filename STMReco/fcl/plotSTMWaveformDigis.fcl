#
# Plot STMWaveformDigis
#

#include "Offline/fcl/standardServices.fcl"
#include "Offline/STMReco/fcl/prolog.fcl"

process_name: PlotSTMWaveformDigis

source : {
  module_type : RootInput
}

services : {
  @table::Services.Core
  TFileService : { fileName : "stmWaveformDigis.root" }
}

physics: {
  producers : {  }
  filters : {  }
  analyzers : {
    plotHPGeWaveformDigis : {
      module_type : PlotSTMWaveformDigis
      stmWaveformDigisTag : "FromSTMTestBeamData:HPGe"
      subtractPedestal : false
      verbosityLevel : 0
      xAxis : "event_time"
      samplingFrequency : @local::STM.HPGe.samplingFrequency
    }
    plotLaBrWaveformDigis : {
      module_type : PlotSTMWaveformDigis
      stmWaveformDigisTag : "FromSTMTestBeamData:LaBr"
      subtractPedestal : false
      verbosityLevel : 0
      xAxis : "event_time"
      samplingFrequency : @local::STM.LaBr.samplingFrequency
    }

    plotHPGeWaveformDigisZP : {
      module_type : PlotSTMWaveformDigis
      stmWaveformDigisTag : "zeroSuppressHPGe"
      subtractPedestal : false
      verbosityLevel : 0
      xAxis : "event_time"
      samplingFrequency : @local::STM.HPGe.samplingFrequency
    }
    plotLaBrWaveformDigisZP : {
      module_type : PlotSTMWaveformDigis
      stmWaveformDigisTag : "zeroSuppressLaBr"
      subtractPedestal : false
      verbosityLevel : 0
      xAxis : "event_time"
      samplingFrequency : @local::STM.LaBr.samplingFrequency
    }
  }
  # setup paths
  trigger_paths: [  ]
  anaPath : [ plotHPGeWaveformDigis, plotLaBrWaveformDigis,
    plotHPGeWaveformDigisZP, plotLaBrWaveformDigisZP ]
  end_paths: [anaPath]
}

# Can define pedestals in fcl like the commented line below
# services.ProditionsService.stmEnergyCalib.pedestals : [ ["HPGe",100.0], ["LaBr",2000.0] ]
