#
# Plot STMWaveformDigis
#

#include "Offline/fcl/standardServices.fcl"
#include "Offline/STMReco/fcl/prolog.fcl"
#include "Offline/STMReco/fcl/prolog_testbeam.fcl"

process_name: PlotSTMWaveformDigis

source : {
  module_type : RootInput
}

services : {
  @table::Services.Core
  TFileService : { fileName : "stmWaveformDigis.root" }
}

physics: {
  producers : {  }
  filters : {  }
  analyzers : {
    plotHPGeWaveformDigis : {
      module_type : PlotSTMWaveformDigis
      stmWaveformDigisTag : "FromSTMTestBeamData:HPGe"
      subtractPedestal : false
      verbosityLevel : 0
      xAxis : "event_time"
    }
    plotLaBrWaveformDigis : {
      module_type : PlotSTMWaveformDigis
      stmWaveformDigisTag : "FromSTMTestBeamData:LaBr"
      subtractPedestal : false
      verbosityLevel : 0
      xAxis : "event_time"
    }

    plotHPGeWaveformDigisZP : {
      module_type : PlotSTMWaveformDigis
      stmWaveformDigisTag : "zeroSuppressHPGe"
      subtractPedestal : false
      verbosityLevel : 0
      xAxis : "event_time"
    }
    plotLaBrWaveformDigisZP : {
      module_type : PlotSTMWaveformDigis
      stmWaveformDigisTag : "zeroSuppressLaBr"
      subtractPedestal : false
      verbosityLevel : 0
      xAxis : "event_time"
    }
  }
  # setup paths
  trigger_paths: [  ]
  anaPath : [ plotHPGeWaveformDigis, plotLaBrWaveformDigis,
    plotHPGeWaveformDigisZP, plotLaBrWaveformDigisZP ]
  end_paths: [anaPath]
}

services.ProditionsService.stmEnergyCalib.pedestals : @local::STMTestBeam.Conditions.pedestals
services.ProditionsService.stmEnergyCalib.samplingFrequencies : @local::STMTestBeam.Conditions.samplingFrequencies
