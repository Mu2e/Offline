# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# this file is included by fcl/standardProducers.fcl inside the PROLOG section
#------------------------------------------------------------------------------
#include "TrkPatRec/fcl/Particle.fcl"
#include "TrkPatRec/fcl/PanelAmbigResolver.fcl" 
BEGIN_PROLOG

# this should go in a general file FIXME!!
FitDir : {
  downstream : 0
  upstream : 1
}

TimeCalculator : {
  TrkToCaloTimeOffset : @local::TrackCaloMatching.DtOffset
  CaloTimeErr : 0.5
}

# time clustering is the 1st stage of track finding 
TimeClusterFinder : {
  module_type  : TimeClusterFinder
  ClusterMVA : { MVAWeights : "TrkPatRec/test/TimeCluster.weights.xml" }
  ClusterCaloMVA : { MVAWeights : "TrkPatRec/test/TimeClusterCalo.weights.xml" }
  ComboHitCollection : "makePH"
  StrawHitFlagCollection : "FlagBkgHits:ComboHits"
  CaloClusterCollection : "CaloClusterFromProtoCluster"
  # enable calorimeter cluster info in time clustering
  CaloClusterCollection : "CaloClusterFromProtoCluster"
  UseCaloCluster : true
  UseCaloClusterPosition : true
  CaloClusterWeight : 10.0
  TestFlag : true
}
# specific time cluster finders for different particle hypotheses.  The redundant Calo time offset should come from conditions FIXME!
# note these are helicity-independent
TimeClusterFinderDe : {
  @table::TimeClusterFinder
  AveragePitch : 0.63 # signed
  T0Calculator : {
    @table::TimeCalculator
    StrawHitBeta : 1.0
  }
}
TimeClusterFinderUe : {
  @table::TimeClusterFinder
  AveragePitch : -0.63
  T0Calculator : {
    @table::TimeCalculator
    StrawHitBeta : 1.0
  }
}
# muons
TimeClusterFinderDmu : {
  @table::TimeClusterFinder
  AveragePitch : 0.63
  T0Calculator : {
    @table::TimeCalculator
    StrawHitBeta : 0.7
  }
}
TimeClusterFinderUmu : {
  @table::TimeClusterFinder
  AveragePitch : -0.63
  T0Calculator : {
    @table::TimeCalculator
    StrawHitBeta : 0.7
  }
}
# pions
TimeClusterFinderDpi : {
  @table::TimeClusterFinder
  AveragePitch : 0.63
  T0Calculator : {
    @table::TimeCalculator
    StrawHitBeta : 0.63
  }
}
TimeClusterFinderUpi : {
  @table::TimeClusterFinder
  AveragePitch : -0.63
  T0Calculator : {
    @table::TimeCalculator
    StrawHitBeta : 0.63
  }
}

# helix finding.  Search for both helicities
RobustHelixFinder : {
    module_type		: RobustHelixFinder
    ComboHitCollection     : "makePH"
    ComboHitFlagCollection : "FlagBkgHits:ComboHits"
    HelixStereoHitMVA      : { MVAWeights : "TrkPatRec/test/HelixStereoHitMVA.weights.xml" }
    HelixNonStereoHitMVA   : { MVAWeights : "TrkPatRec/test/HelixNonStereoHitMVA.weights.xml" }
    diagPlugin : { tool_type                    : "RobustHelixFinderDiag"
	mcTruth                                 : 0
    }
    T0Calculator : @local::TimeCalculator
}
RobustHelixFinderDe : {
  @table::RobustHelixFinder
  TimeClusterCollection  : "TimeClusterFinderDe"
}
RobustHelixFinderUe : {
  @table::RobustHelixFinder
  TimeClusterCollection  : "TimeClusterFinderUe"
}
RobustHelixFinderDmu : {
  @table::RobustHelixFinder
  TimeClusterCollection  : "TimeClusterFinderDmu"
}
RobustHelixFinderUmu : {
  @table::RobustHelixFinder
  TimeClusterCollection  : "TimeClusterFinderUmu"
}
RobustHelixFinderDpi : {
  @table::RobustHelixFinder
  TimeClusterCollection  : "TimeClusterFinderDpi"
}
RobustHelixFinderUpi : {
  @table::RobustHelixFinder
  TimeClusterCollection  : "TimeClusterFinderUpi"
}
# pattern recognition internals
# Kalman fit configuration for the seed fit (least squares configuration of Kalman fit)
KFSeed : {
  MaxIterations                   : 3
  fieldCorrection	      	  : false
  materialCorrection              : false
  seedsmear       		  : 10000
  maxhitchi                       : 5.0
  # interate the fit twice: once at the physical size of the straw, once at its RMS
    #  hiterr                          : [ 5.0, 1.44 ]
  # time external error, assuming s drift velocity of 62.5 #mu m / ns
  hiterr                          : [ 80., 23.04]
  ambiguityStrategy       	  : [ 0  , 0    ]
  t0Tolerance			  : [ 5.0, 5.0  ]
  weedhits			  : [ true, true ]
  ResolveAfterWeeding		  : false
  AddMaterial			  : [ false, false ]
#  initT0			  : true
  initT0			  : false 
  useTrkCaloHit                   : false
  updateT0			  : [false, false ]
  dtOffset                        : @local::TrackCaloMatching.DtOffset
  strawHitT0Weight                : 1
  caloHitT0Weight                 : 10
  caloHitError                    : 15.0 # mm 
  T0Calculator			  : @local::TimeCalculator
  mcTruth                         : 0
  printUtils                      : { @table::TrkReco.PrintUtils}
}

# Kalman fit configuration for the final track fit.  This also runs the simulated annealing
KFFinal : {
  materialCorrection          : true
  fieldCorrection	      : true
  initT0		      : false
  ResolveAfterWeeding	      : false
  # time external error, assuming s drift velocity of 62.5 #mu m / ns
#  hiterr                      : [ 5.0, 1.5, 0.5, 0.25, 0.125, 0.05, 0.0, 0.0, 0.0]
  hiterr                      : [ 32., 16., 8., 4, 2., 1.0, 0.0, 0.0, 0.0] # ns
  t0Tolerance                 : [ 2.0, 1.0, 1.0, 1.0 , 0.5  , 0.5 , 0.2, 0.2, 0.1]
  updateT0                    : [false, false, false, true, true, true, true, true, true ]
# specific choices for ambiguity resolution
  weedhits		      : @local::PanelAmbig.Weed
  AddMaterial		      : [ false, false, false, true, false, false, false, true, false ]
  PanelAmbigResolver          : @local::PanelAmbig.Resolver
  ambiguityStrategy           : @local::PanelAmbig.Strategy
# Extend downstream to the calorimeter by default
  DownstreamExtent	      : 3
  # the following is redundant with the TrkTimeCalculator offset FIXME!
  dtOffset                    : @local::TrackCaloMatching.DtOffset
  strawHitT0Weight            : 1 # unused? FIXME!
  caloHitT0Weight             : 10 # unused? FIXME!
  caloHitError                : 15.0 # mm 
  T0Calculator		      : @local::TimeCalculator
  useTrkCaloHit               : true
  t0window                    : 4.0
  mcTruth                     : 0
  printUtils                  : { @table::TrkReco.PrintUtils } 
}

# KalFit (Kalman fiter)  configuration for Doublet Ambig Resolver
CprKFFinal : {
    debugLevel                              : 0
    minnstraws                              : 15
    MaximumMaterialFlightDifference         : 1000 # mm separation in flightlength
    materialCorrection                      : true
    weedhits                                : [ true , true , true , true, true , true , true , true, true ]
    maxhitchi                               : 5. # 3.5
    maxPull                                 : 10.
    maxweed                                 : 10
    mingap				    : 1.0
    ambiguityStrategy    		    : [ 4    , 4    , 4    , 4   , 4    , 4    , 4    , 4   , 4    ]
    AddMaterial		                    : [ false, false, false, true, false, false, false, true, true ]
    hiterr 		                    : [ 80.  , 24.  , 8.   , 4.  , 2.   , 0.8  , 0.0  , 0.0 , 0.0  ]
    t0Tolerance				    : [ 2.0  , 1.0  , 1.0  , 1.0 , 0.5  , 0.5  , 0.2  , 0.2 , 0.1  ]
    # not used t0ErrorFactor                           : 1.2                # scale ?
    minT0DOCA                               : -0.2               # 
    t0window                                : 2.5
    dtOffset                                : @local::TrackCaloMatching.DtOffset
    # did Dave mean that? 
    updateT0			            : [ false, true, true, true, true, true, true, true, true ]
    DivergeFlt                              : 1000.
    #------------------------------------------------------------------------------
    #  KalContext parameters  (there are more to define ! )
    #------------------------------------------------------------------------------
    MinNDOF                                 : 10 # this means 15 hits min
    #------------------------------------------------------------------------------
    # ambiguity resolver parameters
    #------------------------------------------------------------------------------
    FixedAmbigResolver                      : {}
    HitAmbigResolver                        : {}
    PocaAmbigResolver                       : {}
    PanelAmbigResolver                      : {}
    #------------------------------------------------------------------------------
    # doublet-based ambiguity resolver parameters
    #------------------------------------------------------------------------------
    DoubletAmbigResolver                    : { @table::TrkReco.DoubletAmbigResolver }
    fieldCorrection			    : true
#    scaleErrDoublet                         : 5.
#    minDriftDoublet                         : 0.3
#    deltaDriftDoublet                       : 0.3
#    maxDoubletChi2                          : 9
#   sigmaSlope                              : 0.025
    printUtils                              : { @table::TrkReco.PrintUtils }
}


# Seed fit; this is really a least-squares fit, but uses the Kalman infrastructure
KSF : {
  module_type                 : KalSeedFit
  ComboHitCollection	      : "makeSH"
  KalFit		      : @local::KFSeed
  ParameterErrors	      : [10.0,0.05,0.001,10.0,0.05]
#  ParameterErrors	      : [1.0,1.0,1.0,1.0,1.0]
  MaxAddDoca                  : 7.    # mm
  MaxAddChi                   : 5.    # normalized unit
  rescueHits                  : 1     # turned on (CalPatRec style)
}
# Final Kalman fit, including material and magnetic inhomogeneity effects
KFF : {
  module_type                 : KalFinalFit
  ComboHitCollection	      : "makeSH"
  StrawHitFlagCollection      : "FlagBkgHits:StrawHits"
  CaloClusterCollection       : "CaloClusterFromProtoCluster"
  KalFit		      : @local::KFFinal
  GoodKallSeedFitBits	      : ["SeedOK"]
  AddHitSelectionBits	      : []
  AddHitBackgroundBits	      : []
  ZSavePositions : [-1631.11, -1522.0, 0.0, 1522.0 ]
}

# seed Fit configuration for specific particles
#  First, downstream electrons
KSFDeM	: {
  @table::KSF
  SeedCollection      : "HelixFinderDe:Positive"
  fitparticle	      : @local::Particle.eminus
  fitdirection	      : @local::FitDir.downstream 
}
# upstream electrons
KSFUeM	: {
  @table::KSF
  SeedCollection      : "HelixFinderUe:Negative"
  fitparticle	      : @local::Particle.eminus
  fitdirection	      : @local::FitDir.upstream 
}
#  downstream positrons
KSFDeP	: {
  @table::KSF
  SeedCollection      : "HelixFinderDe:Negative"
  fitparticle	      : @local::Particle.eplus
  fitdirection	      : @local::FitDir.downstream 
}
# upstream positrons
KSFUeP	: {
  @table::KSF
  SeedCollection      : "HelixFinderUe:Positive"
  fitparticle	      : @local::Particle.eplus
  fitdirection	      : @local::FitDir.upstream 
}
# downstream mu minus
KSFDmuM	: { 
  @table::KSF
  SeedCollection     : "HelixFinderDmu:Positive"
  fitparticle	      : @local::Particle.muminus
  fitdirection	      : @local::FitDir.downstream 
}
# upstream mu minus
KSFUmuM	: {
  @table::KSF
  SeedCollection     : "HelixFinderUmu:Negative"
  fitparticle	      : @local::Particle.muminus
  fitdirection	      : @local::FitDir.upstream 
}
# downstream mu plus
KSFDmuP	: {
  @table::KSF
  SeedCollection     : "HelixFinderDmu:Negative"
  fitparticle	      : @local::Particle.muplus
  fitdirection	      : @local::FitDir.downstream 
}
# upstream mu plus
KSFUmuP	: {
  @table::KSF
  SeedCollection     : "HelixFinderUmu:Positive"
  fitparticle	      : @local::Particle.muplus
  fitdirection	      : @local::FitDir.upstream 
}
# downstream pi minus
KSFDpiM	: {
  @table::KSF
  SeedCollection     : "HelixFinderDpi:Positive"
  fitparticle	      : @local::Particle.piminus
  fitdirection	      : @local::FitDir.downstream 
}
# upstream pi minus
KSFUpiM	: {
  @table::KSF
  SeedCollection     : "HelixFinderUpi:Negative"
  fitparticle	      : @local::Particle.piminus
  fitdirection	      : @local::FitDir.upstream 
}
# downstream pi plus
KSFDpiP	: {
  @table::KSF
  SeedCollection     : "HelixFinderDpi:Negative"
  fitparticle	      : @local::Particle.piplus
  fitdirection	      : @local::FitDir.downstream 
}
# upstream pi plus
KSFUpiP	: {
  @table::KSF
  SeedCollection     : "HelixFinderUpi:Positive"
  fitparticle	      : @local::Particle.piplus
  fitdirection	      : @local::FitDir.upstream
}
# Final Fit configuration for specific particles
#  First, downstream electrons
KFFDeM			      : { 
  @table::KFF
  SeedCollection      : "KSFDeM"
  fitparticle	      : @local::Particle.eminus
  fitdirection	      : @local::FitDir.downstream 
}

# upstream electrons
  KFFUeM			      : { 
  @table::KFF
  SeedCollection      : "KSFUeM"
  fitparticle	      : @local::Particle.eminus
  fitdirection	      : @local::FitDir.upstream 
}

#  downstream positrons
KFFDeP			      : { 
  @table::KFF
  SeedCollection      : "KSFDeP"
  fitparticle	      : @local::Particle.eplus
  fitdirection	      : @local::FitDir.downstream 
}
# upstream positrons
KFFUeP			      : { 
  @table::KFF
  SeedCollection      : "KSFUeP"
  fitparticle	      : @local::Particle.eplus
  fitdirection	      : @local::FitDir.upstream 
}

# downstream mu minus
KFFDmuM			      : { 
  @table::KFF
  SeedCollection     : "KSFDmuM"
  fitparticle	      : @local::Particle.muminus
  fitdirection	      : @local::FitDir.downstream 
}

# upstream mu minus
KFFUmuM			      : { 
  @table::KFF
  SeedCollection     : "KSFUmuM"
  fitparticle	      : @local::Particle.muminus
  fitdirection	      : @local::FitDir.upstream 
}

# downstream mu plus
KFFDmuP			      : { 
  @table::KFF
  SeedCollection     : "KSFDmuP"
  fitparticle	      : @local::Particle.muplus
  fitdirection	      : @local::FitDir.downstream 
}

# upstream mu plus
KFFUmuP			      : { 
  @table::KFF
  SeedCollection     : "KSFUmuP"
  fitparticle	      : @local::Particle.muplus
  fitdirection	      : @local::FitDir.upstream
}

# downstream pi minus
KFFDpiM			      : { 
  @table::KFF
  SeedCollection     : "KSFDpiM"
  fitparticle	      : @local::Particle.piminus
  fitdirection	      : @local::FitDir.downstream 
}

# upstream pi minus
KFFUpiM			      : { 
  @table::KFF
  SeedCollection     : "KSFUpiM"
  fitparticle	      : @local::Particle.piminus
  fitdirection	      : @local::FitDir.upstream 
}

# downstream pi plus
KFFDpiP			      : { 
  @table::KFF
  SeedCollection     : "KSFDpiP"
  fitparticle	      : @local::Particle.piplus
  fitdirection	      : @local::FitDir.downstream 
}

# upstream pi plus
KFFUpiP			      : { 
  @table::KFF
  SeedCollection     : "KSFUpiP"
  fitparticle	      : @local::Particle.piplus
  fitdirection	      : @local::FitDir.upstream
}

# Final fit of merged Helices : these depend on CalPatRec

MHFinalFitDeM                : { 
  @table::KFFDeM
  SeedCollection : MHSeedFitDem
}

MHFinalFitDeP                :  {
  @table::KFFDeP
  SeedCollection : MHSeedFitDep
}

MHFinalFitDmuM               : { 
  @table::KFFDmuM
  SeedCollection : MHSeedFitDmm
}
#
MHFinalFitDmuP                :  {
  @table::KFFDmuP
  SeedCollection : MHSeedFitDmp
}

# Declare a table with all the modules needed for track reconstruction
Tracking : {
  producers : {
    TimeClusterFinderDe  : @local::TimeClusterFinderDe
    HelixFinderDe  : @local::RobustHelixFinderDe
    TimeClusterFinderDmu  : @local::TimeClusterFinderDmu
    HelixFinderDmu  : @local::RobustHelixFinderDmu
    TimeClusterFinderDpi  : @local::TimeClusterFinderDpi
    HelixFinderDpi  : @local::RobustHelixFinderDpi
    TimeClusterFinderUe  : @local::TimeClusterFinderUe
    HelixFinderUe  : @local::RobustHelixFinderUe
    TimeClusterFinderUmu  : @local::TimeClusterFinderUmu
    HelixFinderUmu  : @local::RobustHelixFinderUmu
    TimeClusterFinderUpi  : @local::TimeClusterFinderUpi
    HelixFinderUpi  : @local::RobustHelixFinderUpi
# should add proton FIXME!
# now all the different track fits based on these inputs
# First, seed fits
    KSFDeM	  : @local::KSFDeM
    KSFUeM	  : @local::KSFUeM
    KSFDeP	  : @local::KSFDeP
    KSFUeP	  : @local::KSFUeP
    KSFDmuM	  : @local::KSFDmuM
    KSFUmuM	  : @local::KSFUmuM
    KSFDmuP	  : @local::KSFDmuP
    KSFUmuP	  : @local::KSFUmuP
    KSFDpiM	  : @local::KSFDpiM
    KSFUpiM	  : @local::KSFUpiM
    KSFDpiP	  : @local::KSFDpiP
    KSFUpiP	  : @local::KSFUpiP
# Final Kalman fit
    KFFDeM	  : @local::KFFDeM
    KFFUeM	  : @local::KFFUeM
    KFFDeP	  : @local::KFFDeP
    KFFUeP	  : @local::KFFUeP
    KFFDmuM	  : @local::KFFDmuM
    KFFUmuM	  : @local::KFFUmuM
    KFFDmuP	  : @local::KFFDmuP
    KFFUmuP	  : @local::KFFUmuP
    KFFDpiM	  : @local::KFFDpiM
    KFFUpiM	  : @local::KFFUpiM
    KFFDpiP	  : @local::KFFDpiP
    KFFUpiP	  : @local::KFFUpiP
# configuration for using the sequence with MergeHelix
# Only downstream: upstream can't be seeded by a cluster!
    MHFinalFitDeM	  : @local::MHFinalFitDeM
    MHFinalFitDeP	  : @local::MHFinalFitDeP
    MHFinalFitDmuM        : @local::MHFinalFitDmuM
    MHFinalFitDmuP	  : @local::MHFinalFitDmuP
    
  }

# define standard outputs 
  Output : {
    Digis : [ "keep mu2e::StrawDigis_*_*_*" ]
    Hits : [ "keep mu2e::StrawHitFlagDetailmu2e::BitMaps_FlagBkgHits_*_*",
	 "keep mu2e::ComboHitCollection_*_*_*",
	  "keep mu2e::StrawHits_*_*_*"	]

    Tracks : [ "keep mu2e::StrawHitFlagDetailmu2e::BitMaps_FlagBkgHits_StrawHits_*",
	 "keep mu2e::ComboHitCollection_makePH_*_*",
	  "keep mu2e::KalSeeds_*_*_*",
	  "keep mu2e::KalSeeds_*_*_*",
	   "keep mu2e::HelixSeeds_*_*_*",
	    "keep mu2e::TimeClusters_*_*_*" ]

    MCTracks : ["keep mu2e::GenParticles_*_*_*",
		"keep mu2e::SimParticles_*_*_*" ]
    MCDigis : ["keep mu2e::StrawDigiMCs_*_*_*"]
    MCHits : [ "keep mu2e::StepPointMCs_*_tracker_*",
	      "keep mu2e::StepPointMCs_*_virtualdetector_*"]

  }
}
# production sequences for tracking specific paricles; first electrons
Tracking.TPRDeM  : [ TimeClusterFinderDe, HelixFinderDe, KSFDeM, KFFDeM ]
Tracking.TPRUeM  : [ TimeClusterFinderUe, HelixFinderUe, KSFUeM, KFFUeM ]
Tracking.TPRDeP  : [ TimeClusterFinderDe, HelixFinderDe, KSFDeP, KFFDeP ]
Tracking.TPRUeP  : [ TimeClusterFinderUe, HelixFinderUe, KSFUeP, KFFUeP ]
#muons
Tracking.TPRDmuM  : [ TimeClusterFinderDmu, HelixFinderDmu, KSFDmuM, KFFDmuM ]
Tracking.TPRUmuM  : [ TimeClusterFinderUmu, HelixFinderUmu, KSFUmuM, KFFUmuM ]
Tracking.TPRDmuP  : [ TimeClusterFinderDmu, HelixFinderDmu, KSFDmuP, KFFDmuP ]
Tracking.TPRUmuP  : [ TimeClusterFinderUmu, HelixFinderUmu, KSFUmuP, KFFUmuP ]
#pions
Tracking.TPRDpiM  : [ TimeClusterFinderDpi, HelixFinderDpi, KSFDpiM, KFFDpiM ]
Tracking.TPRUpiM  : [ TimeClusterFinderUpi, HelixFinderUpi, KSFUpiM, KFFUpiM ]
Tracking.TPRDpiP  : [ TimeClusterFinderDpi, HelixFinderDpi, KSFDpiP, KFFDpiP ]
Tracking.TPRUpiP  : [ TimeClusterFinderUpi, HelixFinderUpi, KSFUpiP, KFFUpiP ]

END_PROLOG
