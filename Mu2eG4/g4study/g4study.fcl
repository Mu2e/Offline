#
# fcl config file to perform Geant4 studies using the Mu2e framework infrastructure and simple geometry
#
# Original author K.L. Genser
#

#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"

BEGIN_PROLOG
stepperout: {
   type: constant
   value: false
   write: "stepper"
}
END_PROLOG

# Give this job a name.
process_name : g4study

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 100
}

services : {
  @table::Services.SimAndReco
  TFileService          : { fileName : "g4study.root" }
  GeometryService        : { @table::Services.SimAndReco.GeometryService
    inputFile            : "Offline/Mu2eG4/g4study/g4study_Tube_geom.txt"
    simulatedDetector    : { tool_type   : "ConstructEnvTube" }
  }
}

physics : {

  producers:  {

    generate: {
      module_type          : EventGenerator
      inputfile            : "Offline/Mu2eG4/g4study/g4studyParticleGun.txt"
      allowReplacement     : true
      messageOnReplacement : true
    }

    g4run :  @local::g4run
    randomsaver          : @local::randomsaver

  }

   filters : {
      g4consistent: {
         module_type: FilterStatusG4
         input: "g4run"
         maxAcceptedStatus: 0  //  status 10 and above means StepPointMCCollection may have non-dereferencable pointers
      }

   } // filters

  analyzers: {

    checkhits:
    {
      module_type            : Mu2eG4StudyReadBack
      generatorModuleLabel   : generate
      g4ModuleLabel          : g4run
      physVolInfoInput       : g4run
      minimumEnergy          : 0.000
      maxPrint               : 100
      diagLevel              : 2
    }

  }

  p1 : [generate , g4run , g4consistent, randomsaver]
#  e1 : [dumper, outfile]
  e1 : [dumper, checkhits , outfile]
#  e1 : [checkhits , outfile]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:  {

  outfile : {
    module_type   :   RootOutput
    fileName      :   "nts.owner.g4studyTube.version.sequencer.root"
  }

  dumper : {
      module_type              : FileDumperOutput
      wantProductFullClassName : true
  }

}

# Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :   8
services.SeedService.maxUniqueEngines :  20
#services.message.destinations.log.noTimeStamps : true
# inform the geometry service it is not the standard Mu2e Detector
# done via the tool_type above now
#physics.producers.g4run.visualization.initMacro : "Mu2eG4/vis/visxz.mac"
#physics.producers.g4run.visualization.initMacro : "Mu2eG4/vis/vismqt.mac"

physics.producers.g4run.physics.physicsListName : "ShieldingM"
#physics.producers.g4run.physics.bfieldMaxStep   : 500000. // not implemented (no field)
physics.producers.g4run.debug.diagLevel         : 1
physics.producers.g4run.debug.printElements     : true
physics.producers.g4run.debug.worldVerbosityLevel : 2
#physics.producers.g4run.debug.checkFieldMap : 0 // not implemented (no field)
physics.producers.g4run.TrajectoryControl.mcTrajectoryMinSteps:     0
physics.producers.g4run.TrajectoryControl.mcTrajectoryMomentumCut : 0. // MeV/c
physics.producers.g4run.TrajectoryControl.saveTrajectoryMomentumCut : 0.  // MeV/c
physics.producers.g4run.TrajectoryControl.perVolumeMinDistance : {}
#physics.producers.g4run.Mu2eG4CommonCut: { type: kineticEnergy cut: 1000000. }
physics.producers.g4run.SDConfig: {
       enableSD: [] // not implemented
       TimeVD: { times: [0.01] }
      }
// The line below causes a StepPointMC being stored for each step; comment it out to disable it
physics.producers.g4run.Mu2eG4SteppingOnlyCut : @local::stepperout
physics.producers.g4run.Mu2eG4StackingOnlyCut : @local::mu2eg4NoCut
services.scheduler.wantSummary: true
services.TimeTracker.printSummary: true
#physics.producers.g4run.debug.steppingVerbosityLevel : 1
#physics.producers.g4run.debug.writeGDML: true
physics.producers.g4run.debug.GDMLFileName: "g4study_Tube.gdml"
#physics.producers.g4run.debug.printElements : true
