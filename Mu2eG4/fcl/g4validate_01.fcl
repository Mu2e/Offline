#
#  - Generate events including one conversion electron plus
#    some number of background processes.
#  - Run these through G4.
#  - No event display.
#  - Form Hits from StepPointMC objects
#  - reconstruct electron tracks
#
# $Id: g4validate_01.fcl,v 1.1 2014/08/29 16:16:17 knoepfel Exp $
# $Author: knoepfel $
# $Date: 2014/08/29 16:16:17 $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"


# Give this job a name.
process_name : G4Validate01

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 20000
}

services : {

  message               : @local::default_message
  TFileService          : { fileName : "g4validate_01.root" }
  RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }

  GeometryService        : { inputFile      : "Mu2eG4/geom/geom_common.txt"            }
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
  GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
  BTrkHelper             : @local::BTrkHelperDefault
  G4Helper               : { }
  SeedService            : @local::automaticSeeds

}

physics : {

  producers: {

    generate: @local::generate
    g4run : @local::g4run
    @table::EventMixing.producers 
    @table::TrackerMC.producers
    @table::CaloDigiMC.producers
    @table::CaloReco.producers
    @table::CaloCluster.producers
    @table::TrkHitReco.producers
    @table::Tracking.producers

   }

  analyzers: {

    checkhits: {
      module_type            : ReadBack
      generatorModuleLabel   : generate
      g4ModuleLabel          : g4run
      caloReadoutModuleLabel : CaloShowerStepROFromShowerStep
      diagLevel              : 0
      minimumEnergy          : 0.000
      maxFullPrint           : 5
    }

    readStrawHits: {
      module_type      : ReadStrawHit
      recoModuleLabel : makeSH
      simModuleLabel : makeSD
      diagLevel        : 0
      maxFullPrint     : 5
    }

    RKFDeM :
    {
      module_type    : ReadKalFits
      KalDiag : @local::KalDiagDirect
      fitterModuleLabel : KFFDeM
      fitparticle : 11
      fitdirection : 0
    }

  }

  p1 : [generate, g4run,
	  @sequence::EventMixing.TimeMaps,
	  makeSD, makeSH,
	  @sequence::CaloDigiMC.DigiSim,
          @sequence::CaloReco.Reco,
          @sequence::Tracking.DigiSim, 
          @sequence::Tracking.TPRDeM
       ]

  e1 : [ checkhits, readStrawHits, RKFDeM ]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

# needed to fill the diagnostic histograms
physics.analyzers.RKFDeM.KalFitMC.diaglLevel : 2

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  8
services.SeedService.maxUniqueEngines :  20

// this adds stoppingtarget to Mu2eG4/fcl/prolog.fcl definition
physics.producers.g4run.SDConfig.enableSD : [ tracker, calorimeter, calorimeterRO, CRV, stoppingtarget, virtualdetector ]

// This tells emacs to view this file in the JavaScript mode.
// Local Variables:
// mode:js
// End:
