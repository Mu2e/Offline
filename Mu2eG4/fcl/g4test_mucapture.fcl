# Configuration file for G4TestMuCapture
#
#  - This is an experimantal configuration, do NOT use unless you know the details
#  - Generate 200 events 
#
#  - Run these through G4.
#  - No event display.
#  - Form StrawHits from StepPointMC objects
#  - Write event data to an output file
#  - Save state of random numbers to the event-data output file
#
# $Id: g4test_mucapture.fcl,v 1.1 2014/08/29 16:16:17 knoepfel Exp $
# $Author: knoepfel $
# $Date: 2014/08/29 16:16:17 $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

# Give this job a name.
process_name : G4TestMuCapture

# Start form an empty source
source : {
  module_type : EmptyEvent
  maxEvents : 200
}

services : @local::Services.Sim

physics : {

  producers: {

    # Generate the event
    generate: @local::generate

    # Run G4 and add its output to the event.
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSD : @local::makeSD
    makeSH : @local::makeSH

    @table::CaloDigiMC.producers
    @table::CaloReco.producers

    # Save state of the random number engines.
    randomsaver : @local::randomsaver

  }

  analyzers: {

    checkhits: {
      module_type            : ReadBack
      generatorModuleLabel   : generate
      g4ModuleLabel          : g4run
      caloReadoutModuleLabel : CaloShowerStepROFromShowerStep
      diagLevel              : 0
      minimumEnergy          : 0.000
      maxFullPrint           : 201
    }

    readStrawHits: {
      module_type      : ReadStrawHit
      recoModuleLabel : makeSH
      simModuleLabel : makeSD
      diagLevel        : 0
      maxFullPrint     : 100
    }

  }

  p1 : [generate, g4run, makeSD, makeSH, @sequence::CaloDigiMC.DigiSim,@sequence::CaloReco.Reco, randomsaver ]
  e1 : [checkhits, readStrawHits, outfile]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs: {

  outfile : {
    module_type   :   RootOutput
    fileName      :   "data_mucapture.root"

    //  An example of how to drop data products.
    //  outputCommands:   [ "keep *_*_*_*"
    //                       ,"drop mu2e::PointTrajectorymv_*_*_*"
    //                    ]
  }

}


services.TFileService.fileName : "g4test_mucapture.root"
services.GeometryService.inputFile : "Mu2eG4/test/geom_mucapture.txt"

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  8
services.SeedService.maxUniqueEngines :  20



// Enable diagnsotic printout for pedagogical purposes.
physics.producers.makeSH.diagLevel : 0
physics.producers.makeSH.maxFullPrint : 5

physics.producers.generate.inputfile : "Mu2eG4/test/genconfig_mucapture.txt"

physics.producers.g4run.diagLevel  : 0
