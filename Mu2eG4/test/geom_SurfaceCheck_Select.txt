//
// Use G4's surface check technology to check for overlaps.
//
// Based on geom_SurfaceCheck.txt,v 1.1 2013/04/12 22:17:27 kutschke Exp $
// 
// 
//

//#include "Mu2eG4/geom/geom_common_DOE_review_2017.txt"
#include "Mu2eG4/geom/geom_common.txt"

bool g4.doSurfaceCheck    = false;

// By default, all of these should be false.  Uncomment to set true.

// *** Various portions of the PS
// bool PS.doSurfaceCheck = true;
// bool targetPS.doSurfaceCheck = true;
// bool PSShield.doSurfaceCheck = true;
// bool clamp_supWheel.doSurfaceCheck = true;

// *** Various portions of the TS
// bool ts.cryo.doSurfaceCheck = true;
// bool ts.polyliner.doSurfaceCheck = true;
// bool ts.cas.doSurfaceCheck = true;
// bool ts.coils.doSurfaceCheck = true;
// bool ts.coll.doSurfaceCheck = true;
// bool pbar.doSurfaceCheck = true;
// bool muondegrader.doSurfaceCheck = true;

// *** Various portions of the DS
// bool ds.doSurfaceCheck = true;
// bool dsCoil.doSurfaceCheck = true;
// bool dsRing.doSurfaceCheck = true;
// bool dsSpacer.doSurfaceCheck = true;
// bool dsSupport.doSurfaceCheck = true;
// bool dsThShield.doSurfaceCheck = true;
// bool dsVacuum.doSurfaceCheck = true;
// bool dsShielding.doSurfaceCheck = true;
// bool protonAbsorber.doSurfaceCheck = true;
// bool mbs.doSurfaceCheck = true;
// *** The Tracker and Calorimeter
// bool tracker.doSurfaceCheck = true;
// bool calorimeter.doSurfaceCheck = true;

// *** CRV
// bool crs.doSurfaceCheck = true;

// *** Virtual detectors
// bool vd.doSurfaceCheck = true;

// *** ProtonBeamDump areas
// bool protonBeamDump.dirt.doSurfaceCheck = true;
// bool protonBeamDump.shielding.doSurfaceCheck = true;
// bool protonBeamDump.core.doSurfaceCheck = true;
// bool protonBeamDump.mouth.doSurfaceCheck = true;
// bool protonBeamDump.neutronCave.doSurfaceCheck = true;

// *** External Shielding (both upstream and downstream), Saddles, 
// *** Services (pipes, racks, etc)
// bool ExtShield.doSurfaceCheck = true;
// bool Saddles.doSurfaceCheck = true;
// bool Services.doSurfaceCheck = true;

// *** Special:  The building and dirt.  Elements can be selected in small
// *** groups by naming the first two (only!) parts of their name strings.
// *** For example:
// bool building.psArea.doSurfaceCheck = true;
// *** would do a surface check for all these building pieces:
// ***  "building.psArea",
// ***  "building.psArea.ceiling",
// ***  "building.psArea.ceiling.E",
// ***  "building.psArea.ceiling.N",
// ***  "building.psArea.ceiling.SW",
// ***  "building.psArea.hatch.block",
// ***  "building.psArea.hatch.lid",
// ***  "building.psArea.hatch.lip.N",
// ***  "building.psArea.hatch.lip.S",
// ***  "building.psArea.hatch.lower",
// ***  "building.psArea.hatch.upper",
// ***  "building.psArea.ShieldingBlock",
// ***  "building.psArea.upper.N",
// ***  "building.psArea.upper.S",
// *** And here is an example for dirt...
// bool dirt.foundation.doSurfaceCheck = true;
// *** which likewise checks a number of similarly named volumes.


// number of random points on the volume surface
int  g4.nSurfaceCheckPointsPercmsq =   1;
int  g4.minSurfaceCheckPoints      = 100; // per volume
int  g4.maxSurfaceCheckPoints = 10000000; // per volume

vector<string> bfield.innerMaps = {};
vector<string> bfield.outerMaps = {};

// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
