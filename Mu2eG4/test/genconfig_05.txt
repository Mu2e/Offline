//
// Run-time config info for the event generators.
//
//
// Original author Rob Kutschke
// added EjectedProtonGun process

// what processes to do
bool ejectedProtonGun.do = 0;
bool ejectedNeutronGun.do = 0;
bool ejectedPhotonGun.do = 0;
bool conversionGun.do = 0;
bool decayinorbitGun.do = 0;
bool primaryProtonGun.do = 1;
bool nuclearCaptureGun.do = 0;

// Limits on cos(polar angle):
double conversionGun.czmin = -0.5;
double conversionGun.czmax =  0.5;
double decayinorbitGun.czmin = 0.5;
double decayinorbitGun.czmax = 0.7;
double ejectedProtonGun.czmin = -1;
double ejectedProtonGun.czmax = 1;
double ejectedNeutronGun.czmin = -1;
double ejectedNeutronGun.czmax = 1;
double ejectedPhotonGun.czmin = -1;
double ejectedPhotonGun.czmax = 1;
double nuclearCaptureGun.czmin = -1;
double nuclearCaptureGun.czmax = 1;

double primaryProtonGun.czmin = 1;
double primaryProtonGun.czmax = 1;

// Position of PrimaryProtonGun (local to target)
vector<double> beamDisplacementOnTarget = {0.,0.,0.};

// Distribution parameter of Primary Proton Gun beam
double primaryProtonGun.stdDev = 1; //units are mm


// Energy Ranges; upper energy fro DIO is always conversion energy (MeV)
double decayinorbitGun.elow = 100.;
double ejectedNeutronGun.elow = 0.0;
double ejectedNeutronGun.ehi = 100.;
// Number of bins must be compatible with the spectrum table (0.5 KeV each bin)
// that is: (ehi - elow)/0.0005;
int ejectedNeutronGun.nbins = 200;
double ejectedProtonGun.elow = 0.0;
double ejectedProtonGun.ehi = 300.;
double ejectedPhotonGun.elow = 0.0;
double ejectedPhotonGun.ehi = 7.;
double nuclearCaptureGun.protonElow = 0.0;
double nuclearCaptureGun.protonEhi = 300.;
double nuclearCaptureGun.neutronElow = 0.0;
double nuclearCaptureGun.neutronEhi = 0.1;
double nuclearCaptureGun.photonElow = 0.0;
double nuclearCaptureGun.photonEhi = 100.;




// Time limits in ns, relative to protons on target.
double conversionGun.tmin  =    0.;
double conversionGun.tmax  = 1694.;
double decayinorbitGun.tmin  =    0.;
double decayinorbitGun.tmax  = 1694.;
double ejectedNeutronGun.tmin  =   0.;
double ejectedNeutronGun.tmax  = 1694.;
double ejectedProtonGun.tmin  =    0.;
double ejectedProtonGun.tmax  = 1694.;
double ejectedPhotonGun.tmin  =    0.;
double ejectedPhotonGun.tmax  = 1694.;
double primaryProtonGun.tmin  =    0.;
double primaryProtonGun.tmax  = 1694.;
double primaryProtonGun.tmin  =    0.;
double primaryProtonGun.tmax  = 1694.;
double nuclearCaptureGun.tmin  =   0.;
double nuclearCaptureGun.tmax  = 1694.;

// Mean multiplicities for the two background generators.
double cosmicDYB.mean =  0.0;
double picapture.mean =  0.0;

double ejectedProtonGun.mean = -1;
double ejectedPhotonGun.mean = -1;
double ejectedNeutronGun.mean = -1;

double nuclearCaptureGun.mean = -1;
double nuclearCaptureGun.protonMean = 0.1;
double nuclearCaptureGun.neutronMean = 1.5;
double nuclearCaptureGun.photonMean = 2;


// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
