// (Muon) Stoping Target Monitor (STM)
//
// 
// Author: A. Palladino
//
// Notes: All dimensions in mm


bool   stm.build  = true;
int    stm.verbosityLevel = 0;
bool   stm.visible = true;
bool   stm.solid   = false;

// build virtual detectors throughout the MSTM area
int    vd.verbosityLevel = 0;
bool   vd.STMUpStr.build     = false; //VD86 Rectangle in x-y plane, same size as the CRV (1mm dnStr of CRV)
bool   vd.STMMagDnStr.build  = false; //VD87 Rectangle in x-y plane, same size as the CRV
bool   vd.STMSSCollUpStr.build = false; //VD101 Disk upstream of Spot-Size collimator
double vd.STMSSCollUpStr.r     = 200.0;// r=20cm 
bool   vd.STMCollDnStr.build = false; //VD88 Disk downstream of Spot-Size collimator
double vd.STMCollDnStr.r     = 200.0;// r=20cm 
bool   vd.STMDet1UpStr.build = false; //VD89 Disk in x-y plane, same size as the Ge detector 1
bool   vd.STMDet2UpStr.build = false; //VD90 Disk in x-y plane, same size as the Ge detector 2
bool   vd.STMFieldOfViewCollDnStr.build = false; //VD100
// build virtual detector inside DS Neutron Shielding
bool   vd.DSNeutronShieldExit.build = false; //VD81
double vd.DSNeutronShieldExit.r     =  110.0;//Must be the same as the following 2 values,

//External (Neutron) Shielding radius and VD81 radius
//These should be modified only in ExtShieldDownstream_v??.txt
//double ExtShieldDownstream.holeRadiusType11Box4Hole1 =  110.0;
//double ExtShieldDownstream.detecHoleRadius           =  110.0;

//DEPRECATED: Absorber in the MBS endplug hole. This causes too much brem photons for the STM (too high rate)
//bool   mbs.CLV2.absorber.build          = true;
//string mbs.CLV2.absorber.MaterialName   = "Polyethylene096";  
//double mbs.CLV2.absorber.halfLength     = 15.0;//mm

//Build STM within z = 34 inches (863.6 mm) of downstream hall wall
double stm.z.allowed = 863.6;

//STM may have two detectors
bool   stm.det1.build                     = true;
string stm.det1.material                  = "G4_Ge";
double stm.det1.rIn                       =   0.0;
double stm.det1.rOut                      =  45.0;
double stm.det1.xoffset                   =  50.0; //45mm = 1.77 inches
double stm.det1.halfLength                =  40.0;
string stm.det1.can.material              = "G4_Al";
string stm.det1.can.gas                   = "G4_Galactic"; // ~vacuum
double stm.det1.can.rIn                   =  46.5;
double stm.det1.can.rOut                  =  47.5; //47.5mm radius is for the 3.75in OD can from Ortec
double stm.det1.can.UpStrSpace            = 100.0;  // z=10cm space between this and previous element
double stm.det1.can.halfLength            =  50.0;
string stm.det1.can.UpStrWindowMaterial   = "G4_Al";
double stm.det1.can.UpStrWindowHalfLength =   0.5; //Standard Al window is 1mm thick

bool   stm.det2.build                     = true;
string stm.det2.material                  = "G4_Ge";
double stm.det2.rIn                       =   0.0;
double stm.det2.rOut                      =  45.0;
double stm.det2.xoffset                   = -50.0; //45mm = 1.77 inches
double stm.det2.halfLength                =  40.0;
string stm.det2.can.material              = "G4_Al";
string stm.det2.can.gas                   = "G4_Galactic"; // ~vacuum
double stm.det2.can.rIn                   =  46.5;
double stm.det2.can.rOut                  =  47.5; //47.5mm radius is for the 3.75in OD can from Ortec
double stm.det2.can.UpStrSpace            = 100.0;  // z=10cm space between this and previous element
double stm.det2.can.halfLength            =  50.0;
string stm.det2.can.UpStrWindowMaterial   = "G4_Al"; //"G4_Be";
double stm.det2.can.UpStrWindowHalfLength =   0.5;   //0.381; //Standard Be window is 0.762mm thick

//"spot-size" collimator, just upstream of the detector(s)
bool   stm.SScollimator.build             =  true; //
string stm.SScollimator.material          = "G4_Pb";
double stm.SScollimator.UpStrSpace        =    0.0; // this parameter not used for this collimator
double stm.SScollimator.halfWidth         =  215.9; // 
double stm.SScollimator.halfHeight        =  228.6; // 
double stm.SScollimator.halfLength        =   76.2; // 76.2mm = 3 inch halflength 
bool   stm.SScollimator.liner.build       =  true; //
string stm.SScollimator.liner.material    =  "G4_W"; 
double stm.SScollimator.liner.halfWidth   =  105.0; // 
double stm.SScollimator.liner.halfHeight  =   55.0; // 
double stm.SScollimator.liner.halfLength  =   76.2; // 
double stm.SScollimator.liner.cutOutHalfLength  =  0.0; // no cutout for this collimator
double stm.SScollimator.hole1.xoffset     =   40.6; // (38.1mm = 1.5 inches)
double stm.SScollimator.hole1.radiusUpStr =    6.795; // DEPRECATED parameter, no longer used
double stm.SScollimator.hole1.radiusDnStr =    5.642; // 5.642mm for A=1.0 cm^2 hole
bool   stm.SScollimator.hole1.liner.build      =  false; // liner along the length of the hole itself
double stm.SScollimator.hole1.liner.thickness  =  10.0; // 1cm thick hole liner
bool   stm.SScollimator.hole2.build       =   true; // has a second collimation hole?
double stm.SScollimator.hole2.xoffset     =  -40.6; // (38.1mm = 1.5 inches)
double stm.SScollimator.hole2.radiusUpStr =    6.795; // DEPRECATED parameter, no longer used
double stm.SScollimator.hole2.radiusDnStr =    5.642; // 5.642mm for A=1.0 cm^2 hole
bool   stm.SScollimator.hole2.liner.build      =  false; // liner along the length of the hole itself
double stm.SScollimator.hole2.liner.thickness  =  10.0; // 1cm thick hole liner
string stm.SScollimator.hole.liner.material    =  "G4_W"; 

//"field-of-view" collimator, just downstream of the sweeper magnet
bool   stm.FOVcollimator.build                  =  true; //
string stm.FOVcollimator.material               = "G4_Pb";
double stm.FOVcollimator.UpStrSpace             =    3.0; // z=2 cm space between this and sweeper magnet
double stm.FOVcollimator.halfWidth              =  205.9; // same width as magnet
double stm.FOVcollimator.halfHeight             =  218.6; // same height as magnet
double stm.FOVcollimator.halfLength             =  225.0; // 12 inches thick = 6 inch halfLength
bool   stm.FOVcollimator.liner.build            =  true;
string stm.FOVcollimator.liner.material         =  "Polyethylene096";
double stm.FOVcollimator.liner.cutOutHalfLength =  150.0;
double stm.FOVcollimator.liner.halfWidth        =  100.0; // 
double stm.FOVcollimator.liner.halfHeight       =  100.0; // 
double stm.FOVcollimator.liner.halfLength       =   75.0; // 
double stm.FOVcollimator.hole1.xoffset          =    0.0; // 
double stm.FOVcollimator.hole1.radiusUpStr      =   71.0; // Use 68.mm
double stm.FOVcollimator.hole1.radiusDnStr      =   71.0; // Use 68.mm
bool   stm.FOVcollimator.hole1.liner.build      =  false; // liner along the length of the hole itself
double stm.FOVcollimator.hole1.liner.thickness  =    0.0; // no liner
bool   stm.FOVcollimator.hole2.build            =  false; // has a second collimation hole?
double stm.FOVcollimator.hole2.xoffset          =    0.0; // 
double stm.FOVcollimator.hole2.radiusUpStr      =    0.0; // 
double stm.FOVcollimator.hole2.radiusDnStr      =    0.0; // 
bool   stm.FOVcollimator.hole2.liner.build      =  false; // liner along the length of the hole itself
double stm.FOVcollimator.hole2.liner.thickness  =    0.0; // no liner
string stm.FOVcollimator.hole.liner.material    =  "G4_W"; 
bool   stm.FOVcollimator.absorber.build         =   true; //
double stm.FOVcollimator.absorber.halfLength    =   5.0; //
string stm.FOVcollimator.absorber.material      =  "Polyethylene096"; 


//Sweeper magnet
bool   stm.magnet.build          = true;
string stm.magnet.material       = "G4_Fe";
double stm.magnet.UpStrSpace     =  190.0;  // 19cm space between this and CRV-D
double stm.magnet.halfLength     =  457.2;  // 1m long magnet
double stm.magnet.halfWidth      =  215.9;  // 1m wide magnet
double stm.magnet.halfHeight     =  228.6;  // 1m high magnet
double stm.magnet.holeHalfHeight =  177.8;  // 12 inch high hole
double stm.magnet.holeHalfWidth  =   95.0;  // this must be larger than stm.pipe.rOut
double stm.magnet.field          =    0.051;  // Tesla (510 Gauss)
bool   stm.magnet.field.visible   = false;

//Support (Table) on which to put the sweeper magnet and field-of-view collimator
bool   stm.magnet.stand.build          = true;
string stm.magnet.stand.material       = "StainlessSteel";
double stm.magnet.stand.topExtraWidth  = 300.0;
double stm.magnet.stand.topExtraLength =   8.0;
double stm.magnet.stand.topHalfHeight  =  30.0;
double stm.magnet.stand.legRadius      =  50.0;

//Transport Pipe (vacuum or He filled, so prevent Bremstrahlung before sweeper magnet)
bool   stm.pipe.build             = false;
double stm.pipe.rIn               = 92.0;
double stm.pipe.rOut              = 94.0;
string stm.pipe.material          = "StainlessSteel";
string stm.pipe.gas.material      = "G4_He";
double stm.pipe.UpStrSpace        = 10.0;
double stm.pipe.DnStrHalfLength   =  2.0; //was 25.0
string stm.pipe.UpStrWindow.material   = "G4_MYLAR";
double stm.pipe.UpStrWindow.halfLength = 0.089;
string stm.pipe.DnStrWindow.material   = "G4_MYLAR";
double stm.pipe.DnStrWindow.halfLength = 0.089;
double stm.pipe.flange.halfLength      = 0.9; //was 15.0
double stm.pipe.flange.overhangR       = 20.0;

//Support (Table) on which to put the sweeper magnet and field-of-view collimator
bool   stm.detector.stand.build          = true;
string stm.detector.stand.material       = "StainlessSteel";
double stm.detector.stand.topExtraWidth  = 100.0;
double stm.detector.stand.topExtraLength =   0.0;
double stm.detector.stand.topHalfHeight  =  30.0;
double stm.detector.stand.legRadius      =  50.0;

//shield pipe to reduce CRV deadtime
bool   stm.shield.build                = true;
double stm.shield.rIn                  = 110.0;
double stm.shield.widthLiner           = 10.0;
double stm.shield.rOut                 = 130.0;//WARNING: should be 160
double stm.shield.pipe.halfLength      = 209.5;
string stm.shield.materialLiner        = "Polyethylene096";
string stm.shield.material             = "StainlessSteel";
double stm.shield.UpStrSpace           =  10.0;
double stm.shield.DnStrSpace           =   1.0;
double stm.shield.DnStrWall.halfLength =  50.0;

//NOTE: uncomment the next two lines if you want to test the STM design as documented in docDB-XXXX with the thicker CRV shield
//int crs.nModulesD4 = 0;
//double stm.shield.rOut = 160.0;

// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
