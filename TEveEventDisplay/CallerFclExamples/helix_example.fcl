# author : Sophie Middleton
# purpose : Basic example fcl for use with the helix instance

#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/TEveEventDisplay/fcl/prolog.fcl"

services : @local::Services.Reco

process_name : HelixED

source : { module_type : RootInput }

physics :
{
 analyzers : { @table::TEveDis.analyzers}
}

# edit the below options for different products:
physics.analyzers.TEveEventDisplayHelix.filler.addHits : true
physics.analyzers.TEveEventDisplayHelix.filler.addTrkHits : false
physics.analyzers.TEveEventDisplayHelix.filler.addTimeClusters : false
physics.analyzers.TEveEventDisplayHelix.filler.addTracks : true
physics.analyzers.TEveEventDisplayHelix.filler.addCrvHits : false
physics.analyzers.TEveEventDisplayHelix.filler.addCosmicSeedFit : false
physics.analyzers.TEveEventDisplayHelix.filler.addClusters : true
physics.analyzers.TEveEventDisplayHelix.filler.addMCTraj : true
physics.analyzers.TEveEventDisplayHelix.show.showCRV : false
physics.EndPath  : [ @sequence::TEveDis.seqHelix]


