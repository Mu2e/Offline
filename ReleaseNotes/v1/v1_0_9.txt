

           Release notes for Mu2e Offline software, v1_0_9

19) July 26, 2011 ehrlich
    event display:
    - preliminary implementation of Kalman tracks and hits

18) July 19, 2011 ehrlich
    brought the module label back into EventDisplayFrame

17) July 18, 2011 ehrlich
    EventDisplay/src/ContentSelector.cc
    - Removed two const_casts. Thanks Chris Green.


16) July 17, 2001 kutschke
    Reorganized:
      Analyses/inc/GeneratorSummaryHistograms.hh
      Analyses/src/GeneratorSummaryHistograms.cc
      Filters/src/MinimumHits_module.cc

15) July 17, 2001 kutschke
    HitMakers/src/MakeStrawHit_module.cc
      - Major refactoring at the front-end.
      - The code now looks for all collections of StepPointMC with the instance name "tracker".
      - It combines all in the per straw hitmap object.

14) July 17, 2001 kutschke
    Mu2eG4/src/StrawSD.cc
      - Do not store a StepPointMC if it has zero energy deposition and it was created by
        a photon, neutron or anti-neutron.
      - For the DIO sample this greatly reduces the number of StepPointMCs made without
        affecting the StrawHits ( the StrawHitMaker throws out steps with very low
        energy deposit ).
      - This should produce no signficiant chagne to any result

13) July 16, 2001 kutschke
    New package to hold filter modules.  First module is one to select
    a module with any StepPointMC in the tracker or calorimeter.  Also makes
    diagnostics histograms on selected events.
      Filters/src/MinimumHits_module.cc
      Filters/src/SConscript

12) July 16, 2001 kutschke
    New code to make standard histograms of generated quantities:
       Analyses/inc/GeneratorSummaryHistograms.hh
       Analyses/src/GeneratorSummaryHistograms.cc

    Revised histograms to closer match the newly files above:
      EventGenerator/inc/DecayInOrbitGun.hh
      EventGenerator/src/DecayInOrbitGun.cc
      EventGenerator/inc/EjectedProtonGun.hh
      EventGenerator/src/EjectedProtonGun.cc

11) July 16, 2001 kutschke
    Moved from Mu2eG4 to Analyses so that it can be called from other
    modules without forcing an unnecessary link dependence to G4.
    Also added histograms and did some refactoring.
      Analyses/inc/DiagnosticsG4.hh
      Analyses/src/DiagnosticsG4.cc
      Mu2eG4/inc/DiagnosticsG4.hh
      Mu2eG4/src/DiagnosticsG4.cc

    Modified to use the new DiagnosticsG4:
      Mu2eG4/src/G4_module.cc

10) July 16, 2001 kutschke
    Lots of small fixes:

    Remove obsolete files that should have been removed during the
    port to art:
      Analyses/inc/CEL_plugin.hh
      Analyses/inc/RPC_plugin.hh

    Fix minor compile time warnings and remove tabs:
      Analyses/src/ReadVirtualDetector_module.cc
      Mu2eG4/src/DSGradient/Field.cc

      MCDataProducts/inc/PhysicalVolumeInfo.hh
      Mu2eG4/src/SConscript

9) July 13, 2001 logash

   Number of changes needed to do stored muons simulation (if field 
   gradient is applied in DS3).

   1. Added new option to FromG4BLFile generator: 
       bool   fromG4BLFile.duplicateParticles = false;
     If it is true, the generator reads one particle from the file 
     and adds it "fromG4BLFile.mean" times to the event. If it is 
     false, the generator each time reads new event from the file 
     (default behaviour). This is useful if one needs to loop many 
     times over the same input file. 

   2. Added option to set minimum kinetic energy individually for 
      each kind of particle. For example, the following settings:
	 bool   g4.killLowEKine  = true;
	 double g4.eKineMin      = 0.1;    // Kinetic energy in MeV
	 vector<int>    g4.killLowEKinePDG = {211, -211,   13,  -13,   11,  -11};
	 vector<double> g4.eKineMinPDG     = {9.0,  9.0, 20.0, 20.0, 95.0, 95.0};
      any particle with kinetic energy <0.1 MeV is killed, and pions are killed
      if kinetic energy goes below 9 MeV, muons - 20 MeV, electrons - 95 MeV.

      The kill is implemented in both StackingAction and Stepping Action.

    3. Added new option to kill muons if they cannot be stored in DS:
         bool g4.killPitchToLowToStore = false;

       This is only used in very special studies. By default it is false.      

    4. Removed mother volume for MBS (see item 3.2 in this document). With the 
       mother volume there is rare crash of G4, which needs to be investigated.

   Modified files:

     EventGenerator/inc/FromG4BLFile.hh
     EventGenerator/src/FromG4BLFile.cc
     Mu2eG4/inc/StackingAction.hh
     Mu2eG4/inc/SteppingAction.hh
     Mu2eG4/src/Mu2eWorld.cc
     Mu2eG4/src/StackingAction.cc
     Mu2eG4/src/SteppingAction.cc
     Mu2eG4/src/constructMBS.cc
     Mu2eG4/test/beamline_genconfig.txt
     Mu2eG4/test/geom_01.txt

8) July 11, 2011 kutschke
   To break a linkage loop I moved PDGCode.hh from Mu2eUtilities/inc to MCDataProducts/inc.
   This required changing everywhere that the PDGCode.hh was included.
   Also removed PDGCode.hh from DataProducts/src/classes.h and classes_def.xml.

7) July 11, 2011 kutschke
   It is not necessary to explicitly construct either elements or the standard
   materials that are known to G4 - G4 builds these on demand.
     Mu2eG4/inc/ConstructMaterials.hh
     Mu2eG4/src/ConstructMaterials.cc
       - Remove the constructG4Materials method.

     Mu2eG4/test/geom_01.txt
       - Remove the defintions of g4.elements and g4.materials.

6) July 11, 2011 ehrlich
   Added scroll bars to the info field of the event display.

5) July 11, 2011 aluca
   Changed material of the calorimeter crystals

4) July 7, 2011 logash

   Small change in DSGradientField and Mu2eWorld to allow working with
   small gradients.

3) July 6, 2011 logash

   1. Added option to G4 module to generate ntuple with the field map.
      This is sometimes useful for debugging. To switch on the ntuple
      creation, add the following option to G4 module in .fcl file:
         checkFieldMap : 1
      By default, this option is set to zero (no ntuple creation).

      The ntuple with the name "ntfield" is created in "g4run" 
      subdirectory of output ROOT file. The ntuple shows the value of
      field along the main particle path (main axises of PS, TS and DS).
      At each point the actual field is shown. 

      The following variables are available in the ntuple:
         xg,yg,zg - coordinates in G4 frame
         xl,yl,zl - coordinates in Mu2e frame
	 nx,ny,nz - vector along the path
         bx,by,bz - B-field in tesla
         btot - field magnitude
         bl - field along the path
         s - distance along the path from the Mu2e origin

      The typical plot, which shows field magnitude at different z:
         ntfield->Draw("btot:zl")

   2. Created mother volume for Muon Beam Stop. Even if uniform or 
      gradient field is used in DS3, mapped field is used in MBS. 
      This is important to not allow particles from MBS to enter
      back to DS.

   3. Updated time virtual detector ntuple in ReadVirtualDetector_module:
      added more variables, switched from using preStepPoint to 
      postStepPoint.

   Added files:

     Mu2eG4/inc/generateFieldMap.hh
     Mu2eG4/src/generateFieldMap.cc

   Modified files:

     Analyses/src/ReadVirtualDetector_module.cc
     Mu2eG4/src/G4_module.cc
     Mu2eG4/src/Mu2eWorld.cc
     Mu2eG4/src/SteppingAction.cc
     Mu2eG4/src/constructMBS.cc

2) June 30, 2011 genser 

   Added a Mu2e specific physics list based on QGSP_BERT with
   G4EmStandardPhysics replaced with G4EmStandardPhysics_option3
   It can be enabled e.g. by setting 
   string g4.physicsListName = "QGSP_BERT_MU2E00"; 
   in geom_01.txt
     Mu2eG4/inc/QGSP_BERT_MU2E00.hh
     Mu2eG4/inc/QGSP_BERT_MU2E00.icc
     Mu2eG4/src/physicsListDecider.cc
     MCDataProducts/inc/ProcessCode.hh
   Enabled setting physics list verbosity level; assigned diagLevel to
   _rmvlevel (verbosity level); printed it in the log
     Mu2eG4/src/G4_module.cc

1) June 30, 2011 logash

  1. Added posibility to specify gradient field in DS3.
     The value of gradient is set in the geometry file: 
       double toyDS.gradient      = 0.0; // Tesla/m
     It is only applied if detSolFieldForm is 1 or 2.

  2. Added posibility to kill particles if global time 
     reaches maximum allowed time which is set in the 
     geometry file:
       double g4.steppingActionMaxGlobalTime = 0; //ns
     Particles are killed in SteppingAction.

  3. Extended ProcessCode enum to add code for particles
     killed by time.

  4. Added "time virtual detector" in SteppingAction: position
     and momentum of all particles are recorded at global times, 
     specified in the geometry file:
       vector<double> g4.steppingActionTimeVD = { 500, 700, 1000 }; //ns
     This information is stored in yet another StepPointMC collection,
     named "timeVD".

  5. ReadVirtualDetector_module reads "timeVD" collection and creates 
     output ntuple, similar to virtual detector ntuple.

  6. Added option to ReadVirtualDetector_module to allow to save in
     the particles ntuple only those particles, which alive at particular
     global time (set with module parameter timeCut).

  7. Updated tool Mu2eG4/test/makeGeneratorFile.py to create input file 
     for generator using data from virtual detectors: 
       - added ability to read many input files
       - added ability to generate weight for input files, where 
         decays were switched off
       - added more help info

  8. Updated standard geometry file: removed vertical rotation of the 
     proton target. All recent simulations were done with the target 
     rotated only horizontally.

  New files:

    Mu2eG4/inc/DSGradientField.hh
    Mu2eG4/src/DSGradientField.cc

  Updated files:

    Analyses/src/ReadVirtualDetector_module.cc
    BFieldGeom/inc/BFieldManager.hh
    BFieldGeom/src/BFieldManagerMaker.cc
    MCDataProducts/inc/ProcessCode.hh
    Mu2eG4/inc/FieldMgr.hh
    Mu2eG4/inc/Mu2eWorld.hh
    Mu2eG4/inc/SteppingAction.hh
    Mu2eG4/src/EventAction.cc
    Mu2eG4/src/FieldMgr.cc
    Mu2eG4/src/G4_module.cc
    Mu2eG4/src/Mu2eWorld.cc
    Mu2eG4/src/SteppingAction.cc
    Mu2eG4/test/beamline_genconfig.txt
    Mu2eG4/test/geom_01.txt
    Mu2eG4/test/makeGeneratorFile.py
