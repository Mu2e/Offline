
           Release notes for Mu2e Offline software, v0_0_3


Most people will be mainly concerned with item 1, which may break
some previous code.

Also, any old event data files that contain CrudeStrawHit objects will
not work.

The second most interesting change will be items 3, 11, 12, which
exercise the new features of the CrudeStrawHitsCollection class.

1)
  LTrackerGeom/inc/StrawIndex.hh

  This is a major rewrite that will break some code.  

  Previously this class was a typedef to int.  It is now my first 
  attempt at a typesafe index class: if you provide a int to a member
  function in CrudeStrawHitCollection that expects a StrawIndex, or 
  vice versa, you will get a compiler error.

  This is motivated as follows:  one can CrudeStrawHitCollection
  for a hit, either by giving its index within the collection, or by 
  giving the StrawIndex of the hit.  If you pass the wrong argument
  to one of these functions you will get a wrong answer and, at 
  least some of the time, the code will not recogize the error and 
  continue.  This new version of StrawIndex will give compiler errors 
  if you pass the wrong type of argment to the accessor methods of
  CrudeStrawHitCollection.

  We will need experience to see if this is more trouble than
  it is worth.

  Internally this is just an int but the class provides no
  automatic conversions to/from int.  You need to do extra
  work to get the conversion; this extra work should not be necessary
  for most user algorithms.

  Look at the following for examples:
    HitMakers/src/MakeCrudeStrawHit_plugin.cc
    HitMakers/src/MCSH_Test_plugin.cc

2) Change these classes to use the new StrawIndex class:
     LTrackerGeom/inc/LTracker.hh
     LTrackerGeom/src/LTracker.cc
     LTrackerGeom/inc/Straw.hh
     LTrackerGeom/src/LTrackerMaker.cc
     LTrackerGeom/src/Straw.cc
     Mu2eG4/src/ReadBack_plugin.cc
     Mu2eG4/src/StrawPlacer.cc
     ToyDP/inc/StepPointMC.hh
  
3) Separate the persistent data of the CrudeStrawHitCollection
   from its non-persistent data.

Remove
 ToyDP/inc/CrudeStrawHitCollection.hh 

Add:
 
 ToyDP/inc/CrudeStrawHitPData.h
 LTrackerGeom/inc/CrudeStrawHitCollection.hh
 LTrackerGeom/src/CrudeStrawHitCollection.cc

PData is persistent data and is a data product.

The new version of CrudeStrawHitCollection, in LTrackerGeom is a 
wrapper around CrudeStrawHitPData that adds some new functions, including:
 - Access hits by StrawIndex
 - Automatically follow DPIndices back to their precursors.


4) Add:
    ToyDP/inc/DPIndex.hh
    Mu2eUtilities/inc/resolveDPIndices.hh

   Classes to implement references from one data product to another.
   The DPIndex class uniquely describes one element in a data product
   by (ProductID, offset).

   There are three free functions in resolveDPIndices.hh that can follow
   DPIndices and return pointers.

5) Use DPIndex to refer back to StepPointMC objects.
     ToyDP/inc/CrudeStrawHit.hh
     ToyDP/src/CrudeStrawHit.cc

6) Add new libraries to the link list:
     Example01/src/SConscript
     Example02/src/SConscript
     HitMakers/src/SConscript
     ToyDP/src/SConscript

7) Had  <iostream> but only need <ostream>:
     Mu2eUtilities/inc/SimpleConfig.hh
   
8) Clean up operator==() and add operator!=().  
   In some cases, also include only <ostream>, not <iostream>.
     LTrackerGeom/inc/LayerId.hh
     LTrackerGeom/inc/SectorId.hh
     LTrackerGeom/inc/StrawId.hh

9) Remove superfluous inlines and other general cleanup.
    ToyDP/inc/StepPointMC.hh
    ToyDP/src/StepPointMC.cc

10) Updated for the new and deleted data products.
     ToyDP/src/classes.h
     ToyDP/src/classes_def.xml

11) Remove lots of useless code that was there for historical reasons.
    Take advantage of the StrawIndex class.
      HitMakers/src/MakeCrudeStrawHit_plugin.cc

12) HitMakers/src/MCSH_Test_plugin.cc
    HitMakers/test/makehits.py

    New plugin to test CrudeStrawHitCollection and the templates
    found in Mu2eUtilities/inc/resolveDPIndices.hh

    Modify py file to run the tests.




