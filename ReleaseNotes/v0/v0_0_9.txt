
           Release notes for Mu2e Offline software, v0_0_9


1) Added the x tilt to the LTracker. 
   Also increase the inner radius a small amount to remove straw overlaps.
   TrackerGeom/inc/Sector.hh
   LTrackerGeom/inc/LTracker.hh 
   LTrackerGeom/inc/LTrackerMaker.hh 
   LTrackerGeom/src/LTrackerMaker.cc 
   Mu2eG4/src/Mu2eWorld.cc 
   Mu2eG4/test/geom_01.txt 

   This also included:
    - bug fixes to Mu2eWorld.cc
       - fix inner radii for the upstream and downstream DS vacuum.
       - fix offset
    - increase rOut and zHalfLength of the Ltracker Mother volume.

   Mu2eUtilities/inc/TwoLinePCA.hh 
    - add methods to return the values of s1 and s2.

2) Followup to 1.  Distinguish the length of the tracker mother
   volume from the length of the straws.
     LTrackerGeom/inc/LTracker.hh
     LTrackerGeom/inc/LTrackerMaker.hh
     LTrackerGeom/src/LTracker.cc
     LTrackerGeom/src/LTrackerMaker.cc
     Mu2eG4/test/geom_01.txt

3) Add runtime control of debug printout for SteppingAction and StrawSD.
       Mu2eG4/inc/SteppingAction.hh 
       Mu2eG4/src/SteppingAction.cc 
       Mu2eG4/inc/StrawSD.hh 
       Mu2eG4/src/StrawSD.cc 
       Mu2eG4/src/G4_plugin.cc 
       Mu2eG4/src/Mu2eWorld.cc 

   Add commented out examples of how to enable debug printout.
       Mu2eG4/test/geom_01.txt

4) Change the default LTracker to v0. Previously the default was v2,
   which runs faster than v0, particularly at startup. In v2, the 
   straws in each sector live within a sector mother volume; the problem
   was that the sector mother volumes overlapped. This caused straws
   to be missed and hits to be created in weird spots.
      Mu2eG4/src/Mu2eWorld.cc 

5) Change the algorithm to pad the mother volumes.  Previously the padding
   was multiplicative and was much to large.  Now it is additive and is
   at the micron level, which should be significant within the numerical
   precision of G4 but not cause artificial overlaps.
     LTrackerGeom/src/LTrackerMaker.cc

6) Moved the code that selects the physics list out of G4_plugin.cc into a 
   new function, physicsListDecider.cc.  The geometry file has also changed.

   To select a physics list specify the following in your geom_01.txt

   string g4.physicsListName = "N01";
   
   The value can be one of: "Minimal", "N01" or the name of a physics list
   known to G4.  "Minimal" will give the transport-only list we used for
   debugging the geometry; "N01" will give the list cribbed from G4 novice example
   N01.  If G4 does not recognize the name of a physics list it will default
   to QGSP_BERT.

   We still have the problem that the step lengths in the display are too long for
   QGSP_BERT, so the default has stayed at "N01".


7) Moved the code that copies StepPointMC objects from the internal G4 collections 
   into a data product. This code was in G4_plugin and it has been moved into
   its own function, Mu2eG4/src/addStepPointMCs.cc

8) New code to streamline the addition of G4StepLimiter's to our physics lists
   This inherits from G4VPhysicsConstructor so that it can be added to the output
   of lists created by the G4PhysListFactory.
     Mu2eG4/inc/StepLimiterPhysConstructor.hh 
     Mu2eG4/src/StepLimiterPhysConstructor.cc 
   This is the actual code to add G4StepLimiter's.  It is called from the
   above class and from the classes MinimalPhysicsList and PhysicsList.
     Mu2eG4/inc/addStepLimiter.hh 
     Mu2eG4/src/addStepLimiter.cc

9) Use the tools created in 8 to simplify these routines that create physics lists
   or append to them.
     Mu2eG4/src/physicsListDecider.cc 
     Mu2eG4/inc/PhysicsList.hh 
     Mu2eG4/src/PhysicsList.cc 
     Mu2eG4/src/MinimalPhysicsList.cc

10) The parameters that control the accuracy of the magnetic field integrator
    code were set to small values for all fields, even uniform fields with an
    exact helix integrator.  This slowed things down a lot.  Change the code
    use the default values if the field is uniform ( this is fast ) and to use
    the slow values only for non-uniform fields.
      Mu2eG4/src/Mu2eWorld.cc

11) Mu2eWorld had a private method of getMaterial().  This has been turned into
    a new class, MaterialFinder.  The reasons is prep for splitting Mu2eWorld into
    many functions ( which do not see a private member function of Mu2eWorld ).
    Why a class, not a free function?  To avoid the need to pass config on every call
    ( or alternatively, do a service lookup on every call ).
      Mu2eG4/src/Mu2eWorld.cc
      Mu2eG4/inc/Mu2eWorld.hh
      Mu2eG4/inc/MaterialFinder.hh
      Mu2eG4/src/MaterialFinder.cc

12) Code to construct a calorimeter.  So far it just contains the calorimeter mother volume.
      Mu2eG4/inc/constructCalorimeter.hh
      Mu2eG4/src/constructCalorimeter.cc
      Mu2eG4/test/geom_01.txt

13) Tweak Mu2e world so that exact helix stepper has the same behaviour as before the
    the full field was added.

14) Modify persistable classes in TrackerGeom to use int32_t instead of int for persistable data.
    This may make it impossible to read some previously written files.


15) Make the name of the auxillary particle data table file run time configurable.  Also
    put default values of both particle data files into Mu2eG4/test/conditions_01.txt

16) First step of splitting Mu2eWorld into smaller pieces. The stopping targets and the three
    versions of the LTracker were each moved to their own files.  I also changed the numbering
    scheme of the versions of the ltracker, they are now 1,2,3 not 0,1,2.  The default is 1,
    the straws placed without substructure of any kind.

17) setup.sh
    Change to g4neutron   v3_13a
    This has assorted bug fixes relative to v3_13.
    Also adds the environment variable G4NEUTRONHPDATA that should have been defined but was not.

18) Next round of splitting up Mu2eWorld.
    New routines:
      Mu2eG4/inc/constructDummyStoppingTarget.hh
      Mu2eG4/inc/constructDummyTracker.hh
      Mu2eG4/src/constructDummyStoppingTarget.cc
      Mu2eG4/src/constructDummyTracker.cc
    Modifed routines:
      Mu2eG4/inc/MaterialFinder.hh   - add a method that allows user to provide a default value.
      Mu2eG4/src/MaterialFinder.cc   - 
      Mu2eG4/inc/nestTubs.hh         - add a method that uses a TubsParams object to define parameters
      Mu2eG4/src/Mu2eWorld.cc        - removed code moved to the new routines.
      Mu2eG4/test/geom_01.txt        - added parameters for the dummy target and tracker volumes.

19) Modify the classes in common to LTracker and TTracker in preparation for the first TTracker
    release.  Add a new accessor methods to most classes.  This required corresponding changes
    in LTracker, since the new features must be in both classes.  Added fillpointers() which is designed
    for use with future persistency.  The old FillPointers1 and FillPointers2 will soon go away in 
    favour of fillpointers.  Also removed tabs and deleted some obsolete commented out code.
       TrackerGeom/inc/Device.hh  
       TrackerGeom/inc/Layer.hh  
       TrackerGeom/inc/Sector.hh 
       TrackerGeom/inc/Straw.hh  
       TrackerGeom/inc/Tracker.hh  
       TrackerGeom/src/Device.cc  
       TrackerGeom/src/Layer.cc  
       TrackerGeom/src/Sector.cc 
       TrackerGeom/src/Straw.cc

       LTrackerGeom/inc/LTracker.hh 
       LTrackerGeom/src/LTracker.cc


20) New routines to implement the TTracker
      TTrackerGeom/inc/*
      TTrackerGeom/src/*
      Mu2eG4/inc/constructTTracker.hh  
      Mu2eG4/src/constructTTrackerv1.cc

    After the first commit I modified constructTTrackerv1.cc so that it only draws the per device
    envelope volumes, not each straw.  Otherwise graphics is much to slow.

21) Changes to existing routines to add TTracker code or changes to allow code
    to work with both the LTracker and the TTracker.
       Mu2eG4/test/geom_01.txt
       GeometryService/src/GeometryService.cc 
       GeometryService/src/SConscript
       Mu2eG4/src/Mu2eWorld.cc
       Mu2eG4/inc/addStepPointMCs.hh 
       Mu2eG4/src/addStepPointMCs.cc
       Mu2eG4/src/ReadBack.cc
       Mu2eG4/src/StrawSD.cc

    The changes to StrawSD are not yet complete.  The mainline fully supports
    both trackers but the debug code only half supports the TTracker.
    The code that does not work with the TTracker is protected.

22) New utility routine to select which ever tracker is currently available
    and to return a reference to the base class.
       GeometryService/inc/getTrackerOrThrow.hh 
       GeometryService/src/getTrackerOrThrow.cc

23) Improve const correctness.
       Mu2eG4/inc/nestTubs.hh  
       Mu2eG4/src/nestTubs.cc

24) Changes to HoughTransform from Peter Shanahan.  I think this is still in development.
    See cvs logs.

25) Changes for cosmic studies from Yury.   I think that these are mostly for his internal
    use so I will let him explain.

26) April 23, kutschke
    Add KalmanTests and BaBar directories.
    Modify Offline/setup.sh to call a script inside the BaBar directories; there
    are 10 packages in all.  For now the BaBar code is being kept in an svn repository 
    at LBL.  The scripts checkout.csh, status.csh and update.csh in BaBar/ do the
    indicated operations on all 10 pacakges.   The BaBar code uses a different include
    file convention than does Mu2e.  So we need a extra subdirectory with symbolic links.
    This directory, and the links, are created by BaBar/makeInclude.csh.

27) April 27 to May 14, rhbob
    Added code for a MECO style crystal calorimeter.  Ongoing work.

28) May 4, yury
    Added new code to analyze cosmic ray data.

29) May 5, kutschke
    Fix typos in Mu2eG4/test/geom_01.txt
    dummytracker.material and dummyStoppingTarget.material are of type string.

30) May 5, kutschke
    Add two new features to SimpleConfig.
      1) #include "filename"
      2) Allow replacement of records.
    The first feature does what you think it should.  The filename needs a path relative
    to the working directory that is current at the time you run mute.  The second feature
    allows multiple occurences of the same key within one file ( where one file includes the
    expanded included files ); only the last occurence of the key/value pair is retained and 
    all others are ignored.  There is no checking that two occurences have the same type,
    that both are valid, etc.  The current version of SimpleConfig is configured by default
    to have the new behaviour; the old behaviour can be restored by setting a bool in the
    constructor.  When SimpleConfig replaces a previous instance of a key with a new instance,
    it can be configured to print a warning message.  This warning is enabled by default.

31) May 14, kutschke
    Added test code to verify that the LTracker hits are unchanged ( for use when
    we expect them to be unchanged ).
    Mu2eG4/test/transportOnly.py   
    Mu2eG4/test/transportOnlyGeom.txt
