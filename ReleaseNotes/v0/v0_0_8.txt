
           Release notes for Mu2e Offline software, v0_0_8


1) Implement the detailed field map in the DS.
   The code has options to enable the full field map, a uniform field
   or a hybrid of the two. See email on mu2e-sim from Bob Bernstein on Feb 8, 2010.

2) GeometryService
   Remove the non-templated hasXXXXX methods.  Add a the hasElement<T> templated method.

3) Bug fix in Mu2eWorld related to ITracker.  
   See email from Gianfrano Tassielli on mu2e-sim on Feb 11, 2010.

4) Split Mu2eG4/src/ReadBack_plugin.cc three files:
   Mu2eG4/src/ReadBack.hh
   Mu2eG4/src/ReadBack.cc
   Mu2eG4/src/ReadBack_plugin.cc
   This was done to provide an example of a module made from 3 files.

   g4test_02.py, g4test_03.py g4test_04.py readback.py
   Added minimumEnergy tracked parameter to PSet for ReadBack
   Also for illustration purposes.

5) Add Target foils to the G4 geometry.
   See email on mu2e-sim from Peter Shanahan on Feb 15, 2010.

6) Use PhysicsLists to describe the physics processs.
   G4_plugin.cc, geom_01.txt, setup.sh
   See email from Bob Bernstein on mu2e-sim on Feb 23, 2010.

7) Add external walls to the ITracker. 
   See email from Gianfrano Tassielli on mu2e-sim on Feb 24, 2010.

8) Add missing hooks to the RandomNumberService.
   RandomNumberService/
     src/RandomNumberService_plugin.cc - Change access to service handle of base class
     src/RNGTest_plugin.cc             - module to test new features.
     src/RandomNumberSaver_plugin.cc   - module to save state to event.
     inc/RandomNumberService.hh        - inherit from RandomNumberGenerator and add new methods.
     src/RandomNumberService.cc          
     test/test01.py                    - configuration file to invoke the test and output modules
   ToyDP/src/classes.h                 - add persistent data describing state of Engines
   ToyDP/src/classes_def.xml           - add persistent data describing state of Engines

   The saver module does not yet work because of a bug in classes_def.xml.  That module
   will throw if invoked.

9) Changed all of the .py files to invoke the RandomNumberService using the new syntax.

10) Add a new general utility routine
    GeneralUtilities/inc/vectorTransform.hh

11) RandomNumberService now saves the state of the HepRandom singleton engine to
    the event.
    Code to make this change:
    RandomNumberService/inc/RandomNumberService.hh
    RandomNumberService/src/RandomNumberService.cc
    RandomNumberService/src/RandomNumberSaver_plugin.cc
    ToyDP/inc/RandomEngineState.hh
    ToyDP/src/classes.h
    ToyDP/src/classes_def.xml



    Code to test the change:
    RandomNumberService/src/RNGTest_plugin.cc
    RandomNumberService/test/test01.py
    RandomNumberService/test/test02.py
    RandomNumberService/test/test03.py

12) Yury added the Daya Bay cosmic ray model, cosmicDYB to the event generator.
     EventGenerator/inc/CosmicDYB.hh
     EventGenerator/src/CosmicDYB.cc
     EventGenerator/src/EventGenerator_plugin.cc
     EventGenerator/src/SConscript
     ToyDP/inc/GenId.hh 
     Mu2eG4/src/PrimaryGeneratorAction.cc

13) G4_plugin.cc and the ReadBack module both look for their inputs
    in the event using getByLabel.  Previously the module label of
    the module that made their inputs was hardcoded.  It is now
    passed in using the parameter mechanism.  This affects:
      Mu2eG4/src/G4_plugin.cc
      Mu2eG4/inc/PrimaryGeneratorAction.hh
      Mu2eG4/src/PrimaryGeneratorAction.cc
      Mu2eG4/src/ReadBack.cc
      Mu2eG4/src/ReadBack.hh

14) Need to change the .py files to be consistent with 13.
      Mu2eG4/test/g4test_01.py
      Mu2eG4/test/g4test_02.py
      Mu2eG4/test/g4test_03.py
      Mu2eG4/test/g4test_04.py
      Mu2eG4/test/readback.py

15) New .py files to test random number reproducibility.
      Mu2eG4/test/replayAll.py
      Mu2eG4/test/replayWithSkip.py
      Mu2eG4/test/drop.py

16) Added the DayaBay event generator source into this EventGenerator.
    EventGenerator/src/d2_integral.f  
    EventGenerator/src/gaisser.f  
    EventGenerator/src/hrndg2.f
    EventGenerator/src/SConscript

17) The Daya Bay cosmic code wants to use the cernlib generator rm48.
    Add an adapter so that calls to rm48 pass through to CLHEP.
      EventGenerator/src/rm48.cc
      EventGenerator/src/rm48.hh  
    Also modified 
      EventGenerator/src/CosmicDYB.cc

18) Updates to make Daya Bay cosmic code work.
      EventGenerator/src/SConscript 
         - this now builds the fortran files. It did not before.
      EventGenerator/src/hrndg2.f   
         - remove printout and added comments
      EventGenerator/inc/CosmicDYB.hh 
      EventGenerator/src/CosmicDYB.cc
         - Chanaged default value of muEMin.  Lots of structural changes.
       Mu2eG4/test/genconfig_02.txt
         - added some example parameters for CosmicDYB.

19) EventGenerator/src/EventGenerator_plugin.cc
      - Only allow one cosmic ray generator to be present in the configuration.
      - Warning message if multiple beginRun's are encountered.

20) Add new utility routines:
     Mu2eUtilities/inc/requireUniqueKey.hh
     Mu2eUtilities/src/requireUniqueKey.cc
        - helper routine used in 19)
     Mu2eUtilities/inc/rm48.hh
     Mu2eUtilities/src/rm48.cc
        - moved from EventGenerator/src
     Mu2eUtilities/src/SConscript
        - added link time dependency on CLHEP.
       
21) ToyDP/inc/StepPointMC.hh
     - _time data member was out of order initializer list.  Now fixed.

22) Add heppdt particle data table.
     setup.sh                                     - setup the ups heppdt product 
     SConstruct                                   - add heppdt to -I and -L
     ConditionsService/inc/ParticleDataTable.hh   - the main event
     ConditionsService/src/ParticleDataTable.cc
     ConditionsService/src/ConditionsService.cc   - Add the partcile data table as an entity.
     ConditionsService/src/SConscript             - add HepPDT to link list
     EventGenerator/src/ConversionGun.cc          - an example of how to access it
    
23) Revise 22 so that the table will hold particle masses in MeV, even if the table
    supplies them in GeV.  This leaves the lifetimes in odd units and we have
    asked the HepPDT people to fix this.

24) Change some integral data types in persistent objects to be of definite length,
    int32_t or uint32_t, instead of int or "unsigned int".  This is needed so that
    files written on a 64 bit machine can be read on a 32 bit machine, and vice versa.
    This will cause older files to become unreadable.
    ToyDP/inc/StepPointMC.hh
    ToyDP/inc/DPIndex.hh
    ToyDP/inc/GenId.hh
    ToyDP/inc/ProtoStrawCluster.hh 

25) Change track Id to (0 ... (N-1)) from (1...N).
    Mu2eG4/src/StrawSD.cc
    This is needed to match the newly added SimParticleCollection.

26) Add example of skipping data products when writing an output file.
    Mu2eG4/test/g4test_03.py

27) New files need for data products SimParticleCollection and PhysicalVolumeInfoCollection:
      ToyDP/inc/PhysicalVolumeInfo.hh
      ToyDP/inc/PhysicalVolumeInfoCollection.hh
      ToyDP/inc/SimParticle.hh
      ToyDP/inc/SimParticleCollection.hh
    and modify these to add the new data products.
      ToyDP/src/classes.h 
      ToyDP/src/classes_def.xml

28) New files needed to construct the info that goes into 27).
      Mu2eG4/inc/PhysicalVolumeHelper.hh
      Mu2eG4/inc/VolMapType.hh
      Mu2eG4/src/PhysicalVolumeHelper.cc

29) Fill in the new data products (see 27) and add them to the event.
      Mu2eG4/src/G4_plugin.cc 
      Mu2eG4/inc/TrackingAction.hh
      Mu2eG4/src/TrackingAction.cc

30) Example of using the new data products.
      Mu2eG4/src/ReadBack.cc
      Mu2eG4/src/ReadBack.hh
    This works correctly whether or not the input file has the SimParticle data product
    present.

31) Bob Bernstein added a discrete process to reflect particles off of a surface.
    Use to do studies of precision in propagation in magnetic fields.
    See email to mu2e-sim on March 23, 2010.

32) Modify particle data table to get antiparticles correct.  
      ConditionsService/data/mass_width_2008.mc
      ConditionsService/inc/particle.tbl
      ConditionsService/inc/ParticleDataTable.hh
      ConditionsService/src/ParticleDataTable.cc

33) Add particle gun to the generator.
      EventGenerator/src/EventGenerator_plugin.cc        
      Mu2eG4/src/PrimaryGeneratorAction.cc
      EventGenerator/inc/ParticleGun.hh
      EventGenerator/src/ParticleGun.cc

34) Fix some typos in ToyDP/inc/SimParticle.hh

35) Peter Shanahan added an new package
    Offline/EffyNoise
    This code takes the StepPointMC collection produced by G4, applies
    an efficiency function and also creates salt and pepper noise.  The
    output is a new collection of StepPointMC's.
    Also did some cleanup on the  HoughTransform code.

    This is still under development and is not yet ready for general use.

36) Bob Bernstein commited changes related to:
     a) First draft of a production target and a proton beam ( PrimaryProtonGun ).
     b) Using faster field integrators in the regions of non-uniform field.
       ToyDP/inc/GenId.hh
       EventGenerator/src/EventGenerator_plugin.cc  
       EventGenerator/src/PrimaryProtonGun.cc
       EventGenerator/in/PrimaryProtonGun.hh
       Mu2eG4/src/PrimaryGeneratorAction.cc 
       Mu2eG4/inc/Mu2eWorld.hh
       Mu2eG4/src/Mu2eWorld.cc              
       Mu2eG4/test/genconfig_05.txt          
       Mu2eG4/test/geom_01.txt          

    See email from rhbob to Mu2e-sim on April 2, 2010.

37) Add a step length field to StepPointMC.
        ToyDP/inc/StepPointMC.hh
        ToyDP/src/StepPointMC.cc
        Mu2eG4/inc/StepPointG4.hh
        Mu2eG4/src/StepPointG4.cc

    Requires modificationst to all code the creates StepPointMC or StepPointG4.
    
         Mu2eG4/src/StrawSD.cc
         Mu2eG4/src/ITGasLayerSD_ExtWireData.cc
         Mu2eG4/src/ITGasLayerSD_v2.cc
         Mu2eG4/src/ITGasLayerSD_v3.cc
         EffyNoise/src/SimpleEffyNoise_plugin.cc
         HoughTransform/src/HoughTest_plugin.cc

38) Bug fix to Readback.cc ( pdgId was not set properly ).
    Add additional histograms and additional items in the ntuple.
