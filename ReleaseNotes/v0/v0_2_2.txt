
           Release notes for Mu2e Offline software, v0_2_2


 8) September 19, 2010, logash

    The following fixes were implemented to avoid problems with 
    memory overuns and infinite time for rare events:
    - limits installed on the size of StepPoint collections 
      (StrawSD and VirtualDetectorSD) and SimParticle collection.
      They are controlled by G4 module parameters:
          stepsSizeLimit = mu2e.untracked.int32(10000),    # StepPoint
          particlesSizeLimit = mu2e.untracked.int32(10000),# SimParticle
    - limit installed to the total number of steps taken by event
      This is controlled by following line in geometry config file:
          int g4.steppingActionMaxSteps = 100000;
    - it is possible to drop particular type of particles at 
      SteppingAction. This will probably be replaced in future by 
      dropping at stacking. This is controlled by the following line in 
      geometry config file:
          vector<int> g4.steppingActionDropPDG = { 22 };

 7) September 16, 2010, logash

    Bug fixed in ReadVirtualDetector_plugin.cc: tree buffer was
    not cleaned up between different particles in the same event

 6) September 15, 2010, logash

    Minor changes in G4BeamlineInfo, FromG4BLFile and 
    ReadVirtualDetector_plugin: add additional field - event time - 
    to G4BeamlineInfo and output ntuple (ntpart).

 5) September 14, 2010, kutschke
    Analyses/src/InteractiveRoot_plugin.cc 
    Analyses/test/InteractiveRoot.py 

    This is an example module to show how to run interactive root 
    from within a module.  If several modules want to do this, they need to
    figure out how to cooperate so that only one module creates the
    TApplication.  Probably we should make the TApplication a feature
    of the TFileService ( optional, selectable at run-time, feature?).

 4) September 13, 2010, logash

    The framework is now ready for beamline studies. List of changes:

    - New generator G4BeamlineGenerator_plugin.cc. It is based on the
      same FromG4BLFile generator, but adds additional collection 
      to the output stream - G4BeamlineInfo - which contains extra 
      information, provided in the input file (in particular, weights).

    - BFieldManagerMaker can now read compressed G4Beamline field maps. 
      File names ended with .gz or .bz2 will be automatically 
      decompressed on-the-fly.

    - Additional new data member in StepPointMC - proper time. This is 
      needed in some beamline studies. All modules which produce 
      StepPointMCs or StepPointG4, were updated correspondingly. 

    - It is possible now to switch off decays of particles of particular 
      type in the configuration file. Example is shown in beamline_geom.txt

 3) September 8, 2010, kutschke 

    The event number lists have a new behaviour; it is possible to enable
    printout for all events.  This is selected by making a list with
    a single entry with a value of -1 ( an illegal event number).
     Mu2eG4/src/EventNumberList.cc

 2) September 8, 2010, kutschke

    Added code in the user stepping action to kill tracks if:
        - their kinetic energy has dropped below a given cutoff
     or - they enter the hall air volume

    This code can be enabled by variables added to geom_01.txt.  
    They are off by default in geom_01txt .  
    In beamline_geom.txt they are on by default

    There is probably a smarter way to implement the low kinetic
    energy cut off but the present solution works.

    Mu2eG4/src/SteppingAction.cc  
    Mu2eG4/inc/SteppingAction.hh
    Mu2eG4/src/G4_plugin.cc

 1) September 7, 2010, logash

    New abstract class BFMapBase, which describes interface to get 
    B-field at particular location. BFMap and BFieldManager now inheret
    from BFMapBase.

    BFieldManegerMaker can now read G4Beamline files. Configuration
    example is shown in Mu2eG4/test/beamline_geom.py. 

