BEGIN_PROLOG

# Normal reco seqence module: this produces a hit for every digi, and uses
# flags to keep track of which hits to use
# Reconstruct hits: this produces StrawHits and ComboHits
PBTFSD : {
  module_type             : ProtonBunchTimeFromStrawDigis
}

makeSH : {
  module_type             : StrawHitReco
  MinimumTime             : 420.0 # configuration for OnSpill
  MaximumTime             : 1690.0 #
  MinimumEnergy           : 0.0001 # MeV
  MaximumEnergy           : 0.005 # MeV
  MinimumRadius           : 350.0 # mm
  MaximumRadius           : 700.0 # mm
  FitType                 : 1
  FilterHits              : false
  WriteStrawHitCollection : false
  ProtonBunchTimeTag      : "EWMProducer"
  StrawDigiCollectionTag  : "makeSD"
  StrawDigiADCWaveformCollectionTag : "makeSD"
  UseCalorimeter          : false
  clusterDt               : 100.0 # ns
  CaloClusterCollectionTag: "CaloClusterFast"
  FlagCrossTalk           : false
  crossTalkEnergy         : 0.007
  crossTalkMinimumTime    : -1
  crossTalkMaximumTime    : 100
}

# combine hits in a panel
makePH : {
  module_type           : CombineStrawHits
  TestFlag              : true
  FilterHits            : true
  ComboHitCollection    : makeSH
  StrawHitSelectionBits : ["EnergySelection","TimeSelection","RadiusSelection"]
  StrawHitMask          : ["Noisy"]
  MaxDt                 : 40
  UseTOT                : true
  MaxWireDistDiffPull   : 4.0
  TransError            : 8.0
  MaxDS                 : 3
  WireError             : 10.0
  MinimumTime           : 420.0 # configuration for OnSpill
  MaximumTime           : 1680.0 #
  MinimumEnergy         : 0.0002 # MeV
  MaximumEnergy         : 0.005 # MeV
  MinimumRadius         : 380.0
  MaximumRadius         : 680.0
  MinimumNHits          : 1
  MaximumNHits          : 3
  CheckWres             : false
  Unsorted              : false # sim data are sorted, VST currently not
}

# combine panel hits in a station
makeSTH : {
  module_type         : MakeStereoHits
  TestFlag            : true
  MVATool             : { MVAWeights : "Offline/TrkHitReco/test/StereoMVA.weights.xml" }
  ComboHitCollection  : "makePH"
}

# flag hits from low-energy electrons (Compton electrons, delta rays, ...)
# First, configure the clusters
TNTClusterer : {
  HitDistance      : 5.0
  SeedDistance     : 20.0
  ClusterDiameter  : 5.0
  ClusterTime      : 20.0
  MaxHitTimeDiff   : 30.0
  MaxSumDistance   : 100.0
  MaxCluIterations : 10
  MaxDistance      : 100.0
  MinHitError      : 5.0
  TimeRMS          : 2.0
  MedianCentroid   : false
  ComboInit        : true
  TestFlag         : true
  BackgroundMask   : []
  SignalMask       : ["TimeSelection", "EnergySelection","RadiusSelection"]
}

#FilterAlgo: 1 for next neighbor version, 2 for clustering version
ScanClusterer: {
  Pbin             : 0.08
  Tbin             : 20
  Rbin             : 50
  Rmin             : 350
  Rmax             : 650
  MinPeakHit       : 3
  MinSeedHit       : 2
  MinRadHit        : 50
  FilterAlgo       : 1
  TestFlag         : true
  BackgroundMask   : []
  SignalMask       : ["TimeSelection", "EnergySelection","RadiusSelection"]
}

# Now configure the module
FlagBkgHits : {
  module_type          : FlagBkgHits
  ComboHitCollection   : "makePH"
  StrawHitCollection   : "makeSH"
  ClusterAlgorithm     : 1
  TNTClustering        : { @table::TNTClusterer }
  ScanClustering       : { @table::ScanClusterer }
  MinActiveHits        : 3
  MinNPlanes           : 2
  ClusterPositionError : 10
  BkgMVA               : { MVAWeights : "Offline/TrkHitReco/data/BkgMVAPanel.weights.xml" }
  BkgMVACut            : 0.5
  FilterHits           : true
  FlagStrawHits        : false
  BackgroundMask       : ["Background"]
  StereoSelection      : ["Stereo","PanelCombo"]
}


SflagBkgHits : {
  @table::FlagBkgHits
  ComboHitCollection : "makeSTH"
}

# combine together
TrkHitReco : {
  producers : {
    # normal reco
    PBTFSD       : { @table::PBTFSD       }
    makeSH        : { @table::makeSH       }
    makePH        : { @table::makePH       }
    makeSTH       : { @table::makeSTH      }
    FlagBkgHits   : { @table::FlagBkgHits  }
    SflagBkgHits  : { @table::SflagBkgHits }
  }

  # SEQUENCES
  # production sequence to prepare hits for tracking
  PrepareHits  : [ PBTFSD, makeSH, makePH, FlagBkgHits ]
  SPrepareHits : [ PBTFSD, makeSH, makePH, makeSTH, SflagBkgHits ]
}

END_PROLOG
