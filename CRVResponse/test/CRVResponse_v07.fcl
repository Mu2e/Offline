#include "fcl/minimalMessageService.fcl"
#include "fcl/standardServices.fcl"
#include "CRVResponse/fcl/prolog_v07.fcl"

process_name : CRVResponse

source :
{
  module_type : RootInput
  inputCommands: ["keep *", 
                  "drop *KalRepPayload*_*_*_*",
                  "drop *CaloCrystalOnlyHit*_*_*_*"]
}

services :
{
  RandomNumberGenerator: {defaultEngineKind: "MixMaxRng" }
  GeometryService        : { inputFile : "Mu2eG4/geom/geom_common_crv_v07.txt" }
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
  SeedService            : @local::automaticSeeds
}

physics :
{
  producers:
  {
    protonTimeMap: { module_type : GenerateProtonTimes }
    muonTimeMap: { module_type : GenerateMuonLife }

    @table::CrvResponsePackage.producers
  }

  an : [protonTimeMap, muonTimeMap, @sequence::CrvResponsePackage.CrvResponseSequence]
#  out: [Output]
  out: []

  trigger_paths: [an]
  end_paths:     [out]
}

outputs: 
{
  Output : 
  {
    module_type : RootOutput
    fileName    : "data_crv.art"
  }
}

services.SeedService.baseSeed         :  773651
services.SeedService.maxUniqueEngines :  20
