#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/CRVResponse/fcl/prolog.fcl"

process_name : CRVResponse

source :
{
  module_type : RootInput
}

services :
{
  @table::Services.SimAndReco
}

physics :
{
  producers:
  {
    @table::CommonMC.producers
    @table::CrvResponsePackage.producers
  }

  an : [ @sequence::CommonMC.DigiSim, @sequence::CrvResponsePackage.CrvResponseSequence]
  out: [Output]

  trigger_paths: [an]
  end_paths:     [out]
}

outputs:
{
  Output :
  {
    module_type : RootOutput
    fileName    : "data_crv.art"
  }
}

physics.producers.CrvPhotons.crvStepModuleLabels  : ["CrvSteps"]
physics.producers.CrvPhotons.crvStepProcessNames  : ["CrvStepsConverter"]
services.GeometryService.simulatedDetector.tool_type : "Mu2e"
services.SeedService.baseSeed         :  773651
services.SeedService.maxUniqueEngines :  20
