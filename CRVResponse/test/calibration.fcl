#
# generate and simulate full CRV waveforms to reconstruct dark counts
#
#include "Offline/fcl/standardServices.fcl"
#include "Offline/EventGenerator/fcl/prolog.fcl"
#include "Production/JobConfig/common/prolog.fcl"
#include "Production/JobConfig/primary/prolog.fcl"
#include "Production/JobConfig/digitize/prolog.fcl"
#include "Production/JobConfig/cosmic/prolog.fcl"

process_name : crvCalibSimReco

source : {
  module_type :EmptyEvent
  firstRun: 1210
}
services: @local::Services.SimAndReco

physics: {
  producers : {
    @table::CommonMC.producers
    @table::Common.producers
    @table::Primary.producers
    cosmicTimeOffset : @local::Cosmic.cosmicTimeOffset
    @table::CrvDAQPackage.producers
    CrvRecoPulses: @local::CrvRecoPulses
  }
  filters : {
    @table::Common.filters
  }

  TriggerPath :  [ @sequence::Common.generateSequence, cosmicTimeOffset, @sequence::Common.g4Sequence, @sequence::CommonMC.DigiSim,
                   CrvSteps, @sequence::CrvDAQPackage.CrvDAQSequence, CrvRecoPulses ]
  out: [Output]
  trigger_paths : [ TriggerPath ]
  end_paths : [ out ]
}

outputs:
{
  Output :
  {
    module_type : RootOutput
    fileName    : "crv_calib.art"
    SelectEvents : [ TriggerPath ]
    outputCommands: ["keep *",
                     "drop *GenParticle*_*_*_*",
                     "drop *SimParticle*_*_*_*",
                     "drop *StepPointMC*_*_*_*",
                     "drop *CrvStep*_*_*_*",
                     "drop *CrvPhotons*_*_*_*",
                     "drop *CrvSiPMCharges*_*_*_*",
                     "drop *CrvDigiMC*_*_*_*"]
  }
}


physics.producers.generate : @local::Cosmic.generateCRY
physics.producers.g4run.TrajectoryControl: @local::mu2eg4NoTrajectories
physics.producers.g4run.Mu2eG4CommonCut: @local::Cosmic.Mu2eG4CommonCutCosmicNoField
physics.producers.g4run.physics.minRangeCut : 1.0 // mm
physics.producers.EWMProducer.SpillType : 1

physics.producers.CrvPhotons.crvStepModuleLabels  : ["CrvSteps"]
physics.producers.CrvPhotons.crvStepProcessNames  : ["cosmicSimReco"]

#physics.producers.CrvWaveforms.minVoltage : -100   //-100V --> records everything
physics.producers.CrvWaveforms.minVoltage : 0.0025 //2.5mV (corresponds to 0.5PE)
physics.producers.CrvRecoPulses.minADCdifference   : 5    //minimum ADC difference above pedestal to be considered for reconstruction

outputs.Output.fileName : "crvCalibSimReco.art"

source.maxEvents: 200
services.scheduler.wantSummary: true
services.TimeTracker.printSummary: true
services.SeedService.baseSeed         :  8
services.TFileService.fileName : "crvCalibSimReco.root"
#include "Offline/DbService/fcl/NominalDatabase.fcl"
