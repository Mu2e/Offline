#include "fcl/minimalMessageService.fcl"
#include "fcl/standardServices.fcl"
#include "CRVResponse/fcl/prolog.fcl"

process_name : CRVResponse

source :
{
  module_type : RootInput
  inputCommands: ["keep *", 
                  "drop *KalRepPayload*_*_*_*",
                  "drop *CaloCrystalOnlyHit*_*_*_*",
                  "drop *Crv*_*_*_*"]
}

services :
{
  RandomNumberGenerator: {defaultEngineKind: "MixMaxRng" }
  TFileService           : { fileName: "test.root" }
  GeometryService        : { inputFile : "Mu2eG4/geom/geom_common.txt" }
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
  SeedService            : @local::automaticSeeds
}

physics :
{
  producers:
  {
    @table::CommonMC.producers
    @table::CrvResponsePackage.producers
  }

  analyzers:
  {
    CrvPlot:
    {
      module_type                    : CrvPlot
      crvPhotonsModuleLabel          : CrvPhotons
      crvSiPMChargesModuleLabel      : CrvSiPMCharges
      crvDigiModuleLabel             : CrvDigi
      crvRecoPulsesModuleLabel       : CrvRecoPulses
      crvBarIndex                    : 1
      timeStart                      : 500
      timeEnd                        : 1000
      recoPulsePedestal              : 100.42
    }
  }

  an : [ @sequence::CommonMC.DigiSim, @sequence::CrvResponsePackage.CrvResponseSequence]
  out: [CrvPlot]

  trigger_paths: [an]
  end_paths:     [out]
}

physics.producers.CrvPhotons.startTime         : 0.0 
physics.producers.CrvSiPMCharges.blindTime     : 0.0
#physics.producers.CrvWaveforms.minVoltage      : 0.0

services.SeedService.baseSeed         :  773651
services.SeedService.maxUniqueEngines :  20
