//use with Mu2eG4/geom/crv_counters_v07.txt (e.g. CRVResponse/test/CRVResponse_v07.fcl)
#include "CommonMC/fcl/prolog.fcl"

BEGIN_PROLOG

    CrvPhotons:
    {
      module_type               : CrvPhotonGenerator
      g4ModuleLabels            : ["*"]
      processNames              : ["*"]
      CRVSectors                : ["R1","R2","R3","R4","R5","L1","L2","T1","T2","T3","T4","E1","E2","U" ,"D1","D2","D3","D4","C1","C2","C3","C4"] //used only to match the vector entries below
      lookupTableFileNames      : ["CRVConditions/v4_1/LookupTable_4550_0",  //R1
                                   "CRVConditions/v4_1/LookupTable_1045_-1", //R2
                                   "CRVConditions/v4_1/LookupTable_3040_0",  //R3
                                   "CRVConditions/v4_1/LookupTable_4550_0",  //R4
                                   "CRVConditions/v4_1/LookupTable_3200_0",  //R5
                                   "CRVConditions/v4_1/LookupTable_4550_0",  //L1
                                   "CRVConditions/v4_1/LookupTable_3200_0",  //L2
                                   "CRVConditions/v4_1/LookupTable_6000_1",  //T1
                                   "CRVConditions/v4_1/LookupTable_6000_1",  //T2
                                   "CRVConditions/v4_1/LookupTable_6000_0",  //T3
                                   "CRVConditions/v4_1/LookupTable_6000_0",  //T4
                                   "CRVConditions/v4_1/LookupTable_5000_-1", //E1
                                   "CRVConditions/v4_1/LookupTable_5000_-1", //E2
                                   "CRVConditions/v4_1/LookupTable_6900_1",  //U
                                   "CRVConditions/v4_1/LookupTable_5700_0",  //D1
                                   "CRVConditions/v4_1/LookupTable_2370_1",  //D2
                                   "CRVConditions/v4_1/LookupTable_2370_-1", //D3
                                   "CRVConditions/v4_1/LookupTable_5700_0",  //D4
                                   "CRVConditions/v4_1/LookupTable_900_1",   //C1
                                   "CRVConditions/v4_1/LookupTable_900_-1",  //C2
                                   "CRVConditions/v4_1/LookupTable_2100_-1", //C3
                                   "CRVConditions/v4_1/LookupTable_1550_-1"] //C4
      scintillationYield                : 47000 //for 68 PE/SiPM @ 1 m away from SiPM (Test beam June 2017)
                                                //using the pulse height calibration, this value gives 45 PE/SiPM @ 1 m away from SiPM
      scintillationYieldVariation       : 0.2   //gaussian distribution with sigma equal to 20% of the mean
      scintillationYieldVariationCutoff : 0.4   //the scintillation yield variation is cut off at 40% below the mean
      scintillatorBirksConstant : 0.126    //0.126 mm/Mev
      scintillatorRatioFastSlow : 1.0      //100% fast
      scintillatorDecayTimeFast : 3.0      //3.0 ns   //includes WLS component in the scintillator
      scintillatorDecayTimeSlow : 100.0    //100.0 ns  //unknown, not used
      fiberDecayTime            : 8.7      //8.7 ns
      startTime                 : 400.0    //0.0 ns
      visibleEnergyAdjustmentFileName : "CRVResponse/fcl/visibleEnergyAdjustment.txt"
      timeOffsets               : { inputs : [ @sequence::CommonMC.TimeMaps ]  }
    }
    CrvSiPMCharges:
    {
      module_type                  : CrvSiPMChargeGenerator
      crvPhotonsModuleLabel        : "CrvPhotons"
      deadSiPMProbability          : 0.01
      nPixelsX                     : 40
      nPixelsY                     : 40
      nPixelsRFiber                : 13
      inactivePixels               : [ [18,18], [18,19], [18,20], [18,21],
                                       [19,18], [19,19], [19,20], [19,21],
                                       [20,18], [20,19], [20,20], [20,21],
                                       [21,18], [21,19], [21,20], [21,21] ]
      overvoltage                  : 2.1        //V
      timeConstant                 : 13.3       //ns  according to an Hamamatsu example with R_q=150kOhm --> tau=R_q*C=13.3ns
      capacitance                  : 8.84e-14   //F   capacitance of one pixel according to specs
      blindTime                    : 400.0      //ns

      AvalancheProbParam1          : 0.607      // = p1
      AvalancheProbParam2          : 2.7        // = p2
                                                //Avalanche probability at over voltage v: p1*(1 - exp(-v/p2))

      TrapType0Prob                : 0.0        //0.14 (Paul's number)  ????
      TrapType1Prob                : 0.0        //0.06 (Paul's number)  ????
      TrapType0Lifetime            : 5.0        //ns  ????
      TrapType1Lifetime            : 50.0       //ns  ????

      ThermalRate                  : 3.0e-4     //ns^-1     0.3MHz for entire SiPM 
      CrossTalkProb                : 0.05       //
    }
    CrvWaveforms:
    {
      module_type                  : CrvWaveformsGenerator
      crvSiPMChargesModuleLabel    : "CrvSiPMCharges"
      singlePEWaveformFileName     : "CRVResponse/fcl/singlePEWaveform_v3.txt"
      singlePEWaveformPrecision    : 0.5    //0.5 ns
      singlePEWaveformStretchFactor: 1.047  //1.047 for singlePEWaveform_v3.txt //from comparison with testbeam data
      singlePEWaveformMaxTime      : 100    //100 ns
      singlePEReferenceCharge      : 1.8564e-13  //1.8564e-13 C charge which was used to generate the above 1PE waveform
                                                 //capacitance of one pixel (8.84e-14C) * overvoltage (2.1V)
      FEBtimeSpread                : 2.0    //2.0 ns
      minVoltage                   : 0.0275  //27.5mV (corresponds to 5.5PE)
      noise                        : 4.0e-4 //0.4mV
    }
    CrvDigi:
    {
      module_type                  : CrvDigitizer
      crvWaveformsModuleLabel      : "CrvWaveforms"
      ADCconversionFactor          : 2300  //2300 ADC/V
      pedestal                     : 100
    }
    CrvRecoPulses:
    {
      module_type               : CrvRecoPulsesFinder
      crvDigiModuleLabel        : "CrvDigi"
      minPEs                    : 6        //6 PEs
      darkNoise                 : false    //reduced initial pulse width for the reco pulse fit for dark noise (12.6ns instead of 19.0ns)
    }
    CrvCoincidence:
    {
      module_type                   : CrvCoincidenceCheck
      verboseLevel                  : 0
      crvRecoPulsesModuleLabel      : "CrvRecoPulses"
      CRVSectors                    : ["R1","R2","R3","R4","R5","L1","L2","T1","T2","T3","T4","E1","E2","U" ,"D1","D2","D3","D4","C1","C2","C3","C4"] //used only to match the vector entries below
      PEthresholds                  : [ 26 , 26 , 26 , 26 , 26 , 26 , 26 , 36 , 22 , 18 , 20 , 36 , 36 , 28 , 36 , 36 , 36 , 36 , 26 , 26 , 26 , 26 ]
      adjacentPulseTimeDifferences  : [  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 , 10 , 10 ,  5 ,  5 , 10 , 10 , 10 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 ,  5 ] //ns
      maxTimeDifferences            : [ 10 , 10 , 10 , 10 , 10 , 10 , 10 , 20 , 20 , 10 , 10 , 20 , 20 , 20 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ] //ns
      useFourLayers                 : [false,false,false,false,false,false,false,true,true,false,false,true,true,true,false,false,false,false,false,false,false,false] 
      usingPEsPulseHeight           : false  //using the PEs which were calculated using the pulse height
      maxSlope                      : 7.0    //7.0mm over 1mm, which is a little bit more than 4 counters per layer
      maxSlopeDifference            : 2.0    //
      acceptThreeAdjacentCounters   : false  //use hits in three adjacent counters in one layer to form a coincidence
      timeWindowStart               : 500    //ns
      timeWindowEnd                 : 1750   //ns
      leadingVetoTime               : 0      //the time window before the first hit time of the coincidence triplet (only used to print out the results)
      trailingVetoTime              : 125    //the time window after the last hit time of the coincidence triplet (only used to print out the results)
      crvWaveformsModuleLabel       : "CrvWaveforms"
    }
    CrvCoincidenceClusterFinder:
    {
      module_type                    : CrvCoincidenceClusterFinder
      verboseLevel                   : 0
      usingPEsPulseHeight            : false  //using the PEs which were calculated using the pulse height
      maxDistance                    : 1000 //mm
      maxTimeDifference              : 100  //ns
      crvCoincidenceCheckModuleLabel : "CrvCoincidence"
      timeWindowStart                : 500  //ns
      timeWindowEnd                  : 1750 //ns
      deadTimeWindowStartMargin      : 0    //ns
      deadTimeWindowEndMargin        : 125  //ns
    }
    CrvCoincidenceClusterMatchMC:
    {
      module_type                            : CrvCoincidenceClusterMatchMC
      crvCoincidenceClusterFinderModuleLabel : "CrvCoincidenceClusterFinder"
      crvWaveformsModuleLabel                : "CrvWaveforms"
      timeOffsets                            : { inputs : [ @sequence::CommonMC.TimeMaps ] }
    }


CrvResponsePackage : 
{
   producers : 
   {
     CrvPhotons                  : @local::CrvPhotons
     CrvSiPMCharges              : @local::CrvSiPMCharges
     CrvWaveforms                : @local::CrvWaveforms
     CrvDigi                     : @local::CrvDigi
     CrvRecoPulses               : @local::CrvRecoPulses
     CrvCoincidence              : @local::CrvCoincidence
     CrvCoincidenceClusterFinder : @local::CrvCoincidenceClusterFinder
     CrvCoincidenceClusterMatchMC : @local::CrvCoincidenceClusterMatchMC
   }
   CrvResponseSequence : [ CrvPhotons, CrvSiPMCharges, CrvWaveforms, CrvDigi, CrvRecoPulses, CrvCoincidence, CrvCoincidenceClusterFinder, CrvCoincidenceClusterMatchMC ]
}

CrvDAQPackage : 
{
   producers : 
   {
     CrvPhotons                  : @local::CrvPhotons
     CrvSiPMCharges              : @local::CrvSiPMCharges
     CrvWaveforms                : @local::CrvWaveforms
     CrvDigi                     : @local::CrvDigi
   }
   CrvResponseSequence : [ CrvPhotons, CrvSiPMCharges, CrvWaveforms, CrvDigi ]
}

END_PROLOG
