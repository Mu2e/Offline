

# include "TrackerAlignment/inc/AlignmentDerivatives.hh"
# include <math.h>
# include <vector>

double CosmicTrack_DCA(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R43 = R42*b1;
    double R44 = R39*R40;
    double R45 = R42*R44;
    double R46 = R35*R40;
    double R47 = R42*a1;
    double R48 = R41*R43 - R45 + R46*R47;
    double R49 = 1.0/(1.0 - pow(R48, 2));
    double R50 = -plane_z;
    double R51 = R50 + panel_dz + panel_straw0z;
    double R52 = R2*R51;
    double R53 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R54 = R53*R6;
    double R55 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R56 = R24*R55;
    double R57 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R58 = R16*R4;
    double R59 = R20*R4;
    double R60 = R11*R58 - R59*R7;
    double R61 = R11*R59 + R58*R7;
    double R62 = R57*(-R10*R2 + R24*R61 - R6*R60);
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = R63*(R2*R64 + R24*R68 - R6*R67);
    double R70 = R52 - R54 + R56 + R62 + R69 - b0 + plane_dz + plane_z;
    double R71 = R41*R70;
    double R72 = R36*R51;
    double R73 = R37*R53;
    double R74 = R38*R55;
    double R75 = R57*(-R10*R36 + R37*R60 + R38*R61);
    double R76 = R63*(R36*R64 + R37*R67 + R38*R68);
    double R77 = R72 + R73 + R74 + R75 + R76 + plane_dy;
    double R78 = R44*R77;
    double R79 = R30*R51;
    double R80 = R31*R53;
    double R81 = R34*R55;
    double R82 = R57*(-R10*R30 + R31*R60 + R34*R61);
    double R83 = R63*(R30*R64 + R31*R67 + R34*R68);
    double R84 = R79 + R80 + R81 + R82 + R83 - a0 + plane_dx;
    double R85 = R46*R84;
    double R86 = -R42*R77 + R43*R70 + R47*R84;
    double R87 = R49*(R48*R86 - R71 - R78 - R85);
    double R88 = R49*(-R48*(R71 + R78 + R85) + R86);
    double R89 = sqrt(pow(R41*R87 - R43*R88 + R70, 2) + pow(R42*R88 + R44*R87 + R77, 2) + pow(R46*R87 - R47*R88 + R84, 2));
    double R90 = R42*R46 + R45*a1;
    double R91 = -R41*R47 + R43*R46;
    double R92 = -R41*R42 - R45*b1;
    double R93 = pow(pow(R90, 2) + pow(R91, 2) + pow(R92, 2), -1.0/2.0);
    double result = ((R90*R93*(R50 - R52 + R54 - R56 - R62 - R69 + b0 - plane_dz) + R91*R93*(-R72 - R73 - R74 - R75 - R76 - plane_dy) + R92*R93*(-R79 - R80 - R81 - R82 - R83 + a0 - plane_dx) > 0) ? (
   -R89
)
: (
   R89
));
    return result;
}


double CosmicTrack_DCAalignpos_x(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(plane_a);
    double R1 = sin(plane_g);
    double R2 = cos(plane_a);
    double R3 = cos(plane_g);
    double R4 = R3*sin(plane_b);
    double R5 = R0*R1 + R2*R4;
    double R6 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R7 = 1.0/R6;
    double R8 = R7*panel_straw0x;
    double R9 = R7*panel_straw0y;
    double R10 = R3*cos(plane_b);
    double R11 = R0*R4 - R1*R2;
    double R12 = sin(panel_b);
    double R13 = cos(panel_g);
    double R14 = cos(panel_b);
    double R15 = R14*R8;
    double R16 = sin(panel_g);
    double R17 = R14*R9;
    double R18 = cos(panel_a);
    double R19 = sin(panel_a);
    double R20 = R12*R18;
    double R21 = R13*R20 + R16*R19;
    double R22 = -R13*R19 + R16*R20;
    double result = R10*(R8*panel_dx - R9*panel_dy + panel_straw0x) + R11*(R8*panel_dy + R9*panel_dx + panel_straw0y) + R5*(panel_dz + panel_straw0z - plane_z) + plane_dx + (-R6 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(R10*(R13*R15 - R16*R17) + R11*(R13*R17 + R15*R16) - R12*R5) + (-panel_straw0z + wire_z)*(R10*(R21*R8 - R22*R9) + R11*(R21*R9 + R22*R8) + R14*R18*R5);
    return result;
}


double CosmicTrack_DCAalignpos_y(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(plane_a);
    double R1 = cos(plane_g);
    double R2 = cos(plane_a);
    double R3 = sin(plane_g);
    double R4 = R3*sin(plane_b);
    double R5 = -R0*R1 + R2*R4;
    double R6 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R7 = 1.0/R6;
    double R8 = R7*panel_straw0x;
    double R9 = R7*panel_straw0y;
    double R10 = R3*cos(plane_b);
    double R11 = R0*R4 + R1*R2;
    double R12 = sin(panel_b);
    double R13 = cos(panel_g);
    double R14 = cos(panel_b);
    double R15 = R14*R8;
    double R16 = sin(panel_g);
    double R17 = R14*R9;
    double R18 = cos(panel_a);
    double R19 = sin(panel_a);
    double R20 = R12*R18;
    double R21 = R13*R20 + R16*R19;
    double R22 = -R13*R19 + R16*R20;
    double result = R10*(R8*panel_dx - R9*panel_dy + panel_straw0x) + R11*(R8*panel_dy + R9*panel_dx + panel_straw0y) + R5*(panel_dz + panel_straw0z - plane_z) + plane_dy + (-R6 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(R10*(R13*R15 - R16*R17) + R11*(R13*R17 + R15*R16) - R12*R5) + (-panel_straw0z + wire_z)*(R10*(R21*R8 - R22*R9) + R11*(R21*R9 + R22*R8) + R14*R18*R5);
    return result;
}


double CosmicTrack_DCAalignpos_z(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = cos(plane_b);
    double R1 = R0*cos(plane_a);
    double R2 = sin(plane_b);
    double R3 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R4 = 1.0/R3;
    double R5 = R4*panel_straw0x;
    double R6 = R4*panel_straw0y;
    double R7 = R0*sin(plane_a);
    double R8 = sin(panel_b);
    double R9 = cos(panel_g);
    double R10 = cos(panel_b);
    double R11 = R10*R5;
    double R12 = sin(panel_g);
    double R13 = R10*R6;
    double R14 = cos(panel_a);
    double R15 = sin(panel_a);
    double R16 = R14*R8;
    double R17 = R12*R15 + R16*R9;
    double R18 = R12*R16 - R15*R9;
    double result = R1*(panel_dz + panel_straw0z - plane_z) - R2*(R5*panel_dx - R6*panel_dy + panel_straw0x) + R7*(R5*panel_dy + R6*panel_dx + panel_straw0y) + plane_dz + plane_z + (-R3 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(-R1*R8 - R2*(R11*R9 - R12*R13) + R7*(R11*R12 + R13*R9)) + (-panel_straw0z + wire_z)*(R1*R10*R14 - R2*(R17*R5 - R18*R6) + R7*(R17*R6 + R18*R5));
    return result;
}


double CosmicTrack_DCAaligndir_x(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = sin(plane_a);
    double R2 = sin(plane_g);
    double R3 = cos(plane_a);
    double R4 = cos(plane_g);
    double R5 = R4*sin(plane_b);
    double R6 = sin(panel_g);
    double R7 = cos(panel_a);
    double R8 = cos(panel_g);
    double R9 = R0*sin(panel_b);
    double R10 = -R6*R7 + R8*R9;
    double R11 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R12 = R11*panel_straw0x;
    double R13 = R6*R9 + R7*R8;
    double R14 = R11*panel_straw0y;
    double result = 1.0*R0*(R1*R2 + R3*R5)*cos(panel_b) + 1.0*R4*(R10*R12 - R13*R14)*cos(plane_b) + 1.0*(R1*R5 - R2*R3)*(R10*R14 + R12*R13);
    return result;
}


double CosmicTrack_DCAaligndir_y(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = sin(plane_a);
    double R2 = cos(plane_g);
    double R3 = cos(plane_a);
    double R4 = sin(plane_g);
    double R5 = R4*sin(plane_b);
    double R6 = sin(panel_g);
    double R7 = cos(panel_a);
    double R8 = cos(panel_g);
    double R9 = R0*sin(panel_b);
    double R10 = -R6*R7 + R8*R9;
    double R11 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R12 = R11*panel_straw0x;
    double R13 = R6*R9 + R7*R8;
    double R14 = R11*panel_straw0y;
    double result = 1.0*R0*(-R1*R2 + R3*R5)*cos(panel_b) + 1.0*R4*(R10*R12 - R13*R14)*cos(plane_b) + 1.0*(R1*R5 + R2*R3)*(R10*R14 + R12*R13);
    return result;
}


double CosmicTrack_DCAaligndir_z(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = 1.0*cos(plane_b);
    double R2 = sin(panel_g);
    double R3 = cos(panel_a);
    double R4 = cos(panel_g);
    double R5 = R0*sin(panel_b);
    double R6 = -R2*R3 + R4*R5;
    double R7 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R8 = R7*panel_straw0x;
    double R9 = R2*R5 + R3*R4;
    double R10 = R7*panel_straw0y;
    double result = R0*R1*cos(panel_b)*cos(plane_a) + R1*(R10*R6 + R8*R9)*sin(plane_a) - 1.0*(-R10*R9 + R6*R8)*sin(plane_b);
    return result;
}


double CosmicTrack_DCA_Deriv_a0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R43 = R42*b1;
    double R44 = R39*R40;
    double R45 = R42*R44;
    double R46 = R42*a1;
    double R47 = R35*R40;
    double R48 = R41*R43 - R45 + R46*R47;
    double R49 = 1.0/(1.0 - pow(R48, 2));
    double R50 = -plane_z;
    double R51 = R50 + panel_dz + panel_straw0z;
    double R52 = R2*R51;
    double R53 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R54 = R53*R6;
    double R55 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R56 = R24*R55;
    double R57 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R58 = R16*R4;
    double R59 = R20*R4;
    double R60 = R11*R58 - R59*R7;
    double R61 = R11*R59 + R58*R7;
    double R62 = R57*(-R10*R2 + R24*R61 - R6*R60);
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = R63*(R2*R64 + R24*R68 - R6*R67);
    double R70 = R52 - R54 + R56 + R62 + R69 - b0 + plane_dz + plane_z;
    double R71 = R41*R70;
    double R72 = R36*R51;
    double R73 = R37*R53;
    double R74 = R38*R55;
    double R75 = R57*(-R10*R36 + R37*R60 + R38*R61);
    double R76 = R63*(R36*R64 + R37*R67 + R38*R68);
    double R77 = R72 + R73 + R74 + R75 + R76 + plane_dy;
    double R78 = R44*R77;
    double R79 = R30*R51;
    double R80 = R31*R53;
    double R81 = R34*R55;
    double R82 = R57*(-R10*R30 + R31*R60 + R34*R61);
    double R83 = R63*(R30*R64 + R31*R67 + R34*R68);
    double R84 = R79 + R80 + R81 + R82 + R83 - a0 + plane_dx;
    double R85 = R47*R84;
    double R86 = -R42*R77 + R43*R70 + R46*R84;
    double R87 = R49*(R48*R86 - R71 - R78 - R85);
    double R88 = R49*(-R48*(R71 + R78 + R85) + R86);
    double R89 = R41*R87 - R43*R88 + R70;
    double R90 = R42*R88 + R44*R87 + R77;
    double R91 = -R46*R88 + R47*R87 + R84;
    double R92 = 2*R49;
    double R93 = R92*(-R46 + R47*R48);
    double R94 = R92*(-R46*R48 + R47);
    double R95 = ((1.0/2.0)*R89*(R41*R94 - R43*R93) + (1.0/2.0)*R90*(R42*R93 + R44*R94) + (1.0/2.0)*R91*(-R46*R93 + R47*R94 - 2))/sqrt(pow(R89, 2) + pow(R90, 2) + pow(R91, 2));
    double R96 = R42*R47 + R44*R46;
    double R97 = -R41*R46 + R43*R47;
    double R98 = -R41*R42 - R45*b1;
    double R99 = pow(pow(R96, 2) + pow(R97, 2) + pow(R98, 2), -1.0/2.0);
    double result = ((R96*R99*(R50 - R52 + R54 - R56 - R62 - R69 + b0 - plane_dz) + R97*R99*(-R72 - R73 - R74 - R75 - R76 - plane_dy) + R98*R99*(-R79 - R80 - R81 - R82 - R83 + a0 - plane_dx) > 0) ? (
   -R95
)
: (
   R95
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_b0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R43 = R42*b1;
    double R44 = R39*R40;
    double R45 = R42*R44;
    double R46 = R35*R40;
    double R47 = R42*a1;
    double R48 = R41*R43 - R45 + R46*R47;
    double R49 = 1.0/(1.0 - pow(R48, 2));
    double R50 = -plane_z;
    double R51 = R50 + panel_dz + panel_straw0z;
    double R52 = R2*R51;
    double R53 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R54 = R53*R6;
    double R55 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R56 = R24*R55;
    double R57 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R58 = R16*R4;
    double R59 = R20*R4;
    double R60 = R11*R58 - R59*R7;
    double R61 = R11*R59 + R58*R7;
    double R62 = R57*(-R10*R2 + R24*R61 - R6*R60);
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = R63*(R2*R64 + R24*R68 - R6*R67);
    double R70 = R52 - R54 + R56 + R62 + R69 - b0 + plane_dz + plane_z;
    double R71 = R41*R70;
    double R72 = R36*R51;
    double R73 = R37*R53;
    double R74 = R38*R55;
    double R75 = R57*(-R10*R36 + R37*R60 + R38*R61);
    double R76 = R63*(R36*R64 + R37*R67 + R38*R68);
    double R77 = R72 + R73 + R74 + R75 + R76 + plane_dy;
    double R78 = R44*R77;
    double R79 = R30*R51;
    double R80 = R31*R53;
    double R81 = R34*R55;
    double R82 = R57*(-R10*R30 + R31*R60 + R34*R61);
    double R83 = R63*(R30*R64 + R31*R67 + R34*R68);
    double R84 = R79 + R80 + R81 + R82 + R83 - a0 + plane_dx;
    double R85 = R46*R84;
    double R86 = -R42*R77 + R43*R70 + R47*R84;
    double R87 = R49*(R48*R86 - R71 - R78 - R85);
    double R88 = R49*(-R48*(R71 + R78 + R85) + R86);
    double R89 = R41*R87 - R43*R88 + R70;
    double R90 = R42*R88 + R44*R87 + R77;
    double R91 = R46*R87 - R47*R88 + R84;
    double R92 = 2*R49;
    double R93 = R92*(R41*R48 - R43);
    double R94 = R92*(R41 - R43*R48);
    double R95 = ((1.0/2.0)*R89*(R41*R94 - R43*R93 - 2) + (1.0/2.0)*R90*(R42*R93 + R44*R94) + (1.0/2.0)*R91*(R46*R94 - R47*R93))/sqrt(pow(R89, 2) + pow(R90, 2) + pow(R91, 2));
    double R96 = R42*R46 + R45*a1;
    double R97 = -R41*R47 + R43*R46;
    double R98 = -R41*R42 - R43*R44;
    double R99 = pow(pow(R96, 2) + pow(R97, 2) + pow(R98, 2), -1.0/2.0);
    double result = ((R96*R99*(R50 - R52 + R54 - R56 - R62 - R69 + b0 - plane_dz) + R97*R99*(-R72 - R73 - R74 - R75 - R76 - plane_dy) + R98*R99*(-R79 - R80 - R81 - R82 - R83 + a0 - plane_dx) > 0) ? (
   -R95
)
: (
   R95
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_a1(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = R42 + pow(b1, 2) + 1;
    double R44 = pow(R43, -1.0/2.0);
    double R45 = R44*b1;
    double R46 = R39*R40;
    double R47 = R44*R46;
    double R48 = R35*R40;
    double R49 = R44*R48;
    double R50 = R41*R45 - R47 + R49*a1;
    double R51 = 1.0 - pow(R50, 2);
    double R52 = 1.0/R51;
    double R53 = -plane_z;
    double R54 = R53 + panel_dz + panel_straw0z;
    double R55 = R2*R54;
    double R56 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R57 = R56*R6;
    double R58 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R59 = R24*R58;
    double R60 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R61 = R16*R4;
    double R62 = R20*R4;
    double R63 = R11*R61 - R62*R7;
    double R64 = R11*R62 + R61*R7;
    double R65 = R60*(-R10*R2 + R24*R64 - R6*R63);
    double R66 = -panel_straw0z + wire_z;
    double R67 = R4*R8;
    double R68 = R10*R17 + R18;
    double R69 = R10*R9 - R12;
    double R70 = R16*R68 - R20*R69;
    double R71 = R16*R69 + R20*R68;
    double R72 = R66*(R2*R67 + R24*R71 - R6*R70);
    double R73 = R55 - R57 + R59 + R65 + R72 - b0 + plane_dz + plane_z;
    double R74 = R36*R54;
    double R75 = R37*R56;
    double R76 = R38*R58;
    double R77 = R60*(-R10*R36 + R37*R63 + R38*R64);
    double R78 = R66*(R36*R67 + R37*R70 + R38*R71);
    double R79 = R74 + R75 + R76 + R77 + R78 + plane_dy;
    double R80 = R30*R54;
    double R81 = R31*R56;
    double R82 = R34*R58;
    double R83 = R60*(-R10*R30 + R31*R63 + R34*R64);
    double R84 = R66*(R30*R67 + R31*R70 + R34*R71);
    double R85 = R80 + R81 + R82 + R83 + R84 - a0 + plane_dx;
    double R86 = R44*R85;
    double R87 = -R44*R79 + R45*R73 + R86*a1;
    double R88 = R41*R73;
    double R89 = R46*R79;
    double R90 = R48*R85;
    double R91 = -R88 - R89 - R90;
    double R92 = R50*R87 + R91;
    double R93 = R52*R92;
    double R94 = -R50*(R88 + R89 + R90) + R87;
    double R95 = R52*R94;
    double R96 = R41*R93 - R45*R95 + R73;
    double R97 = R44*R95;
    double R98 = R46*R93 + R79 + R97;
    double R99 = R48*R93 + R85 - R97*a1;
    double R100 = pow(R43, -3.0/2.0);
    double R101 = R100*a1;
    double R102 = R101*b1;
    double R103 = 2*R95;
    double R104 = R102*R41;
    double R105 = R101*R46;
    double R106 = R100*R42;
    double R107 = R106*R48;
    double R108 = -R104 + R105 - R107 + R49;
    double R109 = R101*R79 - R102*R73 - R106*R85 + R86;
    double R110 = 2*R52;
    double R111 = R110*(R108*R91 + R109);
    double R112 = R110*(R108*R87 + R109*R50);
    double R113 = 2*R50*(-2*R104 + 2*R105 - 2*R107 + 2*R49)/pow(R51, 2);
    double R114 = R113*R94;
    double R115 = R113*R92;
    double R116 = R111*R44;
    double R117 = R114*R44;
    double R118 = ((1.0/2.0)*R96*(R102*R103 - R111*R45 + R112*R41 - R114*R45 + R115*R41) + (1.0/2.0)*R98*(-R101*R103 + R112*R46 + R115*R46 + R116 + R117) + (1.0/2.0)*R99*(R103*R106 + R112*R48 + R115*R48 - R116*a1 - R117*a1 - 2*R97))/sqrt(pow(R96, 2) + pow(R98, 2) + pow(R99, 2));
    double R119 = R47*a1 + R49;
    double R120 = R41*R44;
    double R121 = -R120*a1 + R45*R48;
    double R122 = -R120 - R47*b1;
    double R123 = pow(pow(R119, 2) + pow(R121, 2) + pow(R122, 2), -1.0/2.0);
    double result = ((R119*R123*(R53 - R55 + R57 - R59 - R65 - R72 + b0 - plane_dz) + R121*R123*(-R74 - R75 - R76 - R77 - R78 - plane_dy) + R122*R123*(-R80 - R81 - R82 - R83 - R84 + a0 - plane_dx) > 0) ? (
   -R118
)
: (
   R118
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_b1(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(b1, 2);
    double R43 = R42 + pow(a1, 2) + 1;
    double R44 = pow(R43, -1.0/2.0);
    double R45 = R41*R44;
    double R46 = R39*R40;
    double R47 = R44*R46;
    double R48 = R35*R40;
    double R49 = R44*a1;
    double R50 = R45*b1 - R47 + R48*R49;
    double R51 = 1.0 - pow(R50, 2);
    double R52 = 1.0/R51;
    double R53 = -plane_z;
    double R54 = R53 + panel_dz + panel_straw0z;
    double R55 = R2*R54;
    double R56 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R57 = R56*R6;
    double R58 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R59 = R24*R58;
    double R60 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R61 = R16*R4;
    double R62 = R20*R4;
    double R63 = R11*R61 - R62*R7;
    double R64 = R11*R62 + R61*R7;
    double R65 = R60*(-R10*R2 + R24*R64 - R6*R63);
    double R66 = -panel_straw0z + wire_z;
    double R67 = R4*R8;
    double R68 = R10*R17 + R18;
    double R69 = R10*R9 - R12;
    double R70 = R16*R68 - R20*R69;
    double R71 = R16*R69 + R20*R68;
    double R72 = R66*(R2*R67 + R24*R71 - R6*R70);
    double R73 = R55 - R57 + R59 + R65 + R72 - b0 + plane_dz + plane_z;
    double R74 = R44*R73;
    double R75 = R36*R54;
    double R76 = R37*R56;
    double R77 = R38*R58;
    double R78 = R60*(-R10*R36 + R37*R63 + R38*R64);
    double R79 = R66*(R36*R67 + R37*R70 + R38*R71);
    double R80 = R75 + R76 + R77 + R78 + R79 + plane_dy;
    double R81 = R30*R54;
    double R82 = R31*R56;
    double R83 = R34*R58;
    double R84 = R60*(-R10*R30 + R31*R63 + R34*R64);
    double R85 = R66*(R30*R67 + R31*R70 + R34*R71);
    double R86 = R81 + R82 + R83 + R84 + R85 - a0 + plane_dx;
    double R87 = -R44*R80 + R49*R86 + R74*b1;
    double R88 = R41*R73;
    double R89 = R46*R80;
    double R90 = R48*R86;
    double R91 = -R88 - R89 - R90;
    double R92 = R50*R87 + R91;
    double R93 = R52*R92;
    double R94 = -R50*(R88 + R89 + R90) + R87;
    double R95 = R52*R94;
    double R96 = R44*R95;
    double R97 = R41*R93 + R73 - R96*b1;
    double R98 = R46*R93 + R80 + R96;
    double R99 = R48*R93 - R49*R95 + R86;
    double R100 = pow(R43, -3.0/2.0);
    double R101 = R100*b1;
    double R102 = 2*R95;
    double R103 = R100*R42;
    double R104 = R103*R41;
    double R105 = R101*R46;
    double R106 = R101*a1;
    double R107 = R106*R48;
    double R108 = -R104 + R105 - R107 + R45;
    double R109 = R101*R80 - R103*R73 - R106*R86 + R74;
    double R110 = 2*R52;
    double R111 = R110*(R108*R91 + R109);
    double R112 = R111*R44;
    double R113 = R110*(R108*R87 + R109*R50);
    double R114 = 2*R50*(-2*R104 + 2*R105 - 2*R107 + 2*R45)/pow(R51, 2);
    double R115 = R114*R94;
    double R116 = R115*R44;
    double R117 = R114*R92;
    double R118 = ((1.0/2.0)*R97*(R102*R103 - R112*b1 + R113*R41 - R116*b1 + R117*R41 - 2*R96) + (1.0/2.0)*R98*(-R101*R102 + R112 + R113*R46 + R116 + R117*R46) + (1.0/2.0)*R99*(R102*R106 - R111*R49 + R113*R48 - R115*R49 + R117*R48))/sqrt(pow(R97, 2) + pow(R98, 2) + pow(R99, 2));
    double R119 = R44*R48;
    double R120 = R119 + R47*a1;
    double R121 = R119*b1 - R41*R49;
    double R122 = -R45 - R47*b1;
    double R123 = pow(pow(R120, 2) + pow(R121, 2) + pow(R122, 2), -1.0/2.0);
    double result = ((R120*R123*(R53 - R55 + R57 - R59 - R65 - R72 + b0 - plane_dz) + R121*R123*(-R75 - R76 - R77 - R78 - R79 - plane_dy) + R122*R123*(-R81 - R82 - R83 - R84 - R85 + a0 - plane_dx) > 0) ? (
   -R118
)
: (
   R118
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_t0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double result = -1;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dx(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R43 = R42*b1;
    double R44 = R39*R40;
    double R45 = R42*R44;
    double R46 = R42*a1;
    double R47 = R35*R40;
    double R48 = R41*R43 - R45 + R46*R47;
    double R49 = 1.0/(1.0 - pow(R48, 2));
    double R50 = -plane_z;
    double R51 = R50 + panel_dz + panel_straw0z;
    double R52 = R2*R51;
    double R53 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R54 = R53*R6;
    double R55 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R56 = R24*R55;
    double R57 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R58 = R16*R4;
    double R59 = R20*R4;
    double R60 = R11*R58 - R59*R7;
    double R61 = R11*R59 + R58*R7;
    double R62 = R57*(-R10*R2 + R24*R61 - R6*R60);
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = R63*(R2*R64 + R24*R68 - R6*R67);
    double R70 = R52 - R54 + R56 + R62 + R69 - b0 + plane_dz + plane_z;
    double R71 = R41*R70;
    double R72 = R36*R51;
    double R73 = R37*R53;
    double R74 = R38*R55;
    double R75 = R57*(-R10*R36 + R37*R60 + R38*R61);
    double R76 = R63*(R36*R64 + R37*R67 + R38*R68);
    double R77 = R72 + R73 + R74 + R75 + R76 + plane_dy;
    double R78 = R44*R77;
    double R79 = R30*R51;
    double R80 = R31*R53;
    double R81 = R34*R55;
    double R82 = R57*(-R10*R30 + R31*R60 + R34*R61);
    double R83 = R63*(R30*R64 + R31*R67 + R34*R68);
    double R84 = R79 + R80 + R81 + R82 + R83 - a0 + plane_dx;
    double R85 = R47*R84;
    double R86 = -R42*R77 + R43*R70 + R46*R84;
    double R87 = R49*(R48*R86 - R71 - R78 - R85);
    double R88 = R49*(-R48*(R71 + R78 + R85) + R86);
    double R89 = R41*R87 - R43*R88 + R70;
    double R90 = R42*R88 + R44*R87 + R77;
    double R91 = -R46*R88 + R47*R87 + R84;
    double R92 = 2*R49;
    double R93 = R92*(R46 - R47*R48);
    double R94 = R92*(R46*R48 - R47);
    double R95 = ((1.0/2.0)*R89*(R41*R94 - R43*R93) + (1.0/2.0)*R90*(R42*R93 + R44*R94) + (1.0/2.0)*R91*(-R46*R93 + R47*R94 + 2))/sqrt(pow(R89, 2) + pow(R90, 2) + pow(R91, 2));
    double R96 = R42*R47 + R44*R46;
    double R97 = -R41*R46 + R43*R47;
    double R98 = -R41*R42 - R45*b1;
    double R99 = pow(pow(R96, 2) + pow(R97, 2) + pow(R98, 2), -1.0/2.0);
    double result = ((R96*R99*(R50 - R52 + R54 - R56 - R62 - R69 + b0 - plane_dz) + R97*R99*(-R72 - R73 - R74 - R75 - R76 - plane_dy) + R98*R99*(-R79 - R80 - R81 - R82 - R83 + a0 - plane_dx) > 0) ? (
   -R95
)
: (
   R95
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dy(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R43 = R42*b1;
    double R44 = R39*R40;
    double R45 = R42*R44;
    double R46 = R35*R40;
    double R47 = R42*a1;
    double R48 = R41*R43 - R45 + R46*R47;
    double R49 = 1.0/(1.0 - pow(R48, 2));
    double R50 = -plane_z;
    double R51 = R50 + panel_dz + panel_straw0z;
    double R52 = R2*R51;
    double R53 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R54 = R53*R6;
    double R55 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R56 = R24*R55;
    double R57 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R58 = R16*R4;
    double R59 = R20*R4;
    double R60 = R11*R58 - R59*R7;
    double R61 = R11*R59 + R58*R7;
    double R62 = R57*(-R10*R2 + R24*R61 - R6*R60);
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = R63*(R2*R64 + R24*R68 - R6*R67);
    double R70 = R52 - R54 + R56 + R62 + R69 - b0 + plane_dz + plane_z;
    double R71 = R41*R70;
    double R72 = R36*R51;
    double R73 = R37*R53;
    double R74 = R38*R55;
    double R75 = R57*(-R10*R36 + R37*R60 + R38*R61);
    double R76 = R63*(R36*R64 + R37*R67 + R38*R68);
    double R77 = R72 + R73 + R74 + R75 + R76 + plane_dy;
    double R78 = R44*R77;
    double R79 = R30*R51;
    double R80 = R31*R53;
    double R81 = R34*R55;
    double R82 = R57*(-R10*R30 + R31*R60 + R34*R61);
    double R83 = R63*(R30*R64 + R31*R67 + R34*R68);
    double R84 = R79 + R80 + R81 + R82 + R83 - a0 + plane_dx;
    double R85 = R46*R84;
    double R86 = -R42*R77 + R43*R70 + R47*R84;
    double R87 = R49*(R48*R86 - R71 - R78 - R85);
    double R88 = R49*(-R48*(R71 + R78 + R85) + R86);
    double R89 = R41*R87 - R43*R88 + R70;
    double R90 = R42*R88 + R44*R87 + R77;
    double R91 = R46*R87 - R47*R88 + R84;
    double R92 = 2*R49;
    double R93 = R92*(-R42 - R44*R48);
    double R94 = R92*(-R42*R48 - R44);
    double R95 = ((1.0/2.0)*R89*(R41*R94 - R43*R93) + (1.0/2.0)*R90*(R42*R93 + R44*R94 + 2) + (1.0/2.0)*R91*(R46*R94 - R47*R93))/sqrt(pow(R89, 2) + pow(R90, 2) + pow(R91, 2));
    double R96 = R42*R46 + R45*a1;
    double R97 = -R41*R47 + R43*R46;
    double R98 = -R41*R42 - R45*b1;
    double R99 = pow(pow(R96, 2) + pow(R97, 2) + pow(R98, 2), -1.0/2.0);
    double result = ((R96*R99*(R50 - R52 + R54 - R56 - R62 - R69 + b0 - plane_dz) + R97*R99*(-R72 - R73 - R74 - R75 - R76 - plane_dy) + R98*R99*(-R79 - R80 - R81 - R82 - R83 + a0 - plane_dx) > 0) ? (
   -R95
)
: (
   R95
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dz(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R43 = R42*b1;
    double R44 = R39*R40;
    double R45 = R42*R44;
    double R46 = R35*R40;
    double R47 = R42*a1;
    double R48 = R41*R43 - R45 + R46*R47;
    double R49 = 1.0/(1.0 - pow(R48, 2));
    double R50 = -plane_z;
    double R51 = R50 + panel_dz + panel_straw0z;
    double R52 = R2*R51;
    double R53 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R54 = R53*R6;
    double R55 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R56 = R24*R55;
    double R57 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R58 = R16*R4;
    double R59 = R20*R4;
    double R60 = R11*R58 - R59*R7;
    double R61 = R11*R59 + R58*R7;
    double R62 = R57*(-R10*R2 + R24*R61 - R6*R60);
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = R63*(R2*R64 + R24*R68 - R6*R67);
    double R70 = R52 - R54 + R56 + R62 + R69 - b0 + plane_dz + plane_z;
    double R71 = R41*R70;
    double R72 = R36*R51;
    double R73 = R37*R53;
    double R74 = R38*R55;
    double R75 = R57*(-R10*R36 + R37*R60 + R38*R61);
    double R76 = R63*(R36*R64 + R37*R67 + R38*R68);
    double R77 = R72 + R73 + R74 + R75 + R76 + plane_dy;
    double R78 = R44*R77;
    double R79 = R30*R51;
    double R80 = R31*R53;
    double R81 = R34*R55;
    double R82 = R57*(-R10*R30 + R31*R60 + R34*R61);
    double R83 = R63*(R30*R64 + R31*R67 + R34*R68);
    double R84 = R79 + R80 + R81 + R82 + R83 - a0 + plane_dx;
    double R85 = R46*R84;
    double R86 = -R42*R77 + R43*R70 + R47*R84;
    double R87 = R49*(R48*R86 - R71 - R78 - R85);
    double R88 = R49*(-R48*(R71 + R78 + R85) + R86);
    double R89 = R41*R87 - R43*R88 + R70;
    double R90 = R42*R88 + R44*R87 + R77;
    double R91 = R46*R87 - R47*R88 + R84;
    double R92 = 2*R49;
    double R93 = R92*(-R41*R48 + R43);
    double R94 = R92*(-R41 + R43*R48);
    double R95 = ((1.0/2.0)*R89*(R41*R94 - R43*R93 + 2) + (1.0/2.0)*R90*(R42*R93 + R44*R94) + (1.0/2.0)*R91*(R46*R94 - R47*R93))/sqrt(pow(R89, 2) + pow(R90, 2) + pow(R91, 2));
    double R96 = R42*R46 + R45*a1;
    double R97 = -R41*R47 + R43*R46;
    double R98 = -R41*R42 - R43*R44;
    double R99 = pow(pow(R96, 2) + pow(R97, 2) + pow(R98, 2), -1.0/2.0);
    double result = ((R96*R99*(R50 - R52 + R54 - R56 - R62 - R69 + b0 - plane_dz) + R97*R99*(-R72 - R73 - R74 - R75 - R76 - plane_dy) + R98*R99*(-R79 - R80 - R81 - R82 - R83 + a0 - plane_dx) > 0) ? (
   -R95
)
: (
   R95
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_a(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = R3*R4;
    double R6 = 1.0*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R3;
    double R14 = -R10 + R11*R13;
    double R15 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R16 = 1.0/R15;
    double R17 = R16*panel_straw0x;
    double R18 = R12*R9;
    double R19 = R3*R8;
    double R20 = R11*R19 + R18;
    double R21 = R16*panel_straw0y;
    double R22 = 1.0*R14*R17 - 1.0*R20*R21;
    double R23 = R17*R20;
    double R24 = R14*R21;
    double R25 = R23 + R24;
    double R26 = 1.0*R25;
    double R27 = sin(plane_a);
    double R28 = R1*R27;
    double R29 = R2*R6 - R22*R7 + R26*R28;
    double R30 = sin(plane_g);
    double R31 = R27*R30;
    double R32 = cos(plane_g);
    double R33 = R0*R32;
    double R34 = R33*R7;
    double R35 = R31 + R34;
    double R36 = R1*R32;
    double R37 = R0*R30;
    double R38 = R27*R32;
    double R39 = R38*R7;
    double R40 = -R37 + R39;
    double R41 = R22*R36 + R26*R40 + R35*R6;
    double R42 = R37*R7;
    double R43 = -R38 + R42;
    double R44 = R1*R30;
    double R45 = R31*R7;
    double R46 = R33 + R45;
    double R47 = R22*R44 + R26*R46 + R43*R6;
    double R48 = pow(R29, 2) + pow(R41, 2) + pow(R47, 2);
    double R49 = pow(R48, -1.0/2.0);
    double R50 = R29*R49;
    double R51 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R52 = R51*b1;
    double R53 = R47*R49;
    double R54 = R51*R53;
    double R55 = R51*a1;
    double R56 = R41*R49;
    double R57 = R50*R52 - R54 + R55*R56;
    double R58 = 1.0 - pow(R57, 2);
    double R59 = 1.0/R58;
    double R60 = -plane_z;
    double R61 = R60 + panel_dz + panel_straw0z;
    double R62 = R2*R61;
    double R63 = R17*panel_dx - R21*panel_dy + panel_straw0x;
    double R64 = R63*R7;
    double R65 = R17*panel_dy + R21*panel_dx + panel_straw0y;
    double R66 = R28*R65;
    double R67 = -R15 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R68 = R17*R4;
    double R69 = R21*R4;
    double R70 = R12*R68 - R69*R8;
    double R71 = R12*R69 + R68*R8;
    double R72 = R67*(-R11*R2 + R28*R71 - R7*R70);
    double R73 = -panel_straw0z + wire_z;
    double R74 = R4*R9;
    double R75 = R11*R18 + R19;
    double R76 = R10*R11 - R13;
    double R77 = R17*R75 - R21*R76;
    double R78 = R17*R76 + R21*R75;
    double R79 = R73*(R2*R74 + R28*R78 - R7*R77);
    double R80 = R62 - R64 + R66 + R72 + R79 - b0 + plane_dz + plane_z;
    double R81 = R43*R61;
    double R82 = R44*R63;
    double R83 = R46*R65;
    double R84 = R67*(-R11*R43 + R44*R70 + R46*R71);
    double R85 = R73*(R43*R74 + R44*R77 + R46*R78);
    double R86 = R81 + R82 + R83 + R84 + R85 + plane_dy;
    double R87 = R35*R61;
    double R88 = R36*R63;
    double R89 = R40*R65;
    double R90 = R67*(-R11*R35 + R36*R70 + R40*R71);
    double R91 = R73*(R35*R74 + R36*R77 + R40*R78);
    double R92 = R87 + R88 + R89 + R90 + R91 - a0 + plane_dx;
    double R93 = -R51*R86 + R52*R80 + R55*R92;
    double R94 = R49*R80;
    double R95 = R29*R94;
    double R96 = R53*R86;
    double R97 = R49*R92;
    double R98 = R41*R97;
    double R99 = -R95 - R96 - R98;
    double R100 = R57*R93 + R99;
    double R101 = R100*R59;
    double R102 = -R57*(R95 + R96 + R98) + R93;
    double R103 = R102*R59;
    double R104 = R101*R50 - R103*R52 + R80;
    double R105 = R101*R53 + R103*R51 + R86;
    double R106 = R101*R56 - R103*R55 + R92;
    double R107 = R28*R61;
    double R108 = R2*R65;
    double R109 = R67*(R11*R28 + R2*R71);
    double R110 = R73*(R2*R78 - R28*R74);
    double R111 = R2*(1.0*R23 + 1.0*R24);
    double R112 = R111 - R28*R6;
    double R113 = R112*R49;
    double R114 = 2*R101;
    double R115 = R5*(1.0*R37 - 1.0*R39);
    double R116 = R25*(1.0*R31 + 1.0*R34);
    double R117 = R5*(-1.0*R33 - 1.0*R45);
    double R118 = R25*(-1.0*R38 + 1.0*R42);
    double R119 = (-1.0/2.0*R29*(2*R111 - 2.0*R28*R5) - 1.0/2.0*R41*(2*R115 + 2*R116) - 1.0/2.0*R47*(2*R117 + 2*R118))/pow(R48, 3.0/2.0);
    double R120 = R119*R29;
    double R121 = R113*R52;
    double R122 = R49*(R117 + R118);
    double R123 = R122*R51;
    double R124 = R115 + R116;
    double R125 = R124*R49;
    double R126 = R125*R55;
    double R127 = R120*R52;
    double R128 = R119*R47;
    double R129 = R128*R51;
    double R130 = R119*R41;
    double R131 = R130*R55;
    double R132 = 2*R57*(2*R121 - 2*R123 + 2*R126 + 2*R127 - 2*R129 + 2*R131)/pow(R58, 2);
    double R133 = R102*R132;
    double R134 = R100*R132;
    double R135 = -R107 + R108 + R109 + R110;
    double R136 = R37 - R39;
    double R137 = R136*R61;
    double R138 = R35*R65;
    double R139 = R67*(R11*R40 + R35*R71);
    double R140 = R73*(R136*R74 + R35*R78);
    double R141 = R137 + R138 + R139 + R140;
    double R142 = -R33 - R45;
    double R143 = R142*R61;
    double R144 = R43*R65;
    double R145 = R67*(R11*R46 + R43*R71);
    double R146 = R73*(R142*R74 + R43*R78);
    double R147 = R143 + R144 + R145 + R146;
    double R148 = R135*R52 + R141*R55 - R147*R51;
    double R149 = R121 - R123 + R126 + R127 - R129 + R131;
    double R150 = -R112*R94 - R120*R80 - R122*R86 - R124*R97 - R128*R86 - R130*R92 - R135*R50 - R141*R56 - R147*R53;
    double R151 = 2*R59;
    double R152 = R151*(R148*R57 + R149*R93 + R150);
    double R153 = R151*(R148 + R149*R99 + R150*R57);
    double R154 = ((1.0/2.0)*R104*(-2*R107 + 2*R108 + 2*R109 + 2*R110 + R113*R114 + R114*R120 - R133*R52 + R134*R50 + R152*R50 - R153*R52) + (1.0/2.0)*R105*(R114*R122 + R114*R128 + R133*R51 + R134*R53 + 2*R143 + 2*R144 + 2*R145 + 2*R146 + R152*R53 + R153*R51) + (1.0/2.0)*R106*(R114*R125 + R114*R130 - R133*R55 + R134*R56 + 2*R137 + 2*R138 + 2*R139 + 2*R140 + R152*R56 - R153*R55))/sqrt(pow(R104, 2) + pow(R105, 2) + pow(R106, 2));
    double R155 = R51*R56 + R54*a1;
    double R156 = -R50*R55 + R52*R56;
    double R157 = -R50*R51 - R54*b1;
    double R158 = pow(pow(R155, 2) + pow(R156, 2) + pow(R157, 2), -1.0/2.0);
    double result = ((R155*R158*(R60 - R62 + R64 - R66 - R72 - R79 + b0 - plane_dz) + R156*R158*(-R81 - R82 - R83 - R84 - R85 - plane_dy) + R157*R158*(-R87 - R88 - R89 - R90 - R91 + a0 - plane_dx) > 0) ? (
   -R154
)
: (
   R154
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_b(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = R3*R4;
    double R6 = 1.0*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R3;
    double R14 = -R10 + R11*R13;
    double R15 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R16 = 1.0/R15;
    double R17 = R16*panel_straw0x;
    double R18 = R14*R17;
    double R19 = R12*R9;
    double R20 = R3*R8;
    double R21 = R11*R20 + R19;
    double R22 = R16*panel_straw0y;
    double R23 = R21*R22;
    double R24 = 1.0*R18 - 1.0*R23;
    double R25 = R17*R21;
    double R26 = R14*R22;
    double R27 = R25 + R26;
    double R28 = 1.0*R27;
    double R29 = sin(plane_a);
    double R30 = R1*R29;
    double R31 = R2*R6 - R24*R7 + R28*R30;
    double R32 = sin(plane_g);
    double R33 = R29*R32;
    double R34 = cos(plane_g);
    double R35 = R0*R34;
    double R36 = R33 + R35*R7;
    double R37 = R1*R34;
    double R38 = R0*R32;
    double R39 = R29*R34;
    double R40 = -R38 + R39*R7;
    double R41 = R24*R37 + R28*R40 + R36*R6;
    double R42 = R38*R7 - R39;
    double R43 = R1*R32;
    double R44 = R33*R7 + R35;
    double R45 = R24*R43 + R28*R44 + R42*R6;
    double R46 = pow(R31, 2) + pow(R41, 2) + pow(R45, 2);
    double R47 = pow(R46, -1.0/2.0);
    double R48 = R31*R47;
    double R49 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R50 = R49*b1;
    double R51 = R45*R47;
    double R52 = R49*R51;
    double R53 = R41*R47;
    double R54 = R49*a1;
    double R55 = R48*R50 - R52 + R53*R54;
    double R56 = 1.0 - pow(R55, 2);
    double R57 = 1.0/R56;
    double R58 = -plane_z;
    double R59 = R58 + panel_dz + panel_straw0z;
    double R60 = R2*R59;
    double R61 = R17*panel_dx;
    double R62 = R22*panel_dy;
    double R63 = R61 - R62 + panel_straw0x;
    double R64 = R63*R7;
    double R65 = R17*panel_dy + R22*panel_dx + panel_straw0y;
    double R66 = R30*R65;
    double R67 = -R15 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R68 = R17*R4;
    double R69 = R12*R68;
    double R70 = R22*R4;
    double R71 = R70*R8;
    double R72 = R69 - R71;
    double R73 = R7*R72;
    double R74 = R12*R70 + R68*R8;
    double R75 = R67*(-R11*R2 + R30*R74 - R73);
    double R76 = -panel_straw0z + wire_z;
    double R77 = R4*R9;
    double R78 = R11*R19 + R20;
    double R79 = R17*R78;
    double R80 = R10*R11 - R13;
    double R81 = R22*R80;
    double R82 = R79 - R81;
    double R83 = R7*R82;
    double R84 = R17*R80 + R22*R78;
    double R85 = R76*(R2*R77 + R30*R84 - R83);
    double R86 = R60 - R64 + R66 + R75 + R85 - b0 + plane_dz + plane_z;
    double R87 = R42*R59;
    double R88 = R43*R63;
    double R89 = R44*R65;
    double R90 = R67*(-R11*R42 + R43*R72 + R44*R74);
    double R91 = R76*(R42*R77 + R43*R82 + R44*R84);
    double R92 = R87 + R88 + R89 + R90 + R91 + plane_dy;
    double R93 = R36*R59;
    double R94 = R37*R63;
    double R95 = R40*R65;
    double R96 = R67*(-R11*R36 + R37*R72 + R40*R74);
    double R97 = R76*(R36*R77 + R37*R82 + R40*R84);
    double R98 = R93 + R94 + R95 + R96 + R97 - a0 + plane_dx;
    double R99 = -R49*R92 + R50*R86 + R54*R98;
    double R100 = R47*R86;
    double R101 = R100*R31;
    double R102 = R51*R92;
    double R103 = R53*R98;
    double R104 = -R101 - R102 - R103;
    double R105 = R104 + R55*R99;
    double R106 = R105*R57;
    double R107 = -R55*(R101 + R102 + R103) + R99;
    double R108 = R107*R57;
    double R109 = R106*R48 - R108*R50 + R86;
    double R110 = R106*R51 + R108*R49 + R92;
    double R111 = R106*R53 - R108*R54 + R98;
    double R112 = R0*R7;
    double R113 = R112*R59;
    double R114 = R29*R7;
    double R115 = R114*R65;
    double R116 = R1*(-R61 + R62 - panel_straw0x);
    double R117 = R67*(R1*(-R69 + R71) + R11*R112 - R114*R74);
    double R118 = R76*(R1*(-R79 + R81) - R112*R77 - R114*R84);
    double R119 = 1.0*R23;
    double R120 = 1.0*R18;
    double R121 = R1*(R119 - R120);
    double R122 = R114*(1.0*R25 + 1.0*R26);
    double R123 = -R112*R6 + R121 - R122;
    double R124 = R123*R47;
    double R125 = 2*R106;
    double R126 = 2.0*R5;
    double R127 = R1*R35;
    double R128 = R7*(-R119 + R120);
    double R129 = R128*R34;
    double R130 = R1*R39;
    double R131 = 2.0*R27;
    double R132 = R1*R38;
    double R133 = R128*R32;
    double R134 = R1*R33;
    double R135 = (-1.0/2.0*R31*(-R112*R126 + 2*R121 - 2*R122) - 1.0/2.0*R41*(R126*R127 - 2*R129 + R130*R131) - 1.0/2.0*R45*(R126*R132 + R131*R134 - 2*R133))/pow(R46, 3.0/2.0);
    double R136 = R135*R31;
    double R137 = R124*R50;
    double R138 = R47*(R132*R6 - R133 + R134*R28);
    double R139 = R138*R49;
    double R140 = R47*(R127*R6 - R129 + R130*R28);
    double R141 = R140*R54;
    double R142 = R136*R50;
    double R143 = R135*R45;
    double R144 = R143*R49;
    double R145 = R135*R41;
    double R146 = R145*R54;
    double R147 = 2*R55*(2*R137 - 2*R139 + 2*R141 + 2*R142 - 2*R144 + 2*R146)/pow(R56, 2);
    double R148 = R107*R147;
    double R149 = R105*R147;
    double R150 = -R113 - R115 + R116 + R117 + R118;
    double R151 = R132*R59;
    double R152 = R32*R64;
    double R153 = R134*R65;
    double R154 = R67*(-R11*R132 + R134*R74 - R32*R73);
    double R155 = R76*(R132*R77 + R134*R84 - R32*R83);
    double R156 = R151 - R152 + R153 + R154 + R155;
    double R157 = R127*R59;
    double R158 = R34*R64;
    double R159 = R130*R65;
    double R160 = R67*(-R11*R127 + R130*R74 - R34*R73);
    double R161 = R76*(R127*R77 + R130*R84 - R34*R83);
    double R162 = R157 - R158 + R159 + R160 + R161;
    double R163 = R150*R50 - R156*R49 + R162*R54;
    double R164 = R137 - R139 + R141 + R142 - R144 + R146;
    double R165 = -R100*R123 - R136*R86 - R138*R92 - R140*R98 - R143*R92 - R145*R98 - R150*R48 - R156*R51 - R162*R53;
    double R166 = 2*R57;
    double R167 = R166*(R163*R55 + R164*R99 + R165);
    double R168 = R166*(R104*R164 + R163 + R165*R55);
    double R169 = ((1.0/2.0)*R109*(-2*R113 - 2*R115 + 2*R116 + 2*R117 + 2*R118 + R124*R125 + R125*R136 - R148*R50 + R149*R48 + R167*R48 - R168*R50) + (1.0/2.0)*R110*(R125*R138 + R125*R143 + R148*R49 + R149*R51 + 2*R151 - 2*R152 + 2*R153 + 2*R154 + 2*R155 + R167*R51 + R168*R49) + (1.0/2.0)*R111*(R125*R140 + R125*R145 - R148*R54 + R149*R53 + 2*R157 - 2*R158 + 2*R159 + 2*R160 + 2*R161 + R167*R53 - R168*R54))/sqrt(pow(R109, 2) + pow(R110, 2) + pow(R111, 2));
    double R170 = R49*R53 + R52*a1;
    double R171 = -R48*R54 + R50*R53;
    double R172 = -R48*R49 - R52*b1;
    double R173 = pow(pow(R170, 2) + pow(R171, 2) + pow(R172, 2), -1.0/2.0);
    double result = ((R170*R173*(R58 - R60 + R64 - R66 - R75 - R85 + b0 - plane_dz) + R171*R173*(-R87 - R88 - R89 - R90 - R91 - plane_dy) + R172*R173*(-R93 - R94 - R95 - R96 - R97 + a0 - plane_dx) > 0) ? (
   -R169
)
: (
   R169
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_g(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = R3*R4;
    double R6 = 1.0*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R3;
    double R14 = -R10 + R11*R13;
    double R15 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R16 = 1.0/R15;
    double R17 = R16*panel_straw0x;
    double R18 = R14*R17;
    double R19 = R12*R9;
    double R20 = R3*R8;
    double R21 = R11*R20 + R19;
    double R22 = R16*panel_straw0y;
    double R23 = R21*R22;
    double R24 = 1.0*R18 - 1.0*R23;
    double R25 = R14*R22 + R17*R21;
    double R26 = 1.0*R25;
    double R27 = sin(plane_a);
    double R28 = R1*R27;
    double R29 = R2*R6 - R24*R7 + R26*R28;
    double R30 = sin(plane_g);
    double R31 = R27*R30;
    double R32 = cos(plane_g);
    double R33 = R0*R32;
    double R34 = R33*R7;
    double R35 = R31 + R34;
    double R36 = R1*R32;
    double R37 = R0*R30;
    double R38 = R27*R32;
    double R39 = R38*R7;
    double R40 = -R37 + R39;
    double R41 = R24*R36 + R26*R40 + R35*R6;
    double R42 = R37*R7;
    double R43 = -R38 + R42;
    double R44 = R1*R30;
    double R45 = R31*R7;
    double R46 = R33 + R45;
    double R47 = R24*R44 + R26*R46 + R43*R6;
    double R48 = pow(R29, 2) + pow(R41, 2) + pow(R47, 2);
    double R49 = pow(R48, -1.0/2.0);
    double R50 = R29*R49;
    double R51 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R52 = R51*b1;
    double R53 = R47*R49;
    double R54 = R51*R53;
    double R55 = R51*a1;
    double R56 = R41*R49;
    double R57 = R50*R52 - R54 + R55*R56;
    double R58 = 1.0 - pow(R57, 2);
    double R59 = 1.0/R58;
    double R60 = -plane_z;
    double R61 = R60 + panel_dz + panel_straw0z;
    double R62 = R2*R61;
    double R63 = R17*panel_dx - R22*panel_dy + panel_straw0x;
    double R64 = R63*R7;
    double R65 = R17*panel_dy + R22*panel_dx + panel_straw0y;
    double R66 = R28*R65;
    double R67 = -R15 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R68 = R17*R4;
    double R69 = R22*R4;
    double R70 = R12*R68 - R69*R8;
    double R71 = R12*R69 + R68*R8;
    double R72 = R67*(-R11*R2 + R28*R71 - R7*R70);
    double R73 = -panel_straw0z + wire_z;
    double R74 = R4*R9;
    double R75 = R11*R19 + R20;
    double R76 = R10*R11 - R13;
    double R77 = R17*R75 - R22*R76;
    double R78 = R17*R76 + R22*R75;
    double R79 = R73*(R2*R74 + R28*R78 - R7*R77);
    double R80 = R62 - R64 + R66 + R72 + R79 - b0 + plane_dz + plane_z;
    double R81 = R43*R61;
    double R82 = R44*R63;
    double R83 = R46*R65;
    double R84 = R11*R43;
    double R85 = R44*R70;
    double R86 = R67*(R46*R71 - R84 + R85);
    double R87 = R44*R77;
    double R88 = R73*(R43*R74 + R46*R78 + R87);
    double R89 = R81 + R82 + R83 + R86 + R88 + plane_dy;
    double R90 = R36*R70 + R40*R71;
    double R91 = R67*(-R11*R35 + R90);
    double R92 = R73*(R35*R74 + R36*R77 + R40*R78);
    double R93 = R35*R61;
    double R94 = R40*R65;
    double R95 = R36*R63;
    double R96 = R92 + R93 + R94 + R95;
    double R97 = R91 + R96 - a0 + plane_dx;
    double R98 = -R51*R89 + R52*R80 + R55*R97;
    double R99 = R50*R80;
    double R100 = R53*R89;
    double R101 = R49*R97;
    double R102 = R101*R41;
    double R103 = -R100 - R102 - R99;
    double R104 = R103 + R57*R98;
    double R105 = R104*R59;
    double R106 = -R57*(R100 + R102 + R99) + R98;
    double R107 = R106*R59;
    double R108 = R105*R50 - R107*R52 + R80;
    double R109 = R105*R53 + R107*R51 + R89;
    double R110 = R105*R56 - R107*R55 + R97;
    double R111 = R5*(1.0*R38 - 1.0*R42);
    double R112 = 1.0*R18 - 1.0*R23;
    double R113 = R112*R44;
    double R114 = R25*(-1.0*R33 - 1.0*R45);
    double R115 = R5*(1.0*R31 + 1.0*R34);
    double R116 = R112*R36;
    double R117 = R25*(-1.0*R37 + 1.0*R39);
    double R118 = (-1.0/2.0*R41*(2*R111 - 2*R113 + 2*R114) - 1.0/2.0*R47*(2*R115 + 2*R116 + 2*R117))/pow(R48, 3.0/2.0);
    double R119 = R118*R29;
    double R120 = 2*R105;
    double R121 = R49*(R115 + R116 + R117);
    double R122 = R121*R51;
    double R123 = R111 - R113 + R114;
    double R124 = R123*R49;
    double R125 = R124*R55;
    double R126 = R119*R52;
    double R127 = R118*R47;
    double R128 = R127*R51;
    double R129 = R118*R41;
    double R130 = R129*R55;
    double R131 = 2*R57*(-2*R122 + 2*R125 + 2*R126 - 2*R128 + 2*R130)/pow(R58, 2);
    double R132 = R106*R131;
    double R133 = R104*R131;
    double R134 = R67*(R11*(-R31 - R34) + R90);
    double R135 = R134 + R96;
    double R136 = R38 - R42;
    double R137 = R136*R61;
    double R138 = -R82;
    double R139 = -R33 - R45;
    double R140 = R139*R65;
    double R141 = R67*(R139*R71 + R84 - R85);
    double R142 = R73*(R136*R74 + R139*R78 - R87);
    double R143 = R137 + R138 + R140 + R141 + R142;
    double R144 = -R135*R51 + R143*R55;
    double R145 = -R122 + R125 + R126 - R128 + R130;
    double R146 = -R101*R123 - R119*R80 - R121*R89 - R127*R89 - R129*R97 - R135*R53 - R143*R56;
    double R147 = 2*R59;
    double R148 = R147*(R144*R57 + R145*R98 + R146);
    double R149 = R147*(R103*R145 + R144 + R146*R57);
    double R150 = ((1.0/2.0)*R108*(R119*R120 - R132*R52 + R133*R50 + R148*R50 - R149*R52) + (1.0/2.0)*R109*(R120*R121 + R120*R127 + R132*R51 + R133*R53 + 2*R134 + R148*R53 + R149*R51 + 2*R92 + 2*R93 + 2*R94 + 2*R95) + (1.0/2.0)*R110*(R120*R124 + R120*R129 - R132*R55 + R133*R56 + 2*R137 + 2*R140 + 2*R141 + 2*R142 + R148*R56 - R149*R55 - 2*R82))/sqrt(pow(R108, 2) + pow(R109, 2) + pow(R110, 2));
    double R151 = R51*R56 + R54*a1;
    double R152 = -R50*R55 + R52*R56;
    double R153 = -R50*R51 - R54*b1;
    double R154 = pow(pow(R151, 2) + pow(R152, 2) + pow(R153, 2), -1.0/2.0);
    double result = ((R151*R154*(R60 - R62 + R64 - R66 - R72 - R79 + b0 - plane_dz) + R152*R154*(R138 - R81 - R83 - R86 - R88 - plane_dy) + R153*R154*(-R91 - R92 - R93 - R94 - R95 + a0 - plane_dx) > 0) ? (
   -R150
)
: (
   R150
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dx(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R43 = R42*b1;
    double R44 = R39*R40;
    double R45 = R42*R44;
    double R46 = R35*R40;
    double R47 = R42*a1;
    double R48 = R41*R43 - R45 + R46*R47;
    double R49 = 1.0/(1.0 - pow(R48, 2));
    double R50 = -plane_z;
    double R51 = R50 + panel_dz + panel_straw0z;
    double R52 = R2*R51;
    double R53 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R54 = R53*R6;
    double R55 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R56 = R24*R55;
    double R57 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R58 = R16*R4;
    double R59 = R20*R4;
    double R60 = R11*R58 - R59*R7;
    double R61 = R11*R59 + R58*R7;
    double R62 = R57*(-R10*R2 + R24*R61 - R6*R60);
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = R63*(R2*R64 + R24*R68 - R6*R67);
    double R70 = R52 - R54 + R56 + R62 + R69 - b0 + plane_dz + plane_z;
    double R71 = R41*R70;
    double R72 = R36*R51;
    double R73 = R37*R53;
    double R74 = R38*R55;
    double R75 = R57*(-R10*R36 + R37*R60 + R38*R61);
    double R76 = R63*(R36*R64 + R37*R67 + R38*R68);
    double R77 = R72 + R73 + R74 + R75 + R76 + plane_dy;
    double R78 = R44*R77;
    double R79 = R30*R51;
    double R80 = R31*R53;
    double R81 = R34*R55;
    double R82 = R57*(-R10*R30 + R31*R60 + R34*R61);
    double R83 = R63*(R30*R64 + R31*R67 + R34*R68);
    double R84 = R79 + R80 + R81 + R82 + R83 - a0 + plane_dx;
    double R85 = R46*R84;
    double R86 = -R42*R77 + R43*R70 + R47*R84;
    double R87 = R49*(R48*R86 - R71 - R78 - R85);
    double R88 = R49*(-R48*(R71 + R78 + R85) + R86);
    double R89 = R41*R87 - R43*R88 + R70;
    double R90 = R42*R88 + R44*R87 + R77;
    double R91 = R46*R87 - R47*R88 + R84;
    double R92 = R16*R6;
    double R93 = R20*R24;
    double R94 = -R92 + R93;
    double R95 = R16*R37;
    double R96 = R20*R38;
    double R97 = R95 + R96;
    double R98 = R16*R31;
    double R99 = R20*R34;
    double R100 = R98 + R99;
    double R101 = -R100*R46 - R41*R94 - R44*R97;
    double R102 = R100*R47 - R42*R97 + R43*R94;
    double R103 = 2*R49;
    double R104 = R103*(R101*R48 + R102);
    double R105 = R103*(R101 + R102*R48);
    double R106 = ((1.0/2.0)*R89*(-R104*R43 + R105*R41 - 2*R92 + 2*R93) + (1.0/2.0)*R90*(R104*R42 + R105*R44 + 2*R95 + 2*R96) + (1.0/2.0)*R91*(-R104*R47 + R105*R46 + 2*R98 + 2*R99))/sqrt(pow(R89, 2) + pow(R90, 2) + pow(R91, 2));
    double R107 = R42*R46 + R45*a1;
    double R108 = -R41*R47 + R43*R46;
    double R109 = -R41*R42 - R45*b1;
    double R110 = pow(pow(R107, 2) + pow(R108, 2) + pow(R109, 2), -1.0/2.0);
    double result = ((R107*R110*(R50 - R52 + R54 - R56 - R62 - R69 + b0 - plane_dz) + R108*R110*(-R72 - R73 - R74 - R75 - R76 - plane_dy) + R109*R110*(-R79 - R80 - R81 - R82 - R83 + a0 - plane_dx) > 0) ? (
   -R106
)
: (
   R106
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dy(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R43 = R42*b1;
    double R44 = R39*R40;
    double R45 = R42*R44;
    double R46 = R35*R40;
    double R47 = R42*a1;
    double R48 = R41*R43 - R45 + R46*R47;
    double R49 = 1.0/(1.0 - pow(R48, 2));
    double R50 = -plane_z;
    double R51 = R50 + panel_dz + panel_straw0z;
    double R52 = R2*R51;
    double R53 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R54 = R53*R6;
    double R55 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R56 = R24*R55;
    double R57 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R58 = R16*R4;
    double R59 = R20*R4;
    double R60 = R11*R58 - R59*R7;
    double R61 = R11*R59 + R58*R7;
    double R62 = R57*(-R10*R2 + R24*R61 - R6*R60);
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = R63*(R2*R64 + R24*R68 - R6*R67);
    double R70 = R52 - R54 + R56 + R62 + R69 - b0 + plane_dz + plane_z;
    double R71 = R41*R70;
    double R72 = R36*R51;
    double R73 = R37*R53;
    double R74 = R38*R55;
    double R75 = R57*(-R10*R36 + R37*R60 + R38*R61);
    double R76 = R63*(R36*R64 + R37*R67 + R38*R68);
    double R77 = R72 + R73 + R74 + R75 + R76 + plane_dy;
    double R78 = R44*R77;
    double R79 = R30*R51;
    double R80 = R31*R53;
    double R81 = R34*R55;
    double R82 = R57*(-R10*R30 + R31*R60 + R34*R61);
    double R83 = R63*(R30*R64 + R31*R67 + R34*R68);
    double R84 = R79 + R80 + R81 + R82 + R83 - a0 + plane_dx;
    double R85 = R46*R84;
    double R86 = -R42*R77 + R43*R70 + R47*R84;
    double R87 = R49*(R48*R86 - R71 - R78 - R85);
    double R88 = R49*(-R48*(R71 + R78 + R85) + R86);
    double R89 = R41*R87 - R43*R88 + R70;
    double R90 = R42*R88 + R44*R87 + R77;
    double R91 = R46*R87 - R47*R88 + R84;
    double R92 = R20*R6;
    double R93 = R16*R24;
    double R94 = R92 + R93;
    double R95 = R20*R37;
    double R96 = R16*R38;
    double R97 = -R95 + R96;
    double R98 = R20*R31;
    double R99 = R16*R34;
    double R100 = -R98 + R99;
    double R101 = -R100*R46 - R41*R94 - R44*R97;
    double R102 = R100*R47 - R42*R97 + R43*R94;
    double R103 = 2*R49;
    double R104 = R103*(R101*R48 + R102);
    double R105 = R103*(R101 + R102*R48);
    double R106 = ((1.0/2.0)*R89*(-R104*R43 + R105*R41 + 2*R92 + 2*R93) + (1.0/2.0)*R90*(R104*R42 + R105*R44 - 2*R95 + 2*R96) + (1.0/2.0)*R91*(-R104*R47 + R105*R46 - 2*R98 + 2*R99))/sqrt(pow(R89, 2) + pow(R90, 2) + pow(R91, 2));
    double R107 = R42*R46 + R45*a1;
    double R108 = -R41*R47 + R43*R46;
    double R109 = -R41*R42 - R45*b1;
    double R110 = pow(pow(R107, 2) + pow(R108, 2) + pow(R109, 2), -1.0/2.0);
    double result = ((R107*R110*(R50 - R52 + R54 - R56 - R62 - R69 + b0 - plane_dz) + R108*R110*(-R72 - R73 - R74 - R75 - R76 - plane_dy) + R109*R110*(-R79 - R80 - R81 - R82 - R83 + a0 - plane_dx) > 0) ? (
   -R106
)
: (
   R106
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dz(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R29*R6;
    double R31 = R27 + R30;
    double R32 = R1*R28;
    double R33 = R0*R26;
    double R34 = R23*R28;
    double R35 = -R33 + R34*R6;
    double R36 = R21*R32 + R22*R35 + R31*R5;
    double R37 = R33*R6;
    double R38 = -R34 + R37;
    double R39 = R1*R26;
    double R40 = R27*R6 + R29;
    double R41 = R21*R39 + R22*R40 + R38*R5;
    double R42 = pow(pow(R25, 2) + pow(R36, 2) + pow(R41, 2), -1.0/2.0);
    double R43 = R25*R42;
    double R44 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R45 = R44*b1;
    double R46 = R41*R42;
    double R47 = R44*R46;
    double R48 = R36*R42;
    double R49 = R44*a1;
    double R50 = R43*R45 - R47 + R48*R49;
    double R51 = 1.0/(1.0 - pow(R50, 2));
    double R52 = -plane_z;
    double R53 = R52 + panel_dz + panel_straw0z;
    double R54 = R2*R53;
    double R55 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R56 = R55*R6;
    double R57 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R58 = R24*R57;
    double R59 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R60 = R16*R4;
    double R61 = R20*R4;
    double R62 = R11*R60 - R61*R7;
    double R63 = R11*R61 + R60*R7;
    double R64 = R59*(-R10*R2 + R24*R63 - R6*R62);
    double R65 = -panel_straw0z + wire_z;
    double R66 = R4*R8;
    double R67 = R10*R17 + R18;
    double R68 = R10*R9 - R12;
    double R69 = R16*R67 - R20*R68;
    double R70 = R16*R68 + R20*R67;
    double R71 = R65*(R2*R66 + R24*R70 - R6*R69);
    double R72 = R54 - R56 + R58 + R64 + R71 - b0 + plane_dz + plane_z;
    double R73 = R43*R72;
    double R74 = R38*R53;
    double R75 = R39*R55;
    double R76 = R40*R57;
    double R77 = R59*(-R10*R38 + R39*R62 + R40*R63);
    double R78 = R65*(R38*R66 + R39*R69 + R40*R70);
    double R79 = R74 + R75 + R76 + R77 + R78 + plane_dy;
    double R80 = R46*R79;
    double R81 = R31*R53;
    double R82 = R32*R55;
    double R83 = R35*R57;
    double R84 = R59*(-R10*R31 + R32*R62 + R35*R63);
    double R85 = R65*(R31*R66 + R32*R69 + R35*R70);
    double R86 = R81 + R82 + R83 + R84 + R85 - a0 + plane_dx;
    double R87 = R48*R86;
    double R88 = -R44*R79 + R45*R72 + R49*R86;
    double R89 = R51*(R50*R88 - R73 - R80 - R87);
    double R90 = R51*(-R50*(R73 + R80 + R87) + R88);
    double R91 = R43*R89 - R45*R90 + R72;
    double R92 = R44*R90 + R46*R89 + R79;
    double R93 = R48*R89 - R49*R90 + R86;
    double R94 = -R2*R43 - R31*R48 - R38*R46;
    double R95 = R2*R45 + R31*R49 - R38*R44;
    double R96 = 2*R51;
    double R97 = R96*(R50*R94 + R95);
    double R98 = R96*(R50*R95 + R94);
    double R99 = ((1.0/2.0)*R91*(2*R2 + R43*R98 - R45*R97) + (1.0/2.0)*R92*(-2*R34 + 2*R37 + R44*R97 + R46*R98) + (1.0/2.0)*R93*(2*R27 + 2*R30 + R48*R98 - R49*R97))/sqrt(pow(R91, 2) + pow(R92, 2) + pow(R93, 2));
    double R100 = R44*R48 + R47*a1;
    double R101 = -R43*R49 + R45*R48;
    double R102 = -R43*R44 - R47*b1;
    double R103 = pow(pow(R100, 2) + pow(R101, 2) + pow(R102, 2), -1.0/2.0);
    double result = ((R100*R103*(R52 - R54 + R56 - R58 - R64 - R71 + b0 - plane_dz) + R101*R103*(-R74 - R75 - R76 - R77 - R78 - plane_dy) + R102*R103*(-R81 - R82 - R83 - R84 - R85 + a0 - plane_dx) > 0) ? (
   -R99
)
: (
   R99
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_a(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = R3*R4;
    double R6 = R2*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R3;
    double R14 = R11*R13;
    double R15 = -R10 + R14;
    double R16 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R17 = 1.0/R16;
    double R18 = R17*panel_straw0x;
    double R19 = R12*R9;
    double R20 = R3*R8;
    double R21 = R11*R20;
    double R22 = R19 + R21;
    double R23 = R17*panel_straw0y;
    double R24 = 1.0*R15*R18 - 1.0*R22*R23;
    double R25 = 1.0*R15*R23 + 1.0*R18*R22;
    double R26 = sin(plane_a);
    double R27 = R1*R26;
    double R28 = -R24*R7 + R25*R27 + 1.0*R6;
    double R29 = sin(plane_g);
    double R30 = R26*R29;
    double R31 = cos(plane_g);
    double R32 = R0*R31;
    double R33 = R32*R7;
    double R34 = R30 + R33;
    double R35 = R34*R5;
    double R36 = R1*R31;
    double R37 = R0*R29;
    double R38 = R26*R31;
    double R39 = R38*R7;
    double R40 = -R37 + R39;
    double R41 = R24*R36 + R25*R40 + 1.0*R35;
    double R42 = R37*R7;
    double R43 = -R38 + R42;
    double R44 = R43*R5;
    double R45 = R1*R29;
    double R46 = R30*R7;
    double R47 = R32 + R46;
    double R48 = R24*R45 + R25*R47 + 1.0*R44;
    double R49 = pow(R28, 2) + pow(R41, 2) + pow(R48, 2);
    double R50 = pow(R49, -1.0/2.0);
    double R51 = R28*R50;
    double R52 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R53 = R52*b1;
    double R54 = R48*R50;
    double R55 = R52*R54;
    double R56 = R52*a1;
    double R57 = R41*R50;
    double R58 = R51*R53 - R55 + R56*R57;
    double R59 = 1.0 - pow(R58, 2);
    double R60 = 1.0/R59;
    double R61 = -plane_z;
    double R62 = R61 + panel_dz + panel_straw0z;
    double R63 = R2*R62;
    double R64 = R18*panel_dx - R23*panel_dy + panel_straw0x;
    double R65 = R64*R7;
    double R66 = R18*panel_dy + R23*panel_dx + panel_straw0y;
    double R67 = R27*R66;
    double R68 = -R16 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R69 = R18*R4;
    double R70 = R23*R4;
    double R71 = R12*R69 - R70*R8;
    double R72 = R12*R70 + R69*R8;
    double R73 = R68*(-R11*R2 + R27*R72 - R7*R71);
    double R74 = -panel_straw0z + wire_z;
    double R75 = R4*R9;
    double R76 = R2*R75;
    double R77 = R11*R19 + R20;
    double R78 = R18*R77;
    double R79 = R10*R11 - R13;
    double R80 = R23*R79;
    double R81 = R78 - R80;
    double R82 = R23*R77;
    double R83 = R18*R79;
    double R84 = R82 + R83;
    double R85 = R74*(R27*R84 - R7*R81 + R76);
    double R86 = R63 - R65 + R67 + R73 + R85 - b0 + plane_dz + plane_z;
    double R87 = R43*R62;
    double R88 = R45*R64;
    double R89 = R47*R66;
    double R90 = R68*(-R11*R43 + R45*R71 + R47*R72);
    double R91 = R74*(R43*R75 + R45*R81 + R47*R84);
    double R92 = R87 + R88 + R89 + R90 + R91 + plane_dy;
    double R93 = R34*R62;
    double R94 = R36*R64;
    double R95 = R40*R66;
    double R96 = R68*(-R11*R34 + R36*R71 + R40*R72);
    double R97 = R74*(R34*R75 + R36*R81 + R40*R84);
    double R98 = R93 + R94 + R95 + R96 + R97 - a0 + plane_dx;
    double R99 = -R52*R92 + R53*R86 + R56*R98;
    double R100 = R50*R86;
    double R101 = R100*R28;
    double R102 = R54*R92;
    double R103 = R50*R98;
    double R104 = R103*R41;
    double R105 = -R101 - R102 - R104;
    double R106 = R105 + R58*R99;
    double R107 = R106*R60;
    double R108 = -R58*(R101 + R102 + R104) + R99;
    double R109 = R108*R60;
    double R110 = R107*R51 - R109*R53 + R86;
    double R111 = R107*R54 + R109*R52 + R92;
    double R112 = R107*R57 - R109*R56 + R98;
    double R113 = R10 - R14;
    double R114 = R113*R18;
    double R115 = -R19 - R21;
    double R116 = R115*R23;
    double R117 = R113*R23 + R115*R18;
    double R118 = R117*R27 - R6 + R7*(-R114 + R116);
    double R119 = 2*R74;
    double R120 = 1.0*R78;
    double R121 = 1.0*R80;
    double R122 = R7*(-R120 + R121);
    double R123 = R27*(1.0*R82 + 1.0*R83);
    double R124 = R122 + R123 + 1.0*R76;
    double R125 = R124*R50;
    double R126 = 2*R107;
    double R127 = R75*(1.0*R30 + 1.0*R33);
    double R128 = R120 - R121;
    double R129 = R128*R36;
    double R130 = R84*(-1.0*R37 + 1.0*R39);
    double R131 = R75*(-1.0*R38 + 1.0*R42);
    double R132 = R128*R45;
    double R133 = R84*(1.0*R32 + 1.0*R46);
    double R134 = (-1.0/2.0*R28*(2*R122 + 2*R123 + 2.0*R76) - 1.0/2.0*R41*(2*R127 + 2*R129 + 2*R130) - 1.0/2.0*R48*(2*R131 + 2*R132 + 2*R133))/pow(R49, 3.0/2.0);
    double R135 = R134*R28;
    double R136 = R125*R53;
    double R137 = R50*(R131 + R132 + R133);
    double R138 = R137*R52;
    double R139 = R127 + R129 + R130;
    double R140 = R139*R50;
    double R141 = R140*R56;
    double R142 = R135*R53;
    double R143 = R134*R48;
    double R144 = R143*R52;
    double R145 = R134*R41;
    double R146 = R145*R56;
    double R147 = 2*R58*(2*R136 - 2*R138 + 2*R141 + 2*R142 - 2*R144 + 2*R146)/pow(R59, 2);
    double R148 = R108*R147;
    double R149 = R106*R147;
    double R150 = R136 - R138 + R141 + R142 - R144 + R146;
    double R151 = R118*R74;
    double R152 = R114 - R116;
    double R153 = R74*(R117*R47 + R152*R45 - R44);
    double R154 = R117*R40 + R152*R36 - R35;
    double R155 = R154*R74;
    double R156 = R151*R53 - R153*R52 + R155*R56;
    double R157 = -R100*R124 - R103*R139 - R135*R86 - R137*R92 - R143*R92 - R145*R98 - R151*R51 - R153*R54 - R155*R57;
    double R158 = 2*R60;
    double R159 = R158*(R150*R99 + R156*R58 + R157);
    double R160 = R158*(R105*R150 + R156 + R157*R58);
    double R161 = ((1.0/2.0)*R110*(R118*R119 + R125*R126 + R126*R135 - R148*R53 + R149*R51 + R159*R51 - R160*R53) + (1.0/2.0)*R111*(R126*R137 + R126*R143 + R148*R52 + R149*R54 + 2*R153 + R159*R54 + R160*R52) + (1.0/2.0)*R112*(R119*R154 + R126*R140 + R126*R145 - R148*R56 + R149*R57 + R159*R57 - R160*R56))/sqrt(pow(R110, 2) + pow(R111, 2) + pow(R112, 2));
    double R162 = R50*R52;
    double R163 = R162*R41 + R55*a1;
    double R164 = -R51*R56 + R53*R57;
    double R165 = -R162*R28 - R55*b1;
    double R166 = pow(pow(R163, 2) + pow(R164, 2) + pow(R165, 2), -1.0/2.0);
    double result = ((R163*R166*(R61 - R63 + R65 - R67 - R73 - R85 + b0 - plane_dz) + R164*R166*(-R87 - R88 - R89 - R90 - R91 - plane_dy) + R165*R166*(-R93 - R94 - R95 - R96 - R97 + a0 - plane_dx) > 0) ? (
   -R161
)
: (
   R161
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_b(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(panel_b);
    double R1 = cos(plane_a);
    double R2 = cos(plane_b);
    double R3 = R1*R2;
    double R4 = R0*R3;
    double R5 = sin(panel_a);
    double R6 = 1.0*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R5;
    double R14 = -R10 + R11*R13;
    double R15 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R16 = 1.0/R15;
    double R17 = R16*panel_straw0x;
    double R18 = R12*R9;
    double R19 = R5*R8;
    double R20 = R11*R19 + R18;
    double R21 = R16*panel_straw0y;
    double R22 = 1.0*R14*R17 - 1.0*R20*R21;
    double R23 = 1.0*R14*R21 + 1.0*R17*R20;
    double R24 = sin(plane_a);
    double R25 = R2*R24;
    double R26 = -R22*R7 + R23*R25 + R4*R6;
    double R27 = sin(plane_g);
    double R28 = R24*R27;
    double R29 = cos(plane_g);
    double R30 = R1*R29;
    double R31 = R30*R7;
    double R32 = R28 + R31;
    double R33 = R0*R6;
    double R34 = R2*R29;
    double R35 = R1*R27;
    double R36 = R24*R29;
    double R37 = R36*R7;
    double R38 = -R35 + R37;
    double R39 = R22*R34 + R23*R38 + R32*R33;
    double R40 = R35*R7;
    double R41 = -R36 + R40;
    double R42 = R2*R27;
    double R43 = R28*R7;
    double R44 = R30 + R43;
    double R45 = R22*R42 + R23*R44 + R33*R41;
    double R46 = pow(R26, 2) + pow(R39, 2) + pow(R45, 2);
    double R47 = pow(R46, -1.0/2.0);
    double R48 = R26*R47;
    double R49 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R50 = R49*b1;
    double R51 = R45*R47;
    double R52 = R49*R51;
    double R53 = R39*R47;
    double R54 = R49*a1;
    double R55 = R48*R50 - R52 + R53*R54;
    double R56 = 1.0 - pow(R55, 2);
    double R57 = 1.0/R56;
    double R58 = -plane_z;
    double R59 = R58 + panel_dz + panel_straw0z;
    double R60 = R3*R59;
    double R61 = R17*panel_dx - R21*panel_dy + panel_straw0x;
    double R62 = R61*R7;
    double R63 = R17*panel_dy + R21*panel_dx + panel_straw0y;
    double R64 = R25*R63;
    double R65 = -R15 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R66 = R11*R3;
    double R67 = R0*R17;
    double R68 = R0*R21;
    double R69 = R12*R67 - R68*R8;
    double R70 = R12*R68 + R67*R8;
    double R71 = R65*(R25*R70 - R66 - R69*R7);
    double R72 = -panel_straw0z + wire_z;
    double R73 = R0*R9;
    double R74 = R11*R18 + R19;
    double R75 = R10*R11 - R13;
    double R76 = R17*R74 - R21*R75;
    double R77 = R17*R75 + R21*R74;
    double R78 = R72*(R25*R77 + R3*R73 - R7*R76);
    double R79 = R60 - R62 + R64 + R71 + R78 - b0 + plane_dz + plane_z;
    double R80 = R41*R59;
    double R81 = R42*R61;
    double R82 = R44*R63;
    double R83 = R11*R41;
    double R84 = R65*(R42*R69 + R44*R70 - R83);
    double R85 = R72*(R41*R73 + R42*R76 + R44*R77);
    double R86 = R80 + R81 + R82 + R84 + R85 + plane_dy;
    double R87 = R32*R59;
    double R88 = R34*R61;
    double R89 = R38*R63;
    double R90 = R11*R32;
    double R91 = R65*(R34*R69 + R38*R70 - R90);
    double R92 = R72*(R32*R73 + R34*R76 + R38*R77);
    double R93 = R87 + R88 + R89 + R91 + R92 - a0 + plane_dx;
    double R94 = -R49*R86 + R50*R79 + R54*R93;
    double R95 = R48*R79;
    double R96 = R51*R86;
    double R97 = R53*R93;
    double R98 = -R95 - R96 - R97;
    double R99 = R55*R94 + R98;
    double R100 = R57*R99;
    double R101 = -R55*(R95 + R96 + R97) + R94;
    double R102 = R101*R57;
    double R103 = R100*R48 - R102*R50 + R79;
    double R104 = R100*R51 + R102*R49 + R86;
    double R105 = R100*R53 - R102*R54 + R93;
    double R106 = R10*R68;
    double R107 = R18*R67;
    double R108 = R10*R67 + R18*R68;
    double R109 = R72*(R108*R25 - R66*R9 + R7*(R106 - R107));
    double R110 = R11*R12;
    double R111 = R110*R17;
    double R112 = R11*R8;
    double R113 = R112*R21;
    double R114 = -R110*R21 - R112*R17;
    double R115 = R65*(R114*R25 - R4 + R7*(R111 - R113));
    double R116 = 1.0*R13*R67;
    double R117 = 1.0*R19*R68;
    double R118 = R7*(-R116 + R117);
    double R119 = R19*R67;
    double R120 = R13*R68;
    double R121 = R25*(1.0*R119 + 1.0*R120);
    double R122 = R47*(R118 + R121 - R6*R66);
    double R123 = 2*R100;
    double R124 = R11*R5;
    double R125 = R124*(1.0*R28 + 1.0*R31);
    double R126 = R116 - R117;
    double R127 = R126*R34;
    double R128 = R119 + R120;
    double R129 = R128*(-1.0*R35 + 1.0*R37);
    double R130 = R124*(-1.0*R36 + 1.0*R40);
    double R131 = R126*R42;
    double R132 = R128*(1.0*R30 + 1.0*R43);
    double R133 = (-1.0/2.0*R26*(2*R118 + 2*R121 - 2.0*R5*R66) - 1.0/2.0*R39*(-2*R125 + 2*R127 + 2*R129) - 1.0/2.0*R45*(-2*R130 + 2*R131 + 2*R132))/pow(R46, 3.0/2.0);
    double R134 = R133*R26;
    double R135 = R122*R50;
    double R136 = R47*(-R130 + R131 + R132);
    double R137 = R136*R49;
    double R138 = R47*(-R125 + R127 + R129);
    double R139 = R138*R54;
    double R140 = R134*R50;
    double R141 = R133*R45;
    double R142 = R141*R49;
    double R143 = R133*R39;
    double R144 = R143*R54;
    double R145 = 2*R55*(2*R135 - 2*R137 + 2*R139 + 2*R140 - 2*R142 + 2*R144)/pow(R56, 2);
    double R146 = R101*R145;
    double R147 = R145*R99;
    double R148 = R109 + R115;
    double R149 = -R106 + R107;
    double R150 = R72*(R108*R44 + R149*R42 - R83*R9);
    double R151 = -R111 + R113;
    double R152 = R65*(R0*(R36 - R40) + R114*R44 + R151*R42);
    double R153 = R150 + R152;
    double R154 = R72*(R108*R38 + R149*R34 - R9*R90);
    double R155 = R65*(R0*(-R28 - R31) + R114*R38 + R151*R34);
    double R156 = R154 + R155;
    double R157 = R148*R50 - R153*R49 + R156*R54;
    double R158 = R135 - R137 + R139 + R140 - R142 + R144;
    double R159 = -R122*R79 - R134*R79 - R136*R86 - R138*R93 - R141*R86 - R143*R93 - R148*R48 - R153*R51 - R156*R53;
    double R160 = 2*R57;
    double R161 = R160*(R157*R55 + R158*R94 + R159);
    double R162 = R160*(R157 + R158*R98 + R159*R55);
    double R163 = ((1.0/2.0)*R103*(2*R109 + 2*R115 + R122*R123 + R123*R134 - R146*R50 + R147*R48 + R161*R48 - R162*R50) + (1.0/2.0)*R104*(R123*R136 + R123*R141 + R146*R49 + R147*R51 + 2*R150 + 2*R152 + R161*R51 + R162*R49) + (1.0/2.0)*R105*(R123*R138 + R123*R143 - R146*R54 + R147*R53 + 2*R154 + 2*R155 + R161*R53 - R162*R54))/sqrt(pow(R103, 2) + pow(R104, 2) + pow(R105, 2));
    double R164 = R49*R53 + R52*a1;
    double R165 = -R48*R54 + R50*R53;
    double R166 = -R48*R49 - R52*b1;
    double R167 = pow(pow(R164, 2) + pow(R165, 2) + pow(R166, 2), -1.0/2.0);
    double result = ((R164*R167*(R58 - R60 + R62 - R64 - R71 - R78 + b0 - plane_dz) + R165*R167*(-R80 - R81 - R82 - R84 - R85 - plane_dy) + R166*R167*(-R87 - R88 - R89 - R91 - R92 + a0 - plane_dx) > 0) ? (
   -R163
)
: (
   R163
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_g(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R13*R16;
    double R18 = R11*R8;
    double R19 = R3*R7;
    double R20 = R10*R19;
    double R21 = R18 + R20;
    double R22 = R15*panel_straw0y;
    double R23 = 1.0*R17 - 1.0*R21*R22;
    double R24 = R13*R22;
    double R25 = 1.0*R16*R21 + 1.0*R24;
    double R26 = sin(plane_a);
    double R27 = R1*R26;
    double R28 = R2*R5 - R23*R6 + R25*R27;
    double R29 = sin(plane_g);
    double R30 = R26*R29;
    double R31 = cos(plane_g);
    double R32 = R0*R31;
    double R33 = R30 + R32*R6;
    double R34 = R1*R31;
    double R35 = R0*R29;
    double R36 = R26*R31;
    double R37 = R36*R6;
    double R38 = -R35 + R37;
    double R39 = R23*R34 + R25*R38 + R33*R5;
    double R40 = R35*R6 - R36;
    double R41 = R1*R29;
    double R42 = R30*R6;
    double R43 = R32 + R42;
    double R44 = R23*R41 + R25*R43 + R40*R5;
    double R45 = pow(R28, 2) + pow(R39, 2) + pow(R44, 2);
    double R46 = pow(R45, -1.0/2.0);
    double R47 = R28*R46;
    double R48 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R49 = R48*b1;
    double R50 = R44*R46;
    double R51 = R48*R50;
    double R52 = R39*R46;
    double R53 = R48*a1;
    double R54 = R47*R49 - R51 + R52*R53;
    double R55 = 1.0 - pow(R54, 2);
    double R56 = 1.0/R55;
    double R57 = -plane_z;
    double R58 = R57 + panel_dz + panel_straw0z;
    double R59 = R2*R58;
    double R60 = R16*panel_dx - R22*panel_dy + panel_straw0x;
    double R61 = R6*R60;
    double R62 = R16*panel_dy + R22*panel_dx + panel_straw0y;
    double R63 = R27*R62;
    double R64 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R65 = R16*R4;
    double R66 = R22*R4;
    double R67 = R11*R65 - R66*R7;
    double R68 = R65*R7;
    double R69 = R11*R66;
    double R70 = R68 + R69;
    double R71 = R64*(-R10*R2 + R27*R70 - R6*R67);
    double R72 = -panel_straw0z + wire_z;
    double R73 = R4*R8;
    double R74 = R10*R18 + R19;
    double R75 = R16*R74;
    double R76 = R10*R9;
    double R77 = -R12 + R76;
    double R78 = -R22*R77 + R75;
    double R79 = R22*R74;
    double R80 = R16*R77 + R79;
    double R81 = R72*(R2*R73 + R27*R80 - R6*R78);
    double R82 = R59 - R61 + R63 + R71 + R81 - b0 + plane_dz + plane_z;
    double R83 = R40*R58;
    double R84 = R41*R60;
    double R85 = R43*R62;
    double R86 = R64*(-R10*R40 + R41*R67 + R43*R70);
    double R87 = R72*(R40*R73 + R41*R78 + R43*R80);
    double R88 = R83 + R84 + R85 + R86 + R87 + plane_dy;
    double R89 = R33*R58;
    double R90 = R34*R60;
    double R91 = R38*R62;
    double R92 = R64*(-R10*R33 + R34*R67 + R38*R70);
    double R93 = R72*(R33*R73 + R34*R78 + R38*R80);
    double R94 = R89 + R90 + R91 + R92 + R93 - a0 + plane_dx;
    double R95 = -R48*R88 + R49*R82 + R53*R94;
    double R96 = R47*R82;
    double R97 = R50*R88;
    double R98 = R52*R94;
    double R99 = -R96 - R97 - R98;
    double R100 = R54*R95 + R99;
    double R101 = R100*R56;
    double R102 = -R54*(R96 + R97 + R98) + R95;
    double R103 = R102*R56;
    double R104 = R101*R47 - R103*R49 + R82;
    double R105 = R101*R50 + R103*R48 + R88;
    double R106 = R101*R52 - R103*R53 + R94;
    double R107 = R64*(R27*R67 + R6*R70);
    double R108 = R12 - R76;
    double R109 = R108*R16;
    double R110 = R108*R22 + R75;
    double R111 = R72*(R110*R27 + R6*(-R109 + R79));
    double R112 = 1.0*R24;
    double R113 = -R18 - R20;
    double R114 = 1.0*R113*R16;
    double R115 = R6*(R112 - R114);
    double R116 = R113*R22;
    double R117 = R27*(1.0*R116 + 1.0*R17);
    double R118 = R46*(R115 + R117);
    double R119 = 2*R101;
    double R120 = -R112 + R114;
    double R121 = R120*R41;
    double R122 = R116 + R17;
    double R123 = R122*(1.0*R32 + 1.0*R42);
    double R124 = R120*R34;
    double R125 = R122*(-1.0*R35 + 1.0*R37);
    double R126 = (-1.0/2.0*R28*(2*R115 + 2*R117) - 1.0/2.0*R39*(2*R124 + 2*R125) - 1.0/2.0*R44*(2*R121 + 2*R123))/pow(R45, 3.0/2.0);
    double R127 = R126*R28;
    double R128 = R118*R49;
    double R129 = R46*(R121 + R123);
    double R130 = R129*R48;
    double R131 = R46*(R124 + R125);
    double R132 = R131*R53;
    double R133 = R127*R49;
    double R134 = R126*R44;
    double R135 = R134*R48;
    double R136 = R126*R39;
    double R137 = R136*R53;
    double R138 = 2*R54*(2*R128 - 2*R130 + 2*R132 + 2*R133 - 2*R135 + 2*R137)/pow(R55, 2);
    double R139 = R102*R138;
    double R140 = R100*R138;
    double R141 = R107 + R111;
    double R142 = -R68 - R69;
    double R143 = R64*(R142*R41 + R43*R67);
    double R144 = R109 - R79;
    double R145 = R72*(R110*R43 + R144*R41);
    double R146 = R143 + R145;
    double R147 = R64*(R142*R34 + R38*R67);
    double R148 = R72*(R110*R38 + R144*R34);
    double R149 = R147 + R148;
    double R150 = R141*R49 - R146*R48 + R149*R53;
    double R151 = R128 - R130 + R132 + R133 - R135 + R137;
    double R152 = -R118*R82 - R127*R82 - R129*R88 - R131*R94 - R134*R88 - R136*R94 - R141*R47 - R146*R50 - R149*R52;
    double R153 = 2*R56;
    double R154 = R153*(R150*R54 + R151*R95 + R152);
    double R155 = R153*(R150 + R151*R99 + R152*R54);
    double R156 = ((1.0/2.0)*R104*(2*R107 + 2*R111 + R118*R119 + R119*R127 - R139*R49 + R140*R47 + R154*R47 - R155*R49) + (1.0/2.0)*R105*(R119*R129 + R119*R134 + R139*R48 + R140*R50 + 2*R143 + 2*R145 + R154*R50 + R155*R48) + (1.0/2.0)*R106*(R119*R131 + R119*R136 - R139*R53 + R140*R52 + 2*R147 + 2*R148 + R154*R52 - R155*R53))/sqrt(pow(R104, 2) + pow(R105, 2) + pow(R106, 2));
    double R157 = R48*R52 + R51*a1;
    double R158 = -R47*R53 + R49*R52;
    double R159 = -R47*R48 - R51*b1;
    double R160 = pow(pow(R157, 2) + pow(R158, 2) + pow(R159, 2), -1.0/2.0);
    double result = ((R157*R160*(R57 - R59 + R61 - R63 - R71 - R81 + b0 - plane_dz) + R158*R160*(-R83 - R84 - R85 - R86 - R87 - plane_dy) + R159*R160*(-R89 - R90 - R91 - R92 - R93 + a0 - plane_dx) > 0) ? (
   -R156
)
: (
   R156
))/driftvel;
    return result;
}


std::vector<double> CosmicTrack_DCA_LocalDeriv(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
        std::vector<double> result = {CosmicTrack_DCA_Deriv_a0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_b0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_a1(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_b1(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_t0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel)};
return result;
}

std::vector<double> CosmicTrack_DCA_GlobalDeriv(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
        std::vector<double> result = {CosmicTrack_DCA_Deriv_plane_dx(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_dy(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_dz(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_a(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_b(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_g(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dx(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dy(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dz(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_a(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_b(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_g(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel)};
return result;
}

