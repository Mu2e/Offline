

# include "TrackerAlignment/inc/AlignmentDerivatives.hh"
# include <math.h>
# include <vector>

double CosmicTrack_DCA(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R32 + R34*R9;
    double R36 = R3*R33;
    double R37 = R2*R31;
    double R38 = R27*R33;
    double R39 = -R37 + R38*R9;
    double R40 = R24*R36 + R26*R39 + R35*R7;
    double R41 = R37*R9 - R38;
    double R42 = R3*R31;
    double R43 = R32*R9 + R34;
    double R44 = R24*R42 + R26*R43 + R41*R7;
    double R45 = pow(pow(R30, 2) + pow(R40, 2) + pow(R44, 2), -1.0/2.0);
    double R46 = R30*R45;
    double R47 = R44*R45;
    double R48 = R40*R45;
    double R49 = R0*a1;
    double R50 = -R0*R47 + R1*R46 + R48*R49;
    double R51 = 1.0/(1.0 - pow(R50, 2));
    double R52 = -plane_z;
    double R53 = R52 + panel_dz + panel_straw0z;
    double R54 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R55 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R56 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R57 = R19*R6;
    double R58 = R23*R6;
    double R59 = -R10*R58 + R14*R57;
    double R60 = R10*R57 + R14*R58;
    double R61 = -panel_straw0z + wire_z;
    double R62 = R11*R6;
    double R63 = R13*R20 + R21;
    double R64 = R12*R13 - R15;
    double R65 = R19*R63 - R23*R64;
    double R66 = R19*R64 + R23*R63;
    double R67 = -R28*R55 - R4*R53 + R52 + R54*R9 - R56*(-R13*R4 + R28*R60 - R59*R9) - R61*(R28*R66 + R4*R62 - R65*R9) + b0 - plane_dz;
    double R68 = R1*R67;
    double R69 = -R41*R53 - R42*R54 - R43*R55 - R56*(-R13*R41 + R42*R59 + R43*R60) - R61*(R41*R62 + R42*R65 + R43*R66) - plane_dy;
    double R70 = R0*R69;
    double R71 = -R35*R53 - R36*R54 - R39*R55 - R56*(-R13*R35 + R36*R59 + R39*R60) - R61*(R35*R62 + R36*R65 + R39*R66) + a0 - plane_dx;
    double R72 = R49*R71;
    double R73 = R46*R67 + R47*R69 + R48*R71;
    double R74 = R51*(R50*R73 - R68 + R70 - R72);
    double R75 = R51*(-R50*(R68 - R70 + R72) + R73);
    double R76 = sqrt(pow(-R0*R74 - R47*R75 + R69, 2) + pow(R1*R74 - R46*R75 + R67, 2) + pow(-R48*R75 + R49*R74 + R71, 2));
    double R77 = R40 + R44*a1;
    double R78 = R25 - R29 - R44*b1 - R8;
    double R79 = -R30*a1 + R40*b1;
    double R80 = pow(pow(R77, 2) + pow(R78, 2) + pow(R79, 2), -1.0/2.0);
    double result = ((R67*R77*R80 + R69*R79*R80 + R71*R78*R80 > 0) ? (
   -R76
)
: (
   R76
));
    return result;
}


double CosmicTrack_DCAalignpos_x(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(plane_a);
    double R1 = sin(plane_g);
    double R2 = cos(plane_a);
    double R3 = cos(plane_g);
    double R4 = R3*sin(plane_b);
    double R5 = R0*R1 + R2*R4;
    double R6 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R7 = 1.0/R6;
    double R8 = R7*panel_straw0x;
    double R9 = R7*panel_straw0y;
    double R10 = R3*cos(plane_b);
    double R11 = R0*R4 - R1*R2;
    double R12 = sin(panel_b);
    double R13 = cos(panel_g);
    double R14 = cos(panel_b);
    double R15 = R14*R8;
    double R16 = sin(panel_g);
    double R17 = R14*R9;
    double R18 = cos(panel_a);
    double R19 = sin(panel_a);
    double R20 = R12*R18;
    double R21 = R13*R20 + R16*R19;
    double R22 = -R13*R19 + R16*R20;
    double result = R10*(R8*panel_dx - R9*panel_dy + panel_straw0x) + R11*(R8*panel_dy + R9*panel_dx + panel_straw0y) + R5*(panel_dz + panel_straw0z - plane_z) + plane_dx + (-R6 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(R10*(R13*R15 - R16*R17) + R11*(R13*R17 + R15*R16) - R12*R5) + (-panel_straw0z + wire_z)*(R10*(R21*R8 - R22*R9) + R11*(R21*R9 + R22*R8) + R14*R18*R5);
    return result;
}


double CosmicTrack_DCAalignpos_y(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(plane_a);
    double R1 = cos(plane_g);
    double R2 = cos(plane_a);
    double R3 = sin(plane_g);
    double R4 = R3*sin(plane_b);
    double R5 = -R0*R1 + R2*R4;
    double R6 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R7 = 1.0/R6;
    double R8 = R7*panel_straw0x;
    double R9 = R7*panel_straw0y;
    double R10 = R3*cos(plane_b);
    double R11 = R0*R4 + R1*R2;
    double R12 = sin(panel_b);
    double R13 = cos(panel_g);
    double R14 = cos(panel_b);
    double R15 = R14*R8;
    double R16 = sin(panel_g);
    double R17 = R14*R9;
    double R18 = cos(panel_a);
    double R19 = sin(panel_a);
    double R20 = R12*R18;
    double R21 = R13*R20 + R16*R19;
    double R22 = -R13*R19 + R16*R20;
    double result = R10*(R8*panel_dx - R9*panel_dy + panel_straw0x) + R11*(R8*panel_dy + R9*panel_dx + panel_straw0y) + R5*(panel_dz + panel_straw0z - plane_z) + plane_dy + (-R6 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(R10*(R13*R15 - R16*R17) + R11*(R13*R17 + R15*R16) - R12*R5) + (-panel_straw0z + wire_z)*(R10*(R21*R8 - R22*R9) + R11*(R21*R9 + R22*R8) + R14*R18*R5);
    return result;
}


double CosmicTrack_DCAalignpos_z(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = cos(plane_b);
    double R1 = R0*cos(plane_a);
    double R2 = sin(plane_b);
    double R3 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R4 = 1.0/R3;
    double R5 = R4*panel_straw0x;
    double R6 = R4*panel_straw0y;
    double R7 = R0*sin(plane_a);
    double R8 = sin(panel_b);
    double R9 = cos(panel_g);
    double R10 = cos(panel_b);
    double R11 = R10*R5;
    double R12 = sin(panel_g);
    double R13 = R10*R6;
    double R14 = cos(panel_a);
    double R15 = sin(panel_a);
    double R16 = R14*R8;
    double R17 = R12*R15 + R16*R9;
    double R18 = R12*R16 - R15*R9;
    double result = R1*(panel_dz + panel_straw0z - plane_z) - R2*(R5*panel_dx - R6*panel_dy + panel_straw0x) + R7*(R5*panel_dy + R6*panel_dx + panel_straw0y) + plane_dz + plane_z + (-R3 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(-R1*R8 - R2*(R11*R9 - R12*R13) + R7*(R11*R12 + R13*R9)) + (-panel_straw0z + wire_z)*(R1*R10*R14 - R2*(R17*R5 - R18*R6) + R7*(R17*R6 + R18*R5));
    return result;
}


double CosmicTrack_DCAaligndir_x(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = sin(plane_a);
    double R2 = sin(plane_g);
    double R3 = cos(plane_a);
    double R4 = cos(plane_g);
    double R5 = R4*sin(plane_b);
    double R6 = sin(panel_g);
    double R7 = cos(panel_a);
    double R8 = cos(panel_g);
    double R9 = R0*sin(panel_b);
    double R10 = -R6*R7 + R8*R9;
    double R11 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R12 = R11*panel_straw0x;
    double R13 = R6*R9 + R7*R8;
    double R14 = R11*panel_straw0y;
    double result = 1.0*R0*(R1*R2 + R3*R5)*cos(panel_b) + 1.0*R4*(R10*R12 - R13*R14)*cos(plane_b) + 1.0*(R1*R5 - R2*R3)*(R10*R14 + R12*R13);
    return result;
}


double CosmicTrack_DCAaligndir_y(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = sin(plane_a);
    double R2 = cos(plane_g);
    double R3 = cos(plane_a);
    double R4 = sin(plane_g);
    double R5 = R4*sin(plane_b);
    double R6 = sin(panel_g);
    double R7 = cos(panel_a);
    double R8 = cos(panel_g);
    double R9 = R0*sin(panel_b);
    double R10 = -R6*R7 + R8*R9;
    double R11 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R12 = R11*panel_straw0x;
    double R13 = R6*R9 + R7*R8;
    double R14 = R11*panel_straw0y;
    double result = 1.0*R0*(-R1*R2 + R3*R5)*cos(panel_b) + 1.0*R4*(R10*R12 - R13*R14)*cos(plane_b) + 1.0*(R1*R5 + R2*R3)*(R10*R14 + R12*R13);
    return result;
}


double CosmicTrack_DCAaligndir_z(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = 1.0*cos(plane_b);
    double R2 = sin(panel_g);
    double R3 = cos(panel_a);
    double R4 = cos(panel_g);
    double R5 = R0*sin(panel_b);
    double R6 = -R2*R3 + R4*R5;
    double R7 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R8 = R7*panel_straw0x;
    double R9 = R2*R5 + R3*R4;
    double R10 = R7*panel_straw0y;
    double result = R0*R1*cos(panel_b)*cos(plane_a) + R1*(R10*R6 + R8*R9)*sin(plane_a) - 1.0*(-R10*R9 + R6*R8)*sin(plane_b);
    return result;
}


double CosmicTrack_DCA_Deriv_a0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R32 + R34*R9;
    double R36 = R3*R33;
    double R37 = R2*R31;
    double R38 = R27*R33;
    double R39 = -R37 + R38*R9;
    double R40 = R24*R36 + R26*R39 + R35*R7;
    double R41 = R37*R9 - R38;
    double R42 = R3*R31;
    double R43 = R32*R9 + R34;
    double R44 = R24*R42 + R26*R43 + R41*R7;
    double R45 = pow(pow(R30, 2) + pow(R40, 2) + pow(R44, 2), -1.0/2.0);
    double R46 = R30*R45;
    double R47 = R44*R45;
    double R48 = R0*a1;
    double R49 = R40*R45;
    double R50 = -R0*R47 + R1*R46 + R48*R49;
    double R51 = 1.0/(1.0 - pow(R50, 2));
    double R52 = -plane_z;
    double R53 = R52 + panel_dz + panel_straw0z;
    double R54 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R55 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R56 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R57 = R19*R6;
    double R58 = R23*R6;
    double R59 = -R10*R58 + R14*R57;
    double R60 = R10*R57 + R14*R58;
    double R61 = -panel_straw0z + wire_z;
    double R62 = R11*R6;
    double R63 = R13*R20 + R21;
    double R64 = R12*R13 - R15;
    double R65 = R19*R63 - R23*R64;
    double R66 = R19*R64 + R23*R63;
    double R67 = -R28*R55 - R4*R53 + R52 + R54*R9 - R56*(-R13*R4 + R28*R60 - R59*R9) - R61*(R28*R66 + R4*R62 - R65*R9) + b0 - plane_dz;
    double R68 = R1*R67;
    double R69 = -R41*R53 - R42*R54 - R43*R55 - R56*(-R13*R41 + R42*R59 + R43*R60) - R61*(R41*R62 + R42*R65 + R43*R66) - plane_dy;
    double R70 = R0*R69;
    double R71 = -R35*R53 - R36*R54 - R39*R55 - R56*(-R13*R35 + R36*R59 + R39*R60) - R61*(R35*R62 + R36*R65 + R39*R66) + a0 - plane_dx;
    double R72 = R48*R71;
    double R73 = R46*R67 + R47*R69 + R49*R71;
    double R74 = R51*(R50*R73 - R68 + R70 - R72);
    double R75 = R51*(-R50*(R68 - R70 + R72) + R73);
    double R76 = R1*R74 - R46*R75 + R67;
    double R77 = -R0*R74 - R47*R75 + R69;
    double R78 = R48*R74 - R49*R75 + R71;
    double R79 = 2*R51;
    double R80 = R79*(-R48 + R49*R50);
    double R81 = R79*(-R48*R50 + R49);
    double R82 = ((1.0/2.0)*R76*(R1*R80 - R46*R81) + (1.0/2.0)*R77*(-R0*R80 - R47*R81) + (1.0/2.0)*R78*(R48*R80 - R49*R81 + 2))/sqrt(pow(R76, 2) + pow(R77, 2) + pow(R78, 2));
    double R83 = R40 + R44*a1;
    double R84 = R25 - R29 - R44*b1 - R8;
    double R85 = -R30*a1 + R40*b1;
    double R86 = pow(pow(R83, 2) + pow(R84, 2) + pow(R85, 2), -1.0/2.0);
    double result = ((R67*R83*R86 + R69*R85*R86 + R71*R84*R86 > 0) ? (
   -R82
)
: (
   R82
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_b0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R32 + R34*R9;
    double R36 = R3*R33;
    double R37 = R2*R31;
    double R38 = R27*R33;
    double R39 = -R37 + R38*R9;
    double R40 = R24*R36 + R26*R39 + R35*R7;
    double R41 = R37*R9 - R38;
    double R42 = R3*R31;
    double R43 = R32*R9 + R34;
    double R44 = R24*R42 + R26*R43 + R41*R7;
    double R45 = pow(pow(R30, 2) + pow(R40, 2) + pow(R44, 2), -1.0/2.0);
    double R46 = R30*R45;
    double R47 = R44*R45;
    double R48 = R40*R45;
    double R49 = R0*a1;
    double R50 = -R0*R47 + R1*R46 + R48*R49;
    double R51 = 1.0/(1.0 - pow(R50, 2));
    double R52 = -plane_z;
    double R53 = R52 + panel_dz + panel_straw0z;
    double R54 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R55 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R56 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R57 = R19*R6;
    double R58 = R23*R6;
    double R59 = -R10*R58 + R14*R57;
    double R60 = R10*R57 + R14*R58;
    double R61 = -panel_straw0z + wire_z;
    double R62 = R11*R6;
    double R63 = R13*R20 + R21;
    double R64 = R12*R13 - R15;
    double R65 = R19*R63 - R23*R64;
    double R66 = R19*R64 + R23*R63;
    double R67 = -R28*R55 - R4*R53 + R52 + R54*R9 - R56*(-R13*R4 + R28*R60 - R59*R9) - R61*(R28*R66 + R4*R62 - R65*R9) + b0 - plane_dz;
    double R68 = R1*R67;
    double R69 = -R41*R53 - R42*R54 - R43*R55 - R56*(-R13*R41 + R42*R59 + R43*R60) - R61*(R41*R62 + R42*R65 + R43*R66) - plane_dy;
    double R70 = R0*R69;
    double R71 = -R35*R53 - R36*R54 - R39*R55 - R56*(-R13*R35 + R36*R59 + R39*R60) - R61*(R35*R62 + R36*R65 + R39*R66) + a0 - plane_dx;
    double R72 = R49*R71;
    double R73 = R46*R67 + R47*R69 + R48*R71;
    double R74 = R51*(R50*R73 - R68 + R70 - R72);
    double R75 = R51*(-R50*(R68 - R70 + R72) + R73);
    double R76 = R1*R74 - R46*R75 + R67;
    double R77 = -R0*R74 - R47*R75 + R69;
    double R78 = -R48*R75 + R49*R74 + R71;
    double R79 = 2*R51;
    double R80 = R79*(-R1 + R46*R50);
    double R81 = R79*(-R1*R50 + R46);
    double R82 = ((1.0/2.0)*R76*(R1*R80 - R46*R81 + 2) + (1.0/2.0)*R77*(-R0*R80 - R47*R81) + (1.0/2.0)*R78*(-R48*R81 + R49*R80))/sqrt(pow(R76, 2) + pow(R77, 2) + pow(R78, 2));
    double R83 = R40 + R44*a1;
    double R84 = R25 - R29 - R44*b1 - R8;
    double R85 = -R30*a1 + R40*b1;
    double R86 = pow(pow(R83, 2) + pow(R84, 2) + pow(R85, 2), -1.0/2.0);
    double result = ((R67*R83*R86 + R69*R85*R86 + R71*R84*R86 > 0) ? (
   -R82
)
: (
   R82
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_a1(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(a1, 2);
    double R1 = R0 + pow(b1, 2) + 1;
    double R2 = pow(R1, -1.0/2.0);
    double R3 = R2*b1;
    double R4 = cos(plane_a);
    double R5 = cos(plane_b);
    double R6 = R4*R5;
    double R7 = sin(panel_a);
    double R8 = cos(panel_b);
    double R9 = 1.0*R7*R8;
    double R10 = R6*R9;
    double R11 = sin(plane_b);
    double R12 = sin(panel_g);
    double R13 = cos(panel_a);
    double R14 = R12*R13;
    double R15 = sin(panel_b);
    double R16 = cos(panel_g);
    double R17 = R16*R7;
    double R18 = -R14 + R15*R17;
    double R19 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R20 = 1.0/R19;
    double R21 = R20*panel_straw0x;
    double R22 = R13*R16;
    double R23 = R12*R7;
    double R24 = R15*R23 + R22;
    double R25 = R20*panel_straw0y;
    double R26 = 1.0*R18*R21 - 1.0*R24*R25;
    double R27 = R11*R26;
    double R28 = 1.0*R18*R25 + 1.0*R21*R24;
    double R29 = sin(plane_a);
    double R30 = R29*R5;
    double R31 = R28*R30;
    double R32 = R10 - R27 + R31;
    double R33 = sin(plane_g);
    double R34 = R29*R33;
    double R35 = cos(plane_g);
    double R36 = R35*R4;
    double R37 = R11*R36 + R34;
    double R38 = R35*R5;
    double R39 = R33*R4;
    double R40 = R29*R35;
    double R41 = R11*R40 - R39;
    double R42 = R26*R38 + R28*R41 + R37*R9;
    double R43 = R11*R39 - R40;
    double R44 = R33*R5;
    double R45 = R11*R34 + R36;
    double R46 = R26*R44 + R28*R45 + R43*R9;
    double R47 = pow(pow(R32, 2) + pow(R42, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = R32*R47;
    double R49 = R46*R47;
    double R50 = R42*R47;
    double R51 = R2*R50;
    double R52 = -R2*R49 + R3*R48 + R51*a1;
    double R53 = 1.0 - pow(R52, 2);
    double R54 = 1.0/R53;
    double R55 = -plane_z;
    double R56 = R55 + panel_dz + panel_straw0z;
    double R57 = R21*panel_dx - R25*panel_dy + panel_straw0x;
    double R58 = R21*panel_dy + R25*panel_dx + panel_straw0y;
    double R59 = -R19 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R60 = R21*R8;
    double R61 = R25*R8;
    double R62 = -R12*R61 + R16*R60;
    double R63 = R12*R60 + R16*R61;
    double R64 = -panel_straw0z + wire_z;
    double R65 = R13*R8;
    double R66 = R15*R22 + R23;
    double R67 = R14*R15 - R17;
    double R68 = R21*R66 - R25*R67;
    double R69 = R21*R67 + R25*R66;
    double R70 = R11*R57 - R30*R58 + R55 - R56*R6 - R59*(-R11*R62 - R15*R6 + R30*R63) - R64*(-R11*R68 + R30*R69 + R6*R65) + b0 - plane_dz;
    double R71 = -R43*R56 - R44*R57 - R45*R58 - R59*(-R15*R43 + R44*R62 + R45*R63) - R64*(R43*R65 + R44*R68 + R45*R69) - plane_dy;
    double R72 = -R37*R56 - R38*R57 - R41*R58 - R59*(-R15*R37 + R38*R62 + R41*R63) - R64*(R37*R65 + R38*R68 + R41*R69) + a0 - plane_dx;
    double R73 = R48*R70 + R49*R71 + R50*R72;
    double R74 = R3*R70;
    double R75 = R2*R71;
    double R76 = R2*R72;
    double R77 = R76*a1;
    double R78 = -R74 + R75 - R77;
    double R79 = R52*R73 + R78;
    double R80 = R54*R79;
    double R81 = -R52*(R74 - R75 + R77) + R73;
    double R82 = R54*R81;
    double R83 = R3*R80 - R48*R82 + R70;
    double R84 = R2*R80;
    double R85 = -R49*R82 + R71 - R84;
    double R86 = -R50*R82 + R72 + R84*a1;
    double R87 = pow(R1, -3.0/2.0);
    double R88 = R87*a1;
    double R89 = R88*b1;
    double R90 = 2*R80;
    double R91 = R32*a1;
    double R92 = R47*R87;
    double R93 = R91*R92*b1;
    double R94 = R46*a1;
    double R95 = R92*R94;
    double R96 = R0*R87;
    double R97 = R50*R96;
    double R98 = R51 - R93 + R95 - R97;
    double R99 = R70*R89 - R71*R88 + R72*R96 - R76;
    double R100 = 2*R54;
    double R101 = R100*(R73*R98 + R99);
    double R102 = R100*(R52*R99 + R78*R98);
    double R103 = 2*R52*(2*R51 - 2*R93 + 2*R95 - 2*R97)/pow(R53, 2);
    double R104 = R103*R79;
    double R105 = R103*R81;
    double R106 = R101*R2;
    double R107 = R104*R2;
    double R108 = ((1.0/2.0)*R83*(R101*R3 - R102*R48 + R104*R3 - R105*R48 - R89*R90) + (1.0/2.0)*R85*(-R102*R49 - R105*R49 - R106 - R107 + R88*R90) + (1.0/2.0)*R86*(-R102*R50 - R105*R50 + R106*a1 + R107*a1 + 2*R84 - R90*R96))/sqrt(pow(R83, 2) + pow(R85, 2) + pow(R86, 2));
    double R109 = R42 + R94;
    double R110 = -R10 + R27 - R31 - R46*b1;
    double R111 = R42*b1 - R91;
    double R112 = pow(pow(R109, 2) + pow(R110, 2) + pow(R111, 2), -1.0/2.0);
    double result = ((R109*R112*R70 + R110*R112*R72 + R111*R112*R71 > 0) ? (
   -R108
)
: (
   R108
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_b1(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(b1, 2);
    double R1 = R0 + pow(a1, 2) + 1;
    double R2 = pow(R1, -1.0/2.0);
    double R3 = cos(plane_a);
    double R4 = cos(plane_b);
    double R5 = R3*R4;
    double R6 = sin(panel_a);
    double R7 = cos(panel_b);
    double R8 = 1.0*R6*R7;
    double R9 = R5*R8;
    double R10 = sin(plane_b);
    double R11 = sin(panel_g);
    double R12 = cos(panel_a);
    double R13 = R11*R12;
    double R14 = sin(panel_b);
    double R15 = cos(panel_g);
    double R16 = R15*R6;
    double R17 = -R13 + R14*R16;
    double R18 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R19 = 1.0/R18;
    double R20 = R19*panel_straw0x;
    double R21 = R12*R15;
    double R22 = R11*R6;
    double R23 = R14*R22 + R21;
    double R24 = R19*panel_straw0y;
    double R25 = 1.0*R17*R20 - 1.0*R23*R24;
    double R26 = R10*R25;
    double R27 = 1.0*R17*R24 + 1.0*R20*R23;
    double R28 = sin(plane_a);
    double R29 = R28*R4;
    double R30 = R27*R29;
    double R31 = -R26 + R30 + R9;
    double R32 = sin(plane_g);
    double R33 = R28*R32;
    double R34 = cos(plane_g);
    double R35 = R3*R34;
    double R36 = R10*R35 + R33;
    double R37 = R34*R4;
    double R38 = R3*R32;
    double R39 = R28*R34;
    double R40 = R10*R39 - R38;
    double R41 = R25*R37 + R27*R40 + R36*R8;
    double R42 = R10*R38 - R39;
    double R43 = R32*R4;
    double R44 = R10*R33 + R35;
    double R45 = R25*R43 + R27*R44 + R42*R8;
    double R46 = pow(pow(R31, 2) + pow(R41, 2) + pow(R45, 2), -1.0/2.0);
    double R47 = R31*R46;
    double R48 = R2*R47;
    double R49 = R45*R46;
    double R50 = R41*R46;
    double R51 = R2*a1;
    double R52 = -R2*R49 + R48*b1 + R50*R51;
    double R53 = 1.0 - pow(R52, 2);
    double R54 = 1.0/R53;
    double R55 = -plane_z;
    double R56 = R55 + panel_dz + panel_straw0z;
    double R57 = R20*panel_dx - R24*panel_dy + panel_straw0x;
    double R58 = R20*panel_dy + R24*panel_dx + panel_straw0y;
    double R59 = -R18 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R60 = R20*R7;
    double R61 = R24*R7;
    double R62 = -R11*R61 + R15*R60;
    double R63 = R11*R60 + R15*R61;
    double R64 = -panel_straw0z + wire_z;
    double R65 = R12*R7;
    double R66 = R14*R21 + R22;
    double R67 = R13*R14 - R16;
    double R68 = R20*R66 - R24*R67;
    double R69 = R20*R67 + R24*R66;
    double R70 = R10*R57 - R29*R58 - R5*R56 + R55 - R59*(-R10*R62 - R14*R5 + R29*R63) - R64*(-R10*R68 + R29*R69 + R5*R65) + b0 - plane_dz;
    double R71 = -R42*R56 - R43*R57 - R44*R58 - R59*(-R14*R42 + R43*R62 + R44*R63) - R64*(R42*R65 + R43*R68 + R44*R69) - plane_dy;
    double R72 = -R36*R56 - R37*R57 - R40*R58 - R59*(-R14*R36 + R37*R62 + R40*R63) - R64*(R36*R65 + R37*R68 + R40*R69) + a0 - plane_dx;
    double R73 = R47*R70 + R49*R71 + R50*R72;
    double R74 = R2*R70;
    double R75 = R74*b1;
    double R76 = R2*R71;
    double R77 = R51*R72;
    double R78 = -R75 + R76 - R77;
    double R79 = R52*R73 + R78;
    double R80 = R54*R79;
    double R81 = R2*R80;
    double R82 = -R52*(R75 - R76 + R77) + R73;
    double R83 = R54*R82;
    double R84 = -R47*R83 + R70 + R81*b1;
    double R85 = -R49*R83 + R71 - R81;
    double R86 = -R50*R83 + R51*R80 + R72;
    double R87 = pow(R1, -3.0/2.0);
    double R88 = R87*b1;
    double R89 = 2*R80;
    double R90 = R0*R87;
    double R91 = R47*R90;
    double R92 = R45*b1;
    double R93 = R46*R87;
    double R94 = R92*R93;
    double R95 = R41*b1;
    double R96 = R93*R95*a1;
    double R97 = R48 - R91 + R94 - R96;
    double R98 = R88*a1;
    double R99 = R70*R90 - R71*R88 + R72*R98 - R74;
    double R100 = 2*R54;
    double R101 = R100*(R73*R97 + R99);
    double R102 = R101*R2;
    double R103 = R100*(R52*R99 + R78*R97);
    double R104 = 2*R52*(2*R48 - 2*R91 + 2*R94 - 2*R96)/pow(R53, 2);
    double R105 = R104*R79;
    double R106 = R105*R2;
    double R107 = R104*R82;
    double R108 = ((1.0/2.0)*R84*(R102*b1 - R103*R47 + R106*b1 - R107*R47 + 2*R81 - R89*R90) + (1.0/2.0)*R85*(-R102 - R103*R49 - R106 - R107*R49 + R88*R89) + (1.0/2.0)*R86*(R101*R51 - R103*R50 + R105*R51 - R107*R50 - R89*R98))/sqrt(pow(R84, 2) + pow(R85, 2) + pow(R86, 2));
    double R109 = R41 + R45*a1;
    double R110 = R26 - R30 - R9 - R92;
    double R111 = -R31*a1 + R95;
    double R112 = pow(pow(R109, 2) + pow(R110, 2) + pow(R111, 2), -1.0/2.0);
    double result = ((R109*R112*R70 + R110*R112*R72 + R111*R112*R71 > 0) ? (
   -R108
)
: (
   R108
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_t0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double result = 0;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dx(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R32 + R34*R9;
    double R36 = R3*R33;
    double R37 = R2*R31;
    double R38 = R27*R33;
    double R39 = -R37 + R38*R9;
    double R40 = R24*R36 + R26*R39 + R35*R7;
    double R41 = R37*R9 - R38;
    double R42 = R3*R31;
    double R43 = R32*R9 + R34;
    double R44 = R24*R42 + R26*R43 + R41*R7;
    double R45 = pow(pow(R30, 2) + pow(R40, 2) + pow(R44, 2), -1.0/2.0);
    double R46 = R30*R45;
    double R47 = R44*R45;
    double R48 = R0*a1;
    double R49 = R40*R45;
    double R50 = -R0*R47 + R1*R46 + R48*R49;
    double R51 = 1.0/(1.0 - pow(R50, 2));
    double R52 = -plane_z;
    double R53 = R52 + panel_dz + panel_straw0z;
    double R54 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R55 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R56 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R57 = R19*R6;
    double R58 = R23*R6;
    double R59 = -R10*R58 + R14*R57;
    double R60 = R10*R57 + R14*R58;
    double R61 = -panel_straw0z + wire_z;
    double R62 = R11*R6;
    double R63 = R13*R20 + R21;
    double R64 = R12*R13 - R15;
    double R65 = R19*R63 - R23*R64;
    double R66 = R19*R64 + R23*R63;
    double R67 = -R28*R55 - R4*R53 + R52 + R54*R9 - R56*(-R13*R4 + R28*R60 - R59*R9) - R61*(R28*R66 + R4*R62 - R65*R9) + b0 - plane_dz;
    double R68 = R1*R67;
    double R69 = -R41*R53 - R42*R54 - R43*R55 - R56*(-R13*R41 + R42*R59 + R43*R60) - R61*(R41*R62 + R42*R65 + R43*R66) - plane_dy;
    double R70 = R0*R69;
    double R71 = -R35*R53 - R36*R54 - R39*R55 - R56*(-R13*R35 + R36*R59 + R39*R60) - R61*(R35*R62 + R36*R65 + R39*R66) + a0 - plane_dx;
    double R72 = R48*R71;
    double R73 = R46*R67 + R47*R69 + R49*R71;
    double R74 = R51*(R50*R73 - R68 + R70 - R72);
    double R75 = R51*(-R50*(R68 - R70 + R72) + R73);
    double R76 = R1*R74 - R46*R75 + R67;
    double R77 = -R0*R74 - R47*R75 + R69;
    double R78 = R48*R74 - R49*R75 + R71;
    double R79 = 2*R51;
    double R80 = R79*(R48 - R49*R50);
    double R81 = R79*(R48*R50 - R49);
    double R82 = ((1.0/2.0)*R76*(R1*R80 - R46*R81) + (1.0/2.0)*R77*(-R0*R80 - R47*R81) + (1.0/2.0)*R78*(R48*R80 - R49*R81 - 2))/sqrt(pow(R76, 2) + pow(R77, 2) + pow(R78, 2));
    double R83 = R40 + R44*a1;
    double R84 = R25 - R29 - R44*b1 - R8;
    double R85 = -R30*a1 + R40*b1;
    double R86 = pow(pow(R83, 2) + pow(R84, 2) + pow(R85, 2), -1.0/2.0);
    double result = ((R67*R83*R86 + R69*R85*R86 + R71*R84*R86 > 0) ? (
   -R82
)
: (
   R82
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dy(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R32 + R34*R9;
    double R36 = R3*R33;
    double R37 = R2*R31;
    double R38 = R27*R33;
    double R39 = -R37 + R38*R9;
    double R40 = R24*R36 + R26*R39 + R35*R7;
    double R41 = R37*R9 - R38;
    double R42 = R3*R31;
    double R43 = R32*R9 + R34;
    double R44 = R24*R42 + R26*R43 + R41*R7;
    double R45 = pow(pow(R30, 2) + pow(R40, 2) + pow(R44, 2), -1.0/2.0);
    double R46 = R30*R45;
    double R47 = R44*R45;
    double R48 = R40*R45;
    double R49 = R0*a1;
    double R50 = -R0*R47 + R1*R46 + R48*R49;
    double R51 = 1.0/(1.0 - pow(R50, 2));
    double R52 = -plane_z;
    double R53 = R52 + panel_dz + panel_straw0z;
    double R54 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R55 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R56 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R57 = R19*R6;
    double R58 = R23*R6;
    double R59 = -R10*R58 + R14*R57;
    double R60 = R10*R57 + R14*R58;
    double R61 = -panel_straw0z + wire_z;
    double R62 = R11*R6;
    double R63 = R13*R20 + R21;
    double R64 = R12*R13 - R15;
    double R65 = R19*R63 - R23*R64;
    double R66 = R19*R64 + R23*R63;
    double R67 = -R28*R55 - R4*R53 + R52 + R54*R9 - R56*(-R13*R4 + R28*R60 - R59*R9) - R61*(R28*R66 + R4*R62 - R65*R9) + b0 - plane_dz;
    double R68 = R1*R67;
    double R69 = -R41*R53 - R42*R54 - R43*R55 - R56*(-R13*R41 + R42*R59 + R43*R60) - R61*(R41*R62 + R42*R65 + R43*R66) - plane_dy;
    double R70 = R0*R69;
    double R71 = -R35*R53 - R36*R54 - R39*R55 - R56*(-R13*R35 + R36*R59 + R39*R60) - R61*(R35*R62 + R36*R65 + R39*R66) + a0 - plane_dx;
    double R72 = R49*R71;
    double R73 = R46*R67 + R47*R69 + R48*R71;
    double R74 = R51*(R50*R73 - R68 + R70 - R72);
    double R75 = R51*(-R50*(R68 - R70 + R72) + R73);
    double R76 = R1*R74 - R46*R75 + R67;
    double R77 = -R0*R74 - R47*R75 + R69;
    double R78 = -R48*R75 + R49*R74 + R71;
    double R79 = 2*R51;
    double R80 = R79*(-R0 - R47*R50);
    double R81 = R79*(-R0*R50 - R47);
    double R82 = ((1.0/2.0)*R76*(R1*R80 - R46*R81) + (1.0/2.0)*R77*(-R0*R80 - R47*R81 - 2) + (1.0/2.0)*R78*(-R48*R81 + R49*R80))/sqrt(pow(R76, 2) + pow(R77, 2) + pow(R78, 2));
    double R83 = R40 + R44*a1;
    double R84 = R25 - R29 - R44*b1 - R8;
    double R85 = -R30*a1 + R40*b1;
    double R86 = pow(pow(R83, 2) + pow(R84, 2) + pow(R85, 2), -1.0/2.0);
    double result = ((R67*R83*R86 + R69*R85*R86 + R71*R84*R86 > 0) ? (
   -R82
)
: (
   R82
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dz(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R32 + R34*R9;
    double R36 = R3*R33;
    double R37 = R2*R31;
    double R38 = R27*R33;
    double R39 = -R37 + R38*R9;
    double R40 = R24*R36 + R26*R39 + R35*R7;
    double R41 = R37*R9 - R38;
    double R42 = R3*R31;
    double R43 = R32*R9 + R34;
    double R44 = R24*R42 + R26*R43 + R41*R7;
    double R45 = pow(pow(R30, 2) + pow(R40, 2) + pow(R44, 2), -1.0/2.0);
    double R46 = R30*R45;
    double R47 = R44*R45;
    double R48 = R40*R45;
    double R49 = R0*a1;
    double R50 = -R0*R47 + R1*R46 + R48*R49;
    double R51 = 1.0/(1.0 - pow(R50, 2));
    double R52 = -plane_z;
    double R53 = R52 + panel_dz + panel_straw0z;
    double R54 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R55 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R56 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R57 = R19*R6;
    double R58 = R23*R6;
    double R59 = -R10*R58 + R14*R57;
    double R60 = R10*R57 + R14*R58;
    double R61 = -panel_straw0z + wire_z;
    double R62 = R11*R6;
    double R63 = R13*R20 + R21;
    double R64 = R12*R13 - R15;
    double R65 = R19*R63 - R23*R64;
    double R66 = R19*R64 + R23*R63;
    double R67 = -R28*R55 - R4*R53 + R52 + R54*R9 - R56*(-R13*R4 + R28*R60 - R59*R9) - R61*(R28*R66 + R4*R62 - R65*R9) + b0 - plane_dz;
    double R68 = R1*R67;
    double R69 = -R41*R53 - R42*R54 - R43*R55 - R56*(-R13*R41 + R42*R59 + R43*R60) - R61*(R41*R62 + R42*R65 + R43*R66) - plane_dy;
    double R70 = R0*R69;
    double R71 = -R35*R53 - R36*R54 - R39*R55 - R56*(-R13*R35 + R36*R59 + R39*R60) - R61*(R35*R62 + R36*R65 + R39*R66) + a0 - plane_dx;
    double R72 = R49*R71;
    double R73 = R46*R67 + R47*R69 + R48*R71;
    double R74 = R51*(R50*R73 - R68 + R70 - R72);
    double R75 = R51*(-R50*(R68 - R70 + R72) + R73);
    double R76 = R1*R74 - R46*R75 + R67;
    double R77 = -R0*R74 - R47*R75 + R69;
    double R78 = -R48*R75 + R49*R74 + R71;
    double R79 = 2*R51;
    double R80 = R79*(R1 - R46*R50);
    double R81 = R79*(R1*R50 - R46);
    double R82 = ((1.0/2.0)*R76*(R1*R80 - R46*R81 - 2) + (1.0/2.0)*R77*(-R0*R80 - R47*R81) + (1.0/2.0)*R78*(-R48*R81 + R49*R80))/sqrt(pow(R76, 2) + pow(R77, 2) + pow(R78, 2));
    double R83 = R40 + R44*a1;
    double R84 = R25 - R29 - R44*b1 - R8;
    double R85 = -R30*a1 + R40*b1;
    double R86 = pow(pow(R83, 2) + pow(R84, 2) + pow(R85, 2), -1.0/2.0);
    double result = ((R67*R83*R86 + R69*R85*R86 + R71*R84*R86 > 0) ? (
   -R82
)
: (
   R82
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_a(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = R5*R6;
    double R8 = 1.0*R7;
    double R9 = R4*R8;
    double R10 = sin(plane_b);
    double R11 = sin(panel_g);
    double R12 = cos(panel_a);
    double R13 = R11*R12;
    double R14 = sin(panel_b);
    double R15 = cos(panel_g);
    double R16 = R15*R5;
    double R17 = -R13 + R14*R16;
    double R18 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R19 = 1.0/R18;
    double R20 = R19*panel_straw0x;
    double R21 = R12*R15;
    double R22 = R11*R5;
    double R23 = R14*R22 + R21;
    double R24 = R19*panel_straw0y;
    double R25 = 1.0*R17*R20 - 1.0*R23*R24;
    double R26 = R10*R25;
    double R27 = R20*R23;
    double R28 = R17*R24;
    double R29 = R27 + R28;
    double R30 = 1.0*R29;
    double R31 = sin(plane_a);
    double R32 = R3*R31;
    double R33 = R30*R32;
    double R34 = -R26 + R33 + R9;
    double R35 = sin(plane_g);
    double R36 = R31*R35;
    double R37 = cos(plane_g);
    double R38 = R2*R37;
    double R39 = R10*R38;
    double R40 = R36 + R39;
    double R41 = R3*R37;
    double R42 = R2*R35;
    double R43 = R31*R37;
    double R44 = R10*R43;
    double R45 = -R42 + R44;
    double R46 = R25*R41 + R30*R45 + R40*R8;
    double R47 = R10*R42;
    double R48 = -R43 + R47;
    double R49 = R3*R35;
    double R50 = R10*R36;
    double R51 = R38 + R50;
    double R52 = R25*R49 + R30*R51 + R48*R8;
    double R53 = pow(R34, 2) + pow(R46, 2) + pow(R52, 2);
    double R54 = pow(R53, -1.0/2.0);
    double R55 = R34*R54;
    double R56 = R52*R54;
    double R57 = R0*a1;
    double R58 = R46*R54;
    double R59 = -R0*R56 + R1*R55 + R57*R58;
    double R60 = 1.0 - pow(R59, 2);
    double R61 = 1.0/R60;
    double R62 = -plane_z;
    double R63 = R62 + panel_dz + panel_straw0z;
    double R64 = R20*panel_dx - R24*panel_dy + panel_straw0x;
    double R65 = R24*panel_dx;
    double R66 = R20*panel_dy;
    double R67 = R65 + R66 + panel_straw0y;
    double R68 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R69 = -R18 + R68;
    double R70 = R20*R6;
    double R71 = R24*R6;
    double R72 = -R11*R71 + R15*R70;
    double R73 = R11*R70 + R15*R71;
    double R74 = -panel_straw0z;
    double R75 = R74 + wire_z;
    double R76 = R12*R6;
    double R77 = R14*R21 + R22;
    double R78 = R13*R14 - R16;
    double R79 = R20*R77 - R24*R78;
    double R80 = R20*R78 + R24*R77;
    double R81 = R10*R64 - R32*R67 - R4*R63 + R62 - R69*(-R10*R72 - R14*R4 + R32*R73) - R75*(-R10*R79 + R32*R80 + R4*R76) + b0 - plane_dz;
    double R82 = R54*R81;
    double R83 = -R48*R63 - R49*R64 - R51*R67 - R69*(-R14*R48 + R49*R72 + R51*R73) - R75*(R48*R76 + R49*R79 + R51*R80) - plane_dy;
    double R84 = -R40*R63 - R41*R64 - R45*R67 - R69*(-R14*R40 + R41*R72 + R45*R73) - R75*(R40*R76 + R41*R79 + R45*R80) + a0 - plane_dx;
    double R85 = R54*R84;
    double R86 = R34*R82 + R46*R85 + R56*R83;
    double R87 = R1*R81;
    double R88 = R0*R83;
    double R89 = R57*R84;
    double R90 = -R87 + R88 - R89;
    double R91 = R59*R86 + R90;
    double R92 = R61*R91;
    double R93 = -R59*(R87 - R88 + R89) + R86;
    double R94 = R61*R93;
    double R95 = R1*R92 - R55*R94 + R81;
    double R96 = -R0*R92 - R56*R94 + R83;
    double R97 = R57*R92 - R58*R94 + R84;
    double R98 = R32*(R74 - panel_dz + plane_z);
    double R99 = R4*(-R65 - R66 - panel_straw0y);
    double R100 = R18 - R68;
    double R101 = R100*(R14*R32 + R4*R73);
    double R102 = panel_straw0z - wire_z;
    double R103 = R102*(-R32*R76 + R4*R80);
    double R104 = R4*(1.0*R27 + 1.0*R28);
    double R105 = R104 - R32*R8;
    double R106 = R105*R54;
    double R107 = 2*R94;
    double R108 = R7*(1.0*R42 - 1.0*R44);
    double R109 = R29*(1.0*R36 + 1.0*R39);
    double R110 = R7*(-1.0*R38 - 1.0*R50);
    double R111 = R29*(-1.0*R43 + 1.0*R47);
    double R112 = (-1.0/2.0*R34*(2*R104 - 2.0*R32*R7) - 1.0/2.0*R46*(2*R108 + 2*R109) - 1.0/2.0*R52*(2*R110 + 2*R111))/pow(R53, 3.0/2.0);
    double R113 = R112*R34;
    double R114 = R1*R106;
    double R115 = R54*(R110 + R111);
    double R116 = R0*R115;
    double R117 = R108 + R109;
    double R118 = R117*R54;
    double R119 = R118*R57;
    double R120 = R1*R113;
    double R121 = R112*R52;
    double R122 = R0*R121;
    double R123 = R112*R46;
    double R124 = R123*R57;
    double R125 = 2*R59*(2*R114 - 2*R116 + 2*R119 + 2*R120 - 2*R122 + 2*R124)/pow(R60, 2);
    double R126 = R125*R91;
    double R127 = R125*R93;
    double R128 = R101 + R103 - R98 + R99;
    double R129 = R51*R63;
    double R130 = R67*(R43 - R47);
    double R131 = R100*(R14*R51 + R48*R73);
    double R132 = R102*(R48*R80 + R76*(-R38 - R50));
    double R133 = R129 + R130 + R131 + R132;
    double R134 = R45*R63;
    double R135 = R67*(-R36 - R39);
    double R136 = R100*(R14*R45 + R40*R73);
    double R137 = R102*(R40*R80 + R76*(R42 - R44));
    double R138 = R134 + R135 + R136 + R137;
    double R139 = R0*R133 - R1*R128 - R138*R57;
    double R140 = R114 - R116 + R119 + R120 - R122 + R124;
    double R141 = R105*R82 + R113*R81 + R115*R83 + R117*R85 + R121*R83 + R123*R84 + R128*R55 + R133*R56 + R138*R58;
    double R142 = 2*R61;
    double R143 = R142*(R139*R59 + R140*R90 + R141);
    double R144 = R142*(R139 + R140*R86 + R141*R59);
    double R145 = ((1.0/2.0)*R95*(R1*R126 + R1*R144 + 2*R101 + 2*R103 - R106*R107 - R107*R113 - R127*R55 - R143*R55 - 2*R98 + 2*R99) + (1.0/2.0)*R96*(-R0*R126 - R0*R144 - R107*R115 - R107*R121 - R127*R56 + 2*R129 + 2*R130 + 2*R131 + 2*R132 - R143*R56) + (1.0/2.0)*R97*(-R107*R118 - R107*R123 + R126*R57 - R127*R58 + 2*R134 + 2*R135 + 2*R136 + 2*R137 - R143*R58 + R144*R57))/sqrt(pow(R95, 2) + pow(R96, 2) + pow(R97, 2));
    double R146 = R46 + R52*a1;
    double R147 = R26 - R33 - R52*b1 - R9;
    double R148 = -R34*a1 + R46*b1;
    double R149 = pow(pow(R146, 2) + pow(R147, 2) + pow(R148, 2), -1.0/2.0);
    double result = ((R146*R149*R81 + R147*R149*R84 + R148*R149*R83 > 0) ? (
   -R145
)
: (
   R145
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_b(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = R5*R6;
    double R8 = 1.0*R7;
    double R9 = R4*R8;
    double R10 = sin(plane_b);
    double R11 = sin(panel_g);
    double R12 = cos(panel_a);
    double R13 = R11*R12;
    double R14 = sin(panel_b);
    double R15 = cos(panel_g);
    double R16 = R15*R5;
    double R17 = -R13 + R14*R16;
    double R18 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R19 = 1.0/R18;
    double R20 = R19*panel_straw0x;
    double R21 = R17*R20;
    double R22 = R12*R15;
    double R23 = R11*R5;
    double R24 = R14*R23 + R22;
    double R25 = R19*panel_straw0y;
    double R26 = R24*R25;
    double R27 = 1.0*R21 - 1.0*R26;
    double R28 = R10*R27;
    double R29 = R20*R24;
    double R30 = R17*R25;
    double R31 = R29 + R30;
    double R32 = 1.0*R31;
    double R33 = sin(plane_a);
    double R34 = R3*R33;
    double R35 = R32*R34;
    double R36 = -R28 + R35 + R9;
    double R37 = sin(plane_g);
    double R38 = R33*R37;
    double R39 = cos(plane_g);
    double R40 = R2*R39;
    double R41 = R10*R40 + R38;
    double R42 = R3*R39;
    double R43 = R2*R37;
    double R44 = R33*R39;
    double R45 = R10*R44 - R43;
    double R46 = R27*R42 + R32*R45 + R41*R8;
    double R47 = R10*R43 - R44;
    double R48 = R3*R37;
    double R49 = R10*R38 + R40;
    double R50 = R27*R48 + R32*R49 + R47*R8;
    double R51 = pow(R36, 2) + pow(R46, 2) + pow(R50, 2);
    double R52 = pow(R51, -1.0/2.0);
    double R53 = R36*R52;
    double R54 = R50*R52;
    double R55 = R46*R52;
    double R56 = R0*a1;
    double R57 = -R0*R54 + R1*R53 + R55*R56;
    double R58 = 1.0 - pow(R57, 2);
    double R59 = 1.0/R58;
    double R60 = -plane_z;
    double R61 = R60 + panel_dz + panel_straw0z;
    double R62 = R20*panel_dx;
    double R63 = R25*panel_dy;
    double R64 = R62 - R63 + panel_straw0x;
    double R65 = R25*panel_dx;
    double R66 = R20*panel_dy;
    double R67 = R65 + R66 + panel_straw0y;
    double R68 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R69 = -R18 + R68;
    double R70 = R20*R6;
    double R71 = R15*R70;
    double R72 = R25*R6;
    double R73 = R11*R72;
    double R74 = R71 - R73;
    double R75 = R10*R74;
    double R76 = R11*R70 + R15*R72;
    double R77 = -panel_straw0z;
    double R78 = R77 + wire_z;
    double R79 = R12*R6;
    double R80 = R14*R22 + R23;
    double R81 = R20*R80;
    double R82 = R13*R14 - R16;
    double R83 = R25*R82;
    double R84 = R81 - R83;
    double R85 = R10*R84;
    double R86 = R20*R82 + R25*R80;
    double R87 = R10*R64 - R34*R67 - R4*R61 + R60 - R69*(-R14*R4 + R34*R76 - R75) - R78*(R34*R86 + R4*R79 - R85) + b0 - plane_dz;
    double R88 = R52*R87;
    double R89 = R3*R64;
    double R90 = -R37*R89 - R47*R61 - R49*R67 - R69*(-R14*R47 + R48*R74 + R49*R76) - R78*(R47*R79 + R48*R84 + R49*R86) - plane_dy;
    double R91 = -R39*R89 - R41*R61 - R45*R67 - R69*(-R14*R41 + R42*R74 + R45*R76) - R78*(R41*R79 + R42*R84 + R45*R86) + a0 - plane_dx;
    double R92 = R36*R88 + R54*R90 + R55*R91;
    double R93 = R1*R87;
    double R94 = R0*R90;
    double R95 = R56*R91;
    double R96 = -R93 + R94 - R95;
    double R97 = R57*R92 + R96;
    double R98 = R59*R97;
    double R99 = -R57*(R93 - R94 + R95) + R92;
    double R100 = R59*R99;
    double R101 = R1*R98 - R100*R53 + R87;
    double R102 = -R0*R98 - R100*R54 + R90;
    double R103 = -R100*R55 + R56*R98 + R91;
    double R104 = R10*R2;
    double R105 = R104*(R77 - panel_dz + plane_z);
    double R106 = R10*R33;
    double R107 = R106*(-R65 - R66 - panel_straw0y);
    double R108 = R18 - R68;
    double R109 = R108*(R104*R14 - R106*R76 + R3*(-R71 + R73));
    double R110 = panel_straw0z - wire_z;
    double R111 = R110*(-R104*R79 - R106*R86 + R3*(-R81 + R83));
    double R112 = 1.0*R26;
    double R113 = 1.0*R21;
    double R114 = R3*(R112 - R113);
    double R115 = R106*(1.0*R29 + 1.0*R30);
    double R116 = -R104*R8 + R114 - R115;
    double R117 = R116*R52;
    double R118 = 2*R100;
    double R119 = 2.0*R7;
    double R120 = R3*R40;
    double R121 = -R112 + R113;
    double R122 = R10*R39;
    double R123 = R121*R122;
    double R124 = R3*R44;
    double R125 = 2.0*R31;
    double R126 = R3*R43;
    double R127 = R10*R37;
    double R128 = R121*R127;
    double R129 = R3*R38;
    double R130 = (-1.0/2.0*R36*(-R104*R119 + 2*R114 - 2*R115) - 1.0/2.0*R46*(R119*R120 - 2*R123 + R124*R125) - 1.0/2.0*R50*(R119*R126 + R125*R129 - 2*R128))/pow(R51, 3.0/2.0);
    double R131 = R130*R36;
    double R132 = R1*R117;
    double R133 = R52*(R126*R8 - R128 + R129*R32);
    double R134 = R0*R133;
    double R135 = R52*(R120*R8 - R123 + R124*R32);
    double R136 = R135*R56;
    double R137 = R1*R131;
    double R138 = R130*R50;
    double R139 = R0*R138;
    double R140 = R130*R46;
    double R141 = R140*R56;
    double R142 = 2*R57*(2*R132 - 2*R134 + 2*R136 + 2*R137 - 2*R139 + 2*R141)/pow(R58, 2);
    double R143 = R142*R97;
    double R144 = R142*R99;
    double R145 = -R105 - R107 + R109 + R111 + R89;
    double R146 = R126*R61;
    double R147 = R129*R67;
    double R148 = -R62 + R63 - panel_straw0x;
    double R149 = R127*R148;
    double R150 = R108*(-R126*R14 + R129*R76 - R37*R75);
    double R151 = R110*(R126*R79 + R129*R86 - R37*R85);
    double R152 = -R146 - R147 - R149 + R150 + R151;
    double R153 = R120*R61;
    double R154 = R124*R67;
    double R155 = R122*R148;
    double R156 = R108*(-R120*R14 + R124*R76 - R39*R75);
    double R157 = R110*(R120*R79 + R124*R86 - R39*R85);
    double R158 = -R153 - R154 - R155 + R156 + R157;
    double R159 = R0*R152 - R1*R145 - R158*R56;
    double R160 = R132 - R134 + R136 + R137 - R139 + R141;
    double R161 = R116*R88 + R131*R87 + R133*R90 + R135*R91 + R138*R90 + R140*R91 + R145*R53 + R152*R54 + R158*R55;
    double R162 = 2*R59;
    double R163 = R162*(R159*R57 + R160*R96 + R161);
    double R164 = R162*(R159 + R160*R92 + R161*R57);
    double R165 = ((1.0/2.0)*R101*(R1*R143 + R1*R164 - 2*R105 - 2*R107 + 2*R109 + 2*R111 - R117*R118 - R118*R131 - R144*R53 - R163*R53 + 2*R89) + (1.0/2.0)*R102*(-R0*R143 - R0*R164 - R118*R133 - R118*R138 - R144*R54 - 2*R146 - 2*R147 - 2*R149 + 2*R150 + 2*R151 - R163*R54) + (1.0/2.0)*R103*(-R118*R135 - R118*R140 + R143*R56 - R144*R55 - 2*R153 - 2*R154 - 2*R155 + 2*R156 + 2*R157 - R163*R55 + R164*R56))/sqrt(pow(R101, 2) + pow(R102, 2) + pow(R103, 2));
    double R166 = R46 + R50*a1;
    double R167 = R28 - R35 - R50*b1 - R9;
    double R168 = -R36*a1 + R46*b1;
    double R169 = pow(pow(R166, 2) + pow(R167, 2) + pow(R168, 2), -1.0/2.0);
    double result = ((R166*R169*R87 + R167*R169*R91 + R168*R169*R90 > 0) ? (
   -R165
)
: (
   R165
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_g(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = R5*R6;
    double R8 = 1.0*R7;
    double R9 = R4*R8;
    double R10 = sin(plane_b);
    double R11 = sin(panel_g);
    double R12 = cos(panel_a);
    double R13 = R11*R12;
    double R14 = sin(panel_b);
    double R15 = cos(panel_g);
    double R16 = R15*R5;
    double R17 = -R13 + R14*R16;
    double R18 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R19 = 1.0/R18;
    double R20 = R19*panel_straw0x;
    double R21 = R17*R20;
    double R22 = R12*R15;
    double R23 = R11*R5;
    double R24 = R14*R23 + R22;
    double R25 = R19*panel_straw0y;
    double R26 = R24*R25;
    double R27 = 1.0*R21 - 1.0*R26;
    double R28 = R10*R27;
    double R29 = R17*R25 + R20*R24;
    double R30 = 1.0*R29;
    double R31 = sin(plane_a);
    double R32 = R3*R31;
    double R33 = R30*R32;
    double R34 = -R28 + R33 + R9;
    double R35 = sin(plane_g);
    double R36 = R31*R35;
    double R37 = cos(plane_g);
    double R38 = R2*R37;
    double R39 = R10*R38;
    double R40 = R36 + R39;
    double R41 = R3*R37;
    double R42 = R2*R35;
    double R43 = R31*R37;
    double R44 = R10*R43;
    double R45 = -R42 + R44;
    double R46 = R27*R41 + R30*R45 + R40*R8;
    double R47 = R10*R42;
    double R48 = -R43 + R47;
    double R49 = R3*R35;
    double R50 = R10*R36;
    double R51 = R38 + R50;
    double R52 = R27*R49 + R30*R51 + R48*R8;
    double R53 = pow(R34, 2) + pow(R46, 2) + pow(R52, 2);
    double R54 = pow(R53, -1.0/2.0);
    double R55 = R34*R54;
    double R56 = R52*R54;
    double R57 = R0*a1;
    double R58 = R46*R54;
    double R59 = -R0*R56 + R1*R55 + R57*R58;
    double R60 = 1.0 - pow(R59, 2);
    double R61 = 1.0/R60;
    double R62 = -plane_z;
    double R63 = R62 + panel_dz + panel_straw0z;
    double R64 = R20*panel_dx;
    double R65 = R25*panel_dy;
    double R66 = R64 - R65 + panel_straw0x;
    double R67 = R20*panel_dy + R25*panel_dx + panel_straw0y;
    double R68 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R69 = -R18 + R68;
    double R70 = R20*R6;
    double R71 = R25*R6;
    double R72 = -R11*R71 + R15*R70;
    double R73 = R11*R70 + R15*R71;
    double R74 = -panel_straw0z + wire_z;
    double R75 = R12*R6;
    double R76 = R14*R22 + R23;
    double R77 = R13*R14 - R16;
    double R78 = R20*R76 - R25*R77;
    double R79 = R20*R77 + R25*R76;
    double R80 = R10*R66 - R32*R67 - R4*R63 + R62 - R69*(-R10*R72 - R14*R4 + R32*R73) - R74*(-R10*R78 + R32*R79 + R4*R75) + b0 - plane_dz;
    double R81 = R48*R63;
    double R82 = R51*R67;
    double R83 = R14*R48;
    double R84 = R49*R72;
    double R85 = R49*R78;
    double R86 = -R49*R66 - R69*(R51*R73 - R83 + R84) - R74*(R48*R75 + R51*R79 + R85) - R81 - R82 - plane_dy;
    double R87 = R41*R72 + R45*R73;
    double R88 = R40*R75 + R41*R78 + R45*R79;
    double R89 = -R40*R63 - R41*R66 - R45*R67 - R69*(-R14*R40 + R87) - R74*R88 + a0 - plane_dx;
    double R90 = R54*R89;
    double R91 = R46*R90 + R55*R80 + R56*R86;
    double R92 = R1*R80;
    double R93 = R0*R86;
    double R94 = R57*R89;
    double R95 = -R92 + R93 - R94;
    double R96 = R59*R91 + R95;
    double R97 = R61*R96;
    double R98 = -R59*(R92 - R93 + R94) + R91;
    double R99 = R61*R98;
    double R100 = R1*R97 - R55*R99 + R80;
    double R101 = -R0*R97 - R56*R99 + R86;
    double R102 = R57*R97 - R58*R99 + R89;
    double R103 = R7*(1.0*R43 - 1.0*R47);
    double R104 = 1.0*R21 - 1.0*R26;
    double R105 = R104*R49;
    double R106 = R29*(-1.0*R38 - 1.0*R50);
    double R107 = R7*(1.0*R36 + 1.0*R39);
    double R108 = R104*R41;
    double R109 = R29*(-1.0*R42 + 1.0*R44);
    double R110 = (-1.0/2.0*R46*(2*R103 - 2*R105 + 2*R106) - 1.0/2.0*R52*(2*R107 + 2*R108 + 2*R109))/pow(R53, 3.0/2.0);
    double R111 = R110*R34;
    double R112 = 2*R99;
    double R113 = R54*(R107 + R108 + R109);
    double R114 = R0*R113;
    double R115 = R103 - R105 + R106;
    double R116 = R115*R54;
    double R117 = R116*R57;
    double R118 = R1*R111;
    double R119 = R110*R52;
    double R120 = R0*R119;
    double R121 = R110*R46;
    double R122 = R121*R57;
    double R123 = 2*R59*(-2*R114 + 2*R117 + 2*R118 - 2*R120 + 2*R122)/pow(R60, 2);
    double R124 = R123*R96;
    double R125 = R123*R98;
    double R126 = -R36 - R39;
    double R127 = R126*R63;
    double R128 = -R64 + R65 - panel_straw0x;
    double R129 = R128*R41;
    double R130 = R67*(R42 - R44);
    double R131 = R18 - R68;
    double R132 = R131*(R126*R14 + R87);
    double R133 = panel_straw0z - wire_z;
    double R134 = R133*R88;
    double R135 = R127 + R129 + R130 + R132 + R134;
    double R136 = R128*R49;
    double R137 = -R38 - R50;
    double R138 = R131*(R137*R73 + R83 - R84);
    double R139 = R133*(R137*R79 + R75*(R43 - R47) - R85);
    double R140 = -R136 + R138 + R139 + R81 + R82;
    double R141 = R0*R135 - R140*R57;
    double R142 = -R114 + R117 + R118 - R120 + R122;
    double R143 = R111*R80 + R113*R86 + R115*R90 + R119*R86 + R121*R89 + R135*R56 + R140*R58;
    double R144 = 2*R61;
    double R145 = R144*(R141*R59 + R142*R95 + R143);
    double R146 = R144*(R141 + R142*R91 + R143*R59);
    double R147 = ((1.0/2.0)*R100*(R1*R124 + R1*R146 - R111*R112 - R125*R55 - R145*R55) + (1.0/2.0)*R101*(-R0*R124 - R0*R146 - R112*R113 - R112*R119 - R125*R56 + 2*R127 + 2*R129 + 2*R130 + 2*R132 + 2*R134 - R145*R56) + (1.0/2.0)*R102*(-R112*R116 - R112*R121 + R124*R57 - R125*R58 - 2*R136 + 2*R138 + 2*R139 - R145*R58 + R146*R57 + 2*R81 + 2*R82))/sqrt(pow(R100, 2) + pow(R101, 2) + pow(R102, 2));
    double R148 = R46 + R52*a1;
    double R149 = R28 - R33 - R52*b1 - R9;
    double R150 = -R34*a1 + R46*b1;
    double R151 = pow(pow(R148, 2) + pow(R149, 2) + pow(R150, 2), -1.0/2.0);
    double result = ((R148*R151*R80 + R149*R151*R89 + R150*R151*R86 > 0) ? (
   -R147
)
: (
   R147
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dx(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R32 + R34*R9;
    double R36 = R3*R33;
    double R37 = R2*R31;
    double R38 = R27*R33;
    double R39 = R38*R9;
    double R40 = -R37 + R39;
    double R41 = R24*R36 + R26*R40 + R35*R7;
    double R42 = R37*R9 - R38;
    double R43 = R3*R31;
    double R44 = R32*R9;
    double R45 = R34 + R44;
    double R46 = R24*R43 + R26*R45 + R42*R7;
    double R47 = pow(pow(R30, 2) + pow(R41, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = R30*R47;
    double R49 = R46*R47;
    double R50 = R41*R47;
    double R51 = R0*a1;
    double R52 = -R0*R49 + R1*R48 + R50*R51;
    double R53 = 1.0/(1.0 - pow(R52, 2));
    double R54 = -plane_z;
    double R55 = R54 + panel_dz + panel_straw0z;
    double R56 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R57 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R58 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R59 = R19*R6;
    double R60 = R23*R6;
    double R61 = -R10*R60 + R14*R59;
    double R62 = R10*R59 + R14*R60;
    double R63 = -panel_straw0z + wire_z;
    double R64 = R11*R6;
    double R65 = R13*R20 + R21;
    double R66 = R12*R13 - R15;
    double R67 = R19*R65 - R23*R66;
    double R68 = R19*R66 + R23*R65;
    double R69 = -R28*R57 - R4*R55 + R54 + R56*R9 - R58*(-R13*R4 + R28*R62 - R61*R9) - R63*(R28*R68 + R4*R64 - R67*R9) + b0 - plane_dz;
    double R70 = R1*R69;
    double R71 = -R42*R55 - R43*R56 - R45*R57 - R58*(-R13*R42 + R43*R61 + R45*R62) - R63*(R42*R64 + R43*R67 + R45*R68) - plane_dy;
    double R72 = R0*R71;
    double R73 = -R35*R55 - R36*R56 - R40*R57 - R58*(-R13*R35 + R36*R61 + R40*R62) - R63*(R35*R64 + R36*R67 + R40*R68) + a0 - plane_dx;
    double R74 = R51*R73;
    double R75 = R48*R69 + R49*R71 + R50*R73;
    double R76 = R53*(R52*R75 - R70 + R72 - R74);
    double R77 = R53*(-R52*(R70 - R72 + R74) + R75);
    double R78 = R1*R76 - R48*R77 + R69;
    double R79 = -R0*R76 - R49*R77 + R71;
    double R80 = -R50*R77 + R51*R76 + R73;
    double R81 = R19*R9;
    double R82 = R23*R28;
    double R83 = R81 - R82;
    double R84 = R19*R36;
    double R85 = R23*(R37 - R39);
    double R86 = -R84 + R85;
    double R87 = R19*R43;
    double R88 = R23*(-R34 - R44);
    double R89 = -R87 + R88;
    double R90 = R48*R83 + R49*R89 + R50*R86;
    double R91 = R0*R89 - R1*R83 - R51*R86;
    double R92 = 2*R53;
    double R93 = R92*(R52*R90 + R91);
    double R94 = R92*(R52*R91 + R90);
    double R95 = ((1.0/2.0)*R78*(R1*R93 - R48*R94 + 2*R81 - 2*R82) + (1.0/2.0)*R79*(-R0*R93 - R49*R94 - 2*R87 + 2*R88) + (1.0/2.0)*R80*(-R50*R94 + R51*R93 - 2*R84 + 2*R85))/sqrt(pow(R78, 2) + pow(R79, 2) + pow(R80, 2));
    double R96 = R41 + R46*a1;
    double R97 = R25 - R29 - R46*b1 - R8;
    double R98 = -R30*a1 + R41*b1;
    double R99 = pow(pow(R96, 2) + pow(R97, 2) + pow(R98, 2), -1.0/2.0);
    double result = ((R69*R96*R99 + R71*R98*R99 + R73*R97*R99 > 0) ? (
   -R95
)
: (
   R95
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dy(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R32 + R34*R9;
    double R36 = R3*R33;
    double R37 = R2*R31;
    double R38 = R27*R33;
    double R39 = R38*R9;
    double R40 = -R37 + R39;
    double R41 = R24*R36 + R26*R40 + R35*R7;
    double R42 = R37*R9 - R38;
    double R43 = R3*R31;
    double R44 = R32*R9;
    double R45 = R34 + R44;
    double R46 = R24*R43 + R26*R45 + R42*R7;
    double R47 = pow(pow(R30, 2) + pow(R41, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = R30*R47;
    double R49 = R46*R47;
    double R50 = R41*R47;
    double R51 = R0*a1;
    double R52 = -R0*R49 + R1*R48 + R50*R51;
    double R53 = 1.0/(1.0 - pow(R52, 2));
    double R54 = -plane_z;
    double R55 = R54 + panel_dz + panel_straw0z;
    double R56 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R57 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R58 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R59 = R19*R6;
    double R60 = R23*R6;
    double R61 = -R10*R60 + R14*R59;
    double R62 = R10*R59 + R14*R60;
    double R63 = -panel_straw0z + wire_z;
    double R64 = R11*R6;
    double R65 = R13*R20 + R21;
    double R66 = R12*R13 - R15;
    double R67 = R19*R65 - R23*R66;
    double R68 = R19*R66 + R23*R65;
    double R69 = -R28*R57 - R4*R55 + R54 + R56*R9 - R58*(-R13*R4 + R28*R62 - R61*R9) - R63*(R28*R68 + R4*R64 - R67*R9) + b0 - plane_dz;
    double R70 = R1*R69;
    double R71 = -R42*R55 - R43*R56 - R45*R57 - R58*(-R13*R42 + R43*R61 + R45*R62) - R63*(R42*R64 + R43*R67 + R45*R68) - plane_dy;
    double R72 = R0*R71;
    double R73 = -R35*R55 - R36*R56 - R40*R57 - R58*(-R13*R35 + R36*R61 + R40*R62) - R63*(R35*R64 + R36*R67 + R40*R68) + a0 - plane_dx;
    double R74 = R51*R73;
    double R75 = R48*R69 + R49*R71 + R50*R73;
    double R76 = R53*(R52*R75 - R70 + R72 - R74);
    double R77 = R53*(-R52*(R70 - R72 + R74) + R75);
    double R78 = R1*R76 - R48*R77 + R69;
    double R79 = -R0*R76 - R49*R77 + R71;
    double R80 = -R50*R77 + R51*R76 + R73;
    double R81 = R23*R9;
    double R82 = R19*R28;
    double R83 = -R81 - R82;
    double R84 = R23*R36;
    double R85 = R19*(R37 - R39);
    double R86 = R84 + R85;
    double R87 = R23*R43;
    double R88 = R19*(-R34 - R44);
    double R89 = R87 + R88;
    double R90 = R48*R83 + R49*R89 + R50*R86;
    double R91 = R0*R89 - R1*R83 - R51*R86;
    double R92 = 2*R53;
    double R93 = R92*(R52*R90 + R91);
    double R94 = R92*(R52*R91 + R90);
    double R95 = ((1.0/2.0)*R78*(R1*R93 - R48*R94 - 2*R81 - 2*R82) + (1.0/2.0)*R79*(-R0*R93 - R49*R94 + 2*R87 + 2*R88) + (1.0/2.0)*R80*(-R50*R94 + R51*R93 + 2*R84 + 2*R85))/sqrt(pow(R78, 2) + pow(R79, 2) + pow(R80, 2));
    double R96 = R41 + R46*a1;
    double R97 = R25 - R29 - R46*b1 - R8;
    double R98 = -R30*a1 + R41*b1;
    double R99 = pow(pow(R96, 2) + pow(R97, 2) + pow(R98, 2), -1.0/2.0);
    double result = ((R69*R96*R99 + R71*R98*R99 + R73*R97*R99 > 0) ? (
   -R95
)
: (
   R95
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dz(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R11*R14;
    double R21 = R10*R5;
    double R22 = R13*R21 + R20;
    double R23 = R18*panel_straw0y;
    double R24 = 1.0*R16*R19 - 1.0*R22*R23;
    double R25 = R24*R9;
    double R26 = 1.0*R16*R23 + 1.0*R19*R22;
    double R27 = sin(plane_a);
    double R28 = R27*R3;
    double R29 = R26*R28;
    double R30 = -R25 + R29 + R8;
    double R31 = sin(plane_g);
    double R32 = R27*R31;
    double R33 = cos(plane_g);
    double R34 = R2*R33;
    double R35 = R34*R9;
    double R36 = R32 + R35;
    double R37 = R3*R33;
    double R38 = R2*R31;
    double R39 = R27*R33;
    double R40 = -R38 + R39*R9;
    double R41 = R24*R37 + R26*R40 + R36*R7;
    double R42 = R38*R9;
    double R43 = -R39 + R42;
    double R44 = R3*R31;
    double R45 = R32*R9 + R34;
    double R46 = R24*R44 + R26*R45 + R43*R7;
    double R47 = pow(pow(R30, 2) + pow(R41, 2) + pow(R46, 2), -1.0/2.0);
    double R48 = R30*R47;
    double R49 = R46*R47;
    double R50 = R41*R47;
    double R51 = R0*a1;
    double R52 = -R0*R49 + R1*R48 + R50*R51;
    double R53 = 1.0/(1.0 - pow(R52, 2));
    double R54 = -plane_z;
    double R55 = R54 + panel_dz + panel_straw0z;
    double R56 = R19*panel_dx - R23*panel_dy + panel_straw0x;
    double R57 = R19*panel_dy + R23*panel_dx + panel_straw0y;
    double R58 = -R17 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R59 = R19*R6;
    double R60 = R23*R6;
    double R61 = -R10*R60 + R14*R59;
    double R62 = R10*R59 + R14*R60;
    double R63 = -panel_straw0z + wire_z;
    double R64 = R11*R6;
    double R65 = R13*R20 + R21;
    double R66 = R12*R13 - R15;
    double R67 = R19*R65 - R23*R66;
    double R68 = R19*R66 + R23*R65;
    double R69 = -R28*R57 - R4*R55 + R54 + R56*R9 - R58*(-R13*R4 + R28*R62 - R61*R9) - R63*(R28*R68 + R4*R64 - R67*R9) + b0 - plane_dz;
    double R70 = R1*R69;
    double R71 = -R43*R55 - R44*R56 - R45*R57 - R58*(-R13*R43 + R44*R61 + R45*R62) - R63*(R43*R64 + R44*R67 + R45*R68) - plane_dy;
    double R72 = R0*R71;
    double R73 = -R36*R55 - R37*R56 - R40*R57 - R58*(-R13*R36 + R37*R61 + R40*R62) - R63*(R36*R64 + R37*R67 + R40*R68) + a0 - plane_dx;
    double R74 = R51*R73;
    double R75 = R48*R69 + R49*R71 + R50*R73;
    double R76 = R53*(R52*R75 - R70 + R72 - R74);
    double R77 = R53*(-R52*(R70 - R72 + R74) + R75);
    double R78 = R1*R76 - R48*R77 + R69;
    double R79 = -R0*R76 - R49*R77 + R71;
    double R80 = -R50*R77 + R51*R76 + R73;
    double R81 = R39 - R42;
    double R82 = -R32 - R35;
    double R83 = -R4*R48 + R49*R81 + R50*R82;
    double R84 = R0*R81 + R1*R4 - R51*R82;
    double R85 = 2*R53;
    double R86 = R85*(R52*R83 + R84);
    double R87 = R85*(R52*R84 + R83);
    double R88 = ((1.0/2.0)*R78*(R1*R86 - 2*R4 - R48*R87) + (1.0/2.0)*R79*(-R0*R86 + 2*R39 - 2*R42 - R49*R87) + (1.0/2.0)*R80*(-2*R32 - 2*R35 - R50*R87 + R51*R86))/sqrt(pow(R78, 2) + pow(R79, 2) + pow(R80, 2));
    double R89 = R41 + R46*a1;
    double R90 = R25 - R29 - R46*b1 - R8;
    double R91 = -R30*a1 + R41*b1;
    double R92 = pow(pow(R89, 2) + pow(R90, 2) + pow(R91, 2), -1.0/2.0);
    double result = ((R69*R89*R92 + R71*R91*R92 + R73*R90*R92 > 0) ? (
   -R88
)
: (
   R88
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_a(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = R5*R6;
    double R8 = R4*R7;
    double R9 = 1.0*R8;
    double R10 = sin(plane_b);
    double R11 = sin(panel_g);
    double R12 = cos(panel_a);
    double R13 = R11*R12;
    double R14 = sin(panel_b);
    double R15 = cos(panel_g);
    double R16 = R15*R5;
    double R17 = R14*R16;
    double R18 = -R13 + R17;
    double R19 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R20 = 1.0/R19;
    double R21 = R20*panel_straw0x;
    double R22 = R12*R15;
    double R23 = R11*R5;
    double R24 = R14*R23;
    double R25 = R22 + R24;
    double R26 = R20*panel_straw0y;
    double R27 = 1.0*R18*R21 - 1.0*R25*R26;
    double R28 = R10*R27;
    double R29 = 1.0*R18*R26 + 1.0*R21*R25;
    double R30 = sin(plane_a);
    double R31 = R3*R30;
    double R32 = R29*R31;
    double R33 = -R28 + R32 + R9;
    double R34 = sin(plane_g);
    double R35 = R30*R34;
    double R36 = cos(plane_g);
    double R37 = R2*R36;
    double R38 = R10*R37;
    double R39 = R35 + R38;
    double R40 = R39*R7;
    double R41 = R3*R36;
    double R42 = R2*R34;
    double R43 = R30*R36;
    double R44 = R10*R43;
    double R45 = -R42 + R44;
    double R46 = R27*R41 + R29*R45 + 1.0*R40;
    double R47 = R10*R42;
    double R48 = -R43 + R47;
    double R49 = R48*R7;
    double R50 = R3*R34;
    double R51 = R10*R35;
    double R52 = R37 + R51;
    double R53 = R27*R50 + R29*R52 + 1.0*R49;
    double R54 = pow(R33, 2) + pow(R46, 2) + pow(R53, 2);
    double R55 = pow(R54, -1.0/2.0);
    double R56 = R33*R55;
    double R57 = R53*R55;
    double R58 = R0*a1;
    double R59 = R46*R55;
    double R60 = -R0*R57 + R1*R56 + R58*R59;
    double R61 = 1.0 - pow(R60, 2);
    double R62 = 1.0/R61;
    double R63 = -plane_z;
    double R64 = R63 + panel_dz + panel_straw0z;
    double R65 = R21*panel_dx - R26*panel_dy + panel_straw0x;
    double R66 = R21*panel_dy + R26*panel_dx + panel_straw0y;
    double R67 = -R19 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R68 = R21*R6;
    double R69 = R26*R6;
    double R70 = -R11*R69 + R15*R68;
    double R71 = R11*R68 + R15*R69;
    double R72 = -panel_straw0z + wire_z;
    double R73 = R12*R6;
    double R74 = R4*R73;
    double R75 = R14*R22 + R23;
    double R76 = R21*R75;
    double R77 = R13*R14 - R16;
    double R78 = R26*R77;
    double R79 = R76 - R78;
    double R80 = R26*R75;
    double R81 = R21*R77;
    double R82 = R80 + R81;
    double R83 = R10*R65 - R31*R66 - R4*R64 + R63 - R67*(-R10*R70 - R14*R4 + R31*R71) - R72*(-R10*R79 + R31*R82 + R74) + b0 - plane_dz;
    double R84 = R55*R83;
    double R85 = -R48*R64 - R50*R65 - R52*R66 - R67*(-R14*R48 + R50*R70 + R52*R71) - R72*(R48*R73 + R50*R79 + R52*R82) - plane_dy;
    double R86 = -R39*R64 - R41*R65 - R45*R66 - R67*(-R14*R39 + R41*R70 + R45*R71) - R72*(R39*R73 + R41*R79 + R45*R82) + a0 - plane_dx;
    double R87 = R55*R86;
    double R88 = R33*R84 + R46*R87 + R57*R85;
    double R89 = R1*R83;
    double R90 = R0*R85;
    double R91 = R58*R86;
    double R92 = -R89 + R90 - R91;
    double R93 = R60*R88 + R92;
    double R94 = R62*R93;
    double R95 = -R60*(R89 - R90 + R91) + R88;
    double R96 = R62*R95;
    double R97 = R1*R94 - R56*R96 + R83;
    double R98 = -R0*R94 - R57*R96 + R85;
    double R99 = R58*R94 - R59*R96 + R86;
    double R100 = R13 - R17;
    double R101 = R100*R21;
    double R102 = -R22 - R24;
    double R103 = R102*R26;
    double R104 = R100*R26 + R102*R21;
    double R105 = R10*(-R101 + R103) + R104*R31 - R8;
    double R106 = panel_straw0z - wire_z;
    double R107 = 2*R106;
    double R108 = 1.0*R76;
    double R109 = 1.0*R78;
    double R110 = R10*(-R108 + R109);
    double R111 = R31*(1.0*R80 + 1.0*R81);
    double R112 = R110 + R111 + 1.0*R74;
    double R113 = R112*R55;
    double R114 = 2*R96;
    double R115 = R73*(1.0*R35 + 1.0*R38);
    double R116 = R108 - R109;
    double R117 = R116*R41;
    double R118 = R82*(-1.0*R42 + 1.0*R44);
    double R119 = R73*(-1.0*R43 + 1.0*R47);
    double R120 = R116*R50;
    double R121 = R82*(1.0*R37 + 1.0*R51);
    double R122 = (-1.0/2.0*R33*(2*R110 + 2*R111 + 2.0*R74) - 1.0/2.0*R46*(2*R115 + 2*R117 + 2*R118) - 1.0/2.0*R53*(2*R119 + 2*R120 + 2*R121))/pow(R54, 3.0/2.0);
    double R123 = R122*R33;
    double R124 = R1*R113;
    double R125 = R55*(R119 + R120 + R121);
    double R126 = R0*R125;
    double R127 = R115 + R117 + R118;
    double R128 = R127*R55;
    double R129 = R128*R58;
    double R130 = R1*R123;
    double R131 = R122*R53;
    double R132 = R0*R131;
    double R133 = R122*R46;
    double R134 = R133*R58;
    double R135 = 2*R60*(2*R124 - 2*R126 + 2*R129 + 2*R130 - 2*R132 + 2*R134)/pow(R61, 2);
    double R136 = R135*R93;
    double R137 = R135*R95;
    double R138 = R124 - R126 + R129 + R130 - R132 + R134;
    double R139 = R105*R106;
    double R140 = R101 - R103;
    double R141 = R106*(R104*R52 + R140*R50 - R49);
    double R142 = R104*R45 + R140*R41 - R40;
    double R143 = R106*R142;
    double R144 = R0*R141 - R1*R139 - R143*R58;
    double R145 = R112*R84 + R123*R83 + R125*R85 + R127*R87 + R131*R85 + R133*R86 + R139*R56 + R141*R57 + R143*R59;
    double R146 = 2*R62;
    double R147 = R146*(R138*R92 + R144*R60 + R145);
    double R148 = R146*(R138*R88 + R144 + R145*R60);
    double R149 = ((1.0/2.0)*R97*(R1*R136 + R1*R148 + R105*R107 - R113*R114 - R114*R123 - R137*R56 - R147*R56) + (1.0/2.0)*R98*(-R0*R136 - R0*R148 - R114*R125 - R114*R131 - R137*R57 + 2*R141 - R147*R57) + (1.0/2.0)*R99*(R107*R142 - R114*R128 - R114*R133 + R136*R58 - R137*R59 - R147*R59 + R148*R58))/sqrt(pow(R97, 2) + pow(R98, 2) + pow(R99, 2));
    double R150 = R46 + R53*a1;
    double R151 = R28 - R32 - R53*b1 - R9;
    double R152 = -R33*a1 + R46*b1;
    double R153 = pow(pow(R150, 2) + pow(R151, 2) + pow(R152, 2), -1.0/2.0);
    double result = ((R150*R153*R83 + R151*R153*R86 + R152*R153*R85 > 0) ? (
   -R149
)
: (
   R149
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_b(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(panel_b);
    double R3 = cos(plane_a);
    double R4 = cos(plane_b);
    double R5 = R3*R4;
    double R6 = R2*R5;
    double R7 = sin(panel_a);
    double R8 = 1.0*R7;
    double R9 = R6*R8;
    double R10 = sin(plane_b);
    double R11 = sin(panel_g);
    double R12 = cos(panel_a);
    double R13 = R11*R12;
    double R14 = sin(panel_b);
    double R15 = cos(panel_g);
    double R16 = R15*R7;
    double R17 = -R13 + R14*R16;
    double R18 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R19 = 1.0/R18;
    double R20 = R19*panel_straw0x;
    double R21 = R12*R15;
    double R22 = R11*R7;
    double R23 = R14*R22 + R21;
    double R24 = R19*panel_straw0y;
    double R25 = 1.0*R17*R20 - 1.0*R23*R24;
    double R26 = R10*R25;
    double R27 = 1.0*R17*R24 + 1.0*R20*R23;
    double R28 = sin(plane_a);
    double R29 = R28*R4;
    double R30 = R27*R29;
    double R31 = -R26 + R30 + R9;
    double R32 = sin(plane_g);
    double R33 = R28*R32;
    double R34 = cos(plane_g);
    double R35 = R3*R34;
    double R36 = R10*R35;
    double R37 = R33 + R36;
    double R38 = R2*R8;
    double R39 = R34*R4;
    double R40 = R3*R32;
    double R41 = R28*R34;
    double R42 = R10*R41;
    double R43 = -R40 + R42;
    double R44 = R25*R39 + R27*R43 + R37*R38;
    double R45 = R10*R40;
    double R46 = -R41 + R45;
    double R47 = R32*R4;
    double R48 = R10*R33;
    double R49 = R35 + R48;
    double R50 = R25*R47 + R27*R49 + R38*R46;
    double R51 = pow(R31, 2) + pow(R44, 2) + pow(R50, 2);
    double R52 = pow(R51, -1.0/2.0);
    double R53 = R31*R52;
    double R54 = R50*R52;
    double R55 = R44*R52;
    double R56 = R0*a1;
    double R57 = -R0*R54 + R1*R53 + R55*R56;
    double R58 = 1.0 - pow(R57, 2);
    double R59 = 1.0/R58;
    double R60 = -plane_z;
    double R61 = R60 + panel_dz + panel_straw0z;
    double R62 = R20*panel_dx - R24*panel_dy + panel_straw0x;
    double R63 = R20*panel_dy + R24*panel_dx + panel_straw0y;
    double R64 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R65 = -R18 + R64;
    double R66 = R14*R5;
    double R67 = R2*R20;
    double R68 = R2*R24;
    double R69 = -R11*R68 + R15*R67;
    double R70 = R11*R67 + R15*R68;
    double R71 = -panel_straw0z + wire_z;
    double R72 = R12*R2;
    double R73 = R14*R21 + R22;
    double R74 = R13*R14 - R16;
    double R75 = R20*R73 - R24*R74;
    double R76 = R20*R74 + R24*R73;
    double R77 = R10*R62 - R29*R63 - R5*R61 + R60 - R65*(-R10*R69 + R29*R70 - R66) - R71*(-R10*R75 + R29*R76 + R5*R72) + b0 - plane_dz;
    double R78 = R14*R46;
    double R79 = -R46*R61 - R47*R62 - R49*R63 - R65*(R47*R69 + R49*R70 - R78) - R71*(R46*R72 + R47*R75 + R49*R76) - plane_dy;
    double R80 = R14*R37;
    double R81 = -R37*R61 - R39*R62 - R43*R63 - R65*(R39*R69 + R43*R70 - R80) - R71*(R37*R72 + R39*R75 + R43*R76) + a0 - plane_dx;
    double R82 = R53*R77 + R54*R79 + R55*R81;
    double R83 = R1*R77;
    double R84 = R0*R79;
    double R85 = R56*R81;
    double R86 = -R83 + R84 - R85;
    double R87 = R57*R82 + R86;
    double R88 = R59*R87;
    double R89 = -R57*(R83 - R84 + R85) + R82;
    double R90 = R59*R89;
    double R91 = R1*R88 - R53*R90 + R77;
    double R92 = -R0*R88 - R54*R90 + R79;
    double R93 = -R55*R90 + R56*R88 + R81;
    double R94 = panel_straw0z - wire_z;
    double R95 = R13*R68;
    double R96 = R21*R67;
    double R97 = R13*R67 + R21*R68;
    double R98 = R94*(R10*(R95 - R96) - R12*R66 + R29*R97);
    double R99 = R18 - R64;
    double R100 = R14*R15;
    double R101 = R100*R20;
    double R102 = R11*R14;
    double R103 = R102*R24;
    double R104 = -R100*R24 - R102*R20;
    double R105 = R99*(R10*(R101 - R103) + R104*R29 - R6);
    double R106 = 1.0*R16*R67;
    double R107 = 1.0*R22*R68;
    double R108 = R10*(-R106 + R107);
    double R109 = R22*R67;
    double R110 = R16*R68;
    double R111 = R29*(1.0*R109 + 1.0*R110);
    double R112 = R52*(R108 + R111 - R66*R8);
    double R113 = 2*R90;
    double R114 = R14*R7;
    double R115 = R114*(1.0*R33 + 1.0*R36);
    double R116 = R106 - R107;
    double R117 = R116*R39;
    double R118 = R109 + R110;
    double R119 = R118*(-1.0*R40 + 1.0*R42);
    double R120 = R114*(-1.0*R41 + 1.0*R45);
    double R121 = R116*R47;
    double R122 = R118*(1.0*R35 + 1.0*R48);
    double R123 = (-1.0/2.0*R31*(2*R108 + 2*R111 - 2.0*R66*R7) - 1.0/2.0*R44*(-2*R115 + 2*R117 + 2*R119) - 1.0/2.0*R50*(-2*R120 + 2*R121 + 2*R122))/pow(R51, 3.0/2.0);
    double R124 = R123*R31;
    double R125 = R1*R112;
    double R126 = R52*(-R120 + R121 + R122);
    double R127 = R0*R126;
    double R128 = R52*(-R115 + R117 + R119);
    double R129 = R128*R56;
    double R130 = R1*R124;
    double R131 = R123*R50;
    double R132 = R0*R131;
    double R133 = R123*R44;
    double R134 = R133*R56;
    double R135 = 2*R57*(2*R125 - 2*R127 + 2*R129 + 2*R130 - 2*R132 + 2*R134)/pow(R58, 2);
    double R136 = R135*R87;
    double R137 = R135*R89;
    double R138 = R105 + R98;
    double R139 = -R95 + R96;
    double R140 = R94*(-R12*R78 + R139*R47 + R49*R97);
    double R141 = -R101 + R103;
    double R142 = R99*(R104*R49 + R141*R47 + R2*(R41 - R45));
    double R143 = R140 + R142;
    double R144 = R94*(-R12*R80 + R139*R39 + R43*R97);
    double R145 = R99*(R104*R43 + R141*R39 + R2*(-R33 - R36));
    double R146 = R144 + R145;
    double R147 = R0*R143 - R1*R138 - R146*R56;
    double R148 = R125 - R127 + R129 + R130 - R132 + R134;
    double R149 = R112*R77 + R124*R77 + R126*R79 + R128*R81 + R131*R79 + R133*R81 + R138*R53 + R143*R54 + R146*R55;
    double R150 = 2*R59;
    double R151 = R150*(R147*R57 + R148*R86 + R149);
    double R152 = R150*(R147 + R148*R82 + R149*R57);
    double R153 = ((1.0/2.0)*R91*(R1*R136 + R1*R152 + 2*R105 - R112*R113 - R113*R124 - R137*R53 - R151*R53 + 2*R98) + (1.0/2.0)*R92*(-R0*R136 - R0*R152 - R113*R126 - R113*R131 - R137*R54 + 2*R140 + 2*R142 - R151*R54) + (1.0/2.0)*R93*(-R113*R128 - R113*R133 + R136*R56 - R137*R55 + 2*R144 + 2*R145 - R151*R55 + R152*R56))/sqrt(pow(R91, 2) + pow(R92, 2) + pow(R93, 2));
    double R154 = R44 + R50*a1;
    double R155 = R26 - R30 - R50*b1 - R9;
    double R156 = -R31*a1 + R44*b1;
    double R157 = pow(pow(R154, 2) + pow(R155, 2) + pow(R156, 2), -1.0/2.0);
    double result = ((R154*R157*R77 + R155*R157*R81 + R156*R157*R79 > 0) ? (
   -R153
)
: (
   R153
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_g(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = pow(pow(a1, 2) + pow(b1, 2) + 1, -1.0/2.0);
    double R1 = R0*b1;
    double R2 = cos(plane_a);
    double R3 = cos(plane_b);
    double R4 = R2*R3;
    double R5 = sin(panel_a);
    double R6 = cos(panel_b);
    double R7 = 1.0*R5*R6;
    double R8 = R4*R7;
    double R9 = sin(plane_b);
    double R10 = sin(panel_g);
    double R11 = cos(panel_a);
    double R12 = R10*R11;
    double R13 = sin(panel_b);
    double R14 = cos(panel_g);
    double R15 = R14*R5;
    double R16 = -R12 + R13*R15;
    double R17 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R18 = 1.0/R17;
    double R19 = R18*panel_straw0x;
    double R20 = R16*R19;
    double R21 = R11*R14;
    double R22 = R10*R5;
    double R23 = R13*R22;
    double R24 = R21 + R23;
    double R25 = R18*panel_straw0y;
    double R26 = 1.0*R20 - 1.0*R24*R25;
    double R27 = R26*R9;
    double R28 = R16*R25;
    double R29 = 1.0*R19*R24 + 1.0*R28;
    double R30 = sin(plane_a);
    double R31 = R3*R30;
    double R32 = R29*R31;
    double R33 = -R27 + R32 + R8;
    double R34 = sin(plane_g);
    double R35 = R30*R34;
    double R36 = cos(plane_g);
    double R37 = R2*R36;
    double R38 = R35 + R37*R9;
    double R39 = R3*R36;
    double R40 = R2*R34;
    double R41 = R30*R36;
    double R42 = R41*R9;
    double R43 = -R40 + R42;
    double R44 = R26*R39 + R29*R43 + R38*R7;
    double R45 = R40*R9 - R41;
    double R46 = R3*R34;
    double R47 = R35*R9;
    double R48 = R37 + R47;
    double R49 = R26*R46 + R29*R48 + R45*R7;
    double R50 = pow(R33, 2) + pow(R44, 2) + pow(R49, 2);
    double R51 = pow(R50, -1.0/2.0);
    double R52 = R33*R51;
    double R53 = R49*R51;
    double R54 = R44*R51;
    double R55 = R0*a1;
    double R56 = -R0*R53 + R1*R52 + R54*R55;
    double R57 = 1.0 - pow(R56, 2);
    double R58 = 1.0/R57;
    double R59 = -plane_z;
    double R60 = R59 + panel_dz + panel_straw0z;
    double R61 = R19*panel_dx - R25*panel_dy + panel_straw0x;
    double R62 = R19*panel_dy + R25*panel_dx + panel_straw0y;
    double R63 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R64 = -R17 + R63;
    double R65 = R19*R6;
    double R66 = R25*R6;
    double R67 = -R10*R66 + R14*R65;
    double R68 = R10*R65;
    double R69 = R14*R66;
    double R70 = R68 + R69;
    double R71 = -panel_straw0z + wire_z;
    double R72 = R11*R6;
    double R73 = R13*R21 + R22;
    double R74 = R19*R73;
    double R75 = R12*R13;
    double R76 = -R15 + R75;
    double R77 = -R25*R76 + R74;
    double R78 = R25*R73;
    double R79 = R19*R76 + R78;
    double R80 = -R31*R62 - R4*R60 + R59 + R61*R9 - R64*(-R13*R4 + R31*R70 - R67*R9) - R71*(R31*R79 + R4*R72 - R77*R9) + b0 - plane_dz;
    double R81 = -R45*R60 - R46*R61 - R48*R62 - R64*(-R13*R45 + R46*R67 + R48*R70) - R71*(R45*R72 + R46*R77 + R48*R79) - plane_dy;
    double R82 = -R38*R60 - R39*R61 - R43*R62 - R64*(-R13*R38 + R39*R67 + R43*R70) - R71*(R38*R72 + R39*R77 + R43*R79) + a0 - plane_dx;
    double R83 = R52*R80 + R53*R81 + R54*R82;
    double R84 = R1*R80;
    double R85 = R0*R81;
    double R86 = R55*R82;
    double R87 = -R84 + R85 - R86;
    double R88 = R56*R83 + R87;
    double R89 = R58*R88;
    double R90 = -R56*(R84 - R85 + R86) + R83;
    double R91 = R58*R90;
    double R92 = R1*R89 - R52*R91 + R80;
    double R93 = -R0*R89 - R53*R91 + R81;
    double R94 = -R54*R91 + R55*R89 + R82;
    double R95 = R17 - R63;
    double R96 = R95*(R31*R67 + R70*R9);
    double R97 = panel_straw0z - wire_z;
    double R98 = R15 - R75;
    double R99 = R19*R98;
    double R100 = R25*R98 + R74;
    double R101 = R97*(R100*R31 + R9*(R78 - R99));
    double R102 = 1.0*R28;
    double R103 = -R21 - R23;
    double R104 = 1.0*R103*R19;
    double R105 = R9*(R102 - R104);
    double R106 = R103*R25;
    double R107 = R31*(1.0*R106 + 1.0*R20);
    double R108 = R51*(R105 + R107);
    double R109 = 2*R91;
    double R110 = -R102 + R104;
    double R111 = R110*R46;
    double R112 = R106 + R20;
    double R113 = R112*(1.0*R37 + 1.0*R47);
    double R114 = R110*R39;
    double R115 = R112*(-1.0*R40 + 1.0*R42);
    double R116 = (-1.0/2.0*R33*(2*R105 + 2*R107) - 1.0/2.0*R44*(2*R114 + 2*R115) - 1.0/2.0*R49*(2*R111 + 2*R113))/pow(R50, 3.0/2.0);
    double R117 = R116*R33;
    double R118 = R1*R108;
    double R119 = R51*(R111 + R113);
    double R120 = R0*R119;
    double R121 = R51*(R114 + R115);
    double R122 = R121*R55;
    double R123 = R1*R117;
    double R124 = R116*R49;
    double R125 = R0*R124;
    double R126 = R116*R44;
    double R127 = R126*R55;
    double R128 = 2*R56*(2*R118 - 2*R120 + 2*R122 + 2*R123 - 2*R125 + 2*R127)/pow(R57, 2);
    double R129 = R128*R88;
    double R130 = R128*R90;
    double R131 = R101 + R96;
    double R132 = -R68 - R69;
    double R133 = R95*(R132*R46 + R48*R67);
    double R134 = -R78 + R99;
    double R135 = R97*(R100*R48 + R134*R46);
    double R136 = R133 + R135;
    double R137 = R95*(R132*R39 + R43*R67);
    double R138 = R97*(R100*R43 + R134*R39);
    double R139 = R137 + R138;
    double R140 = R0*R136 - R1*R131 - R139*R55;
    double R141 = R118 - R120 + R122 + R123 - R125 + R127;
    double R142 = R108*R80 + R117*R80 + R119*R81 + R121*R82 + R124*R81 + R126*R82 + R131*R52 + R136*R53 + R139*R54;
    double R143 = 2*R58;
    double R144 = R143*(R140*R56 + R141*R87 + R142);
    double R145 = R143*(R140 + R141*R83 + R142*R56);
    double R146 = ((1.0/2.0)*R92*(R1*R129 + R1*R145 + 2*R101 - R108*R109 - R109*R117 - R130*R52 - R144*R52 + 2*R96) + (1.0/2.0)*R93*(-R0*R129 - R0*R145 - R109*R119 - R109*R124 - R130*R53 + 2*R133 + 2*R135 - R144*R53) + (1.0/2.0)*R94*(-R109*R121 - R109*R126 + R129*R55 - R130*R54 + 2*R137 + 2*R138 - R144*R54 + R145*R55))/sqrt(pow(R92, 2) + pow(R93, 2) + pow(R94, 2));
    double R147 = R44 + R49*a1;
    double R148 = R27 - R32 - R49*b1 - R8;
    double R149 = -R33*a1 + R44*b1;
    double R150 = pow(pow(R147, 2) + pow(R148, 2) + pow(R149, 2), -1.0/2.0);
    double result = ((R147*R150*R80 + R148*R150*R82 + R149*R150*R81 > 0) ? (
   -R146
)
: (
   R146
))/driftvel;
    return result;
}


std::vector<double> CosmicTrack_DCA_LocalDeriv(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
        std::vector<double> result = {CosmicTrack_DCA_Deriv_a0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_b0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_a1(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_b1(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_t0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel)};
return result;
}

std::vector<double> CosmicTrack_DCA_GlobalDeriv(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
        std::vector<double> result = {CosmicTrack_DCA_Deriv_plane_dx(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_dy(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_dz(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_a(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_b(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_g(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dx(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dy(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dz(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_a(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_b(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_g(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel)};
return result;
}

