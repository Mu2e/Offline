

# include "TrackerAlignment/inc/AlignmentDerivatives.hh"
# include <math.h>
# include <vector>

double CosmicTrack_DCA(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = pow(R44, -1.0/2.0);
    double R46 = R25*R45;
    double R47 = 1.0/R44;
    double R48 = pow(R42*R47 + R43*R47 + R47, -1.0/2.0);
    double R49 = R40*R48;
    double R50 = R39*R40;
    double R51 = R45*R48;
    double R52 = R35*R45;
    double R53 = R46*R49*b1 + R49*R52*a1 - R50*R51;
    double R54 = 1.0/(1.0 - pow(R53, 2));
    double R55 = -plane_z;
    double R56 = R55 + panel_dz + panel_straw0z;
    double R57 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R58 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R59 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R60 = R16*R4;
    double R61 = R20*R4;
    double R62 = R11*R60 - R61*R7;
    double R63 = R11*R61 + R60*R7;
    double R64 = -panel_straw0z + wire_z;
    double R65 = R4*R8;
    double R66 = R10*R17 + R18;
    double R67 = R10*R9 - R12;
    double R68 = R16*R66 - R20*R67;
    double R69 = R16*R67 + R20*R66;
    double R70 = -R2*R56 - R24*R58 + R55 + R57*R6 - R59*(-R10*R2 + R24*R63 - R6*R62) - R64*(R2*R65 + R24*R69 - R6*R68) + b0 - plane_dz;
    double R71 = R51*b1;
    double R72 = R70*R71;
    double R73 = -R36*R56 - R37*R57 - R38*R58 - R59*(-R10*R36 + R37*R62 + R38*R63) - R64*(R36*R65 + R37*R68 + R38*R69) - plane_dy;
    double R74 = R51*R73;
    double R75 = -R30*R56 - R31*R57 - R34*R58 - R59*(-R10*R30 + R31*R62 + R34*R63) - R64*(R30*R65 + R31*R68 + R34*R69) + a0 - plane_dx;
    double R76 = R51*a1;
    double R77 = R75*R76;
    double R78 = R35*R40;
    double R79 = R41*R70 + R50*R73 + R75*R78;
    double R80 = R54*(-R53*(R72 - R74 + R77) + R79);
    double R81 = R54*(R53*R79 - R72 + R74 - R77);
    double R82 = sqrt(pow(R75 + R76*R81 - R78*R80, 2) + pow(-R41*R80 + R70 + R71*R81, 2) + pow(-R50*R80 - R51*R81 + R73, 2));
    double R83 = R39*R45;
    double R84 = R52 + R83*a1;
    double R85 = -R46*a1 + R52*b1;
    double R86 = -R46 - R83*b1;
    double R87 = pow(pow(R84, 2) + pow(R85, 2) + pow(R86, 2), -1.0/2.0);
    double result = ((R70*R84*R87 + R73*R85*R87 + R75*R86*R87 > 0) ? (
   -R82
)
: (
   R82
));
    return result;
}


double CosmicTrack_DCAalignpos_x(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(plane_a);
    double R1 = sin(plane_g);
    double R2 = cos(plane_a);
    double R3 = cos(plane_g);
    double R4 = R3*sin(plane_b);
    double R5 = R0*R1 + R2*R4;
    double R6 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R7 = 1.0/R6;
    double R8 = R7*panel_straw0x;
    double R9 = R7*panel_straw0y;
    double R10 = R3*cos(plane_b);
    double R11 = R0*R4 - R1*R2;
    double R12 = sin(panel_b);
    double R13 = cos(panel_g);
    double R14 = cos(panel_b);
    double R15 = R14*R8;
    double R16 = sin(panel_g);
    double R17 = R14*R9;
    double R18 = cos(panel_a);
    double R19 = sin(panel_a);
    double R20 = R12*R18;
    double R21 = R13*R20 + R16*R19;
    double R22 = -R13*R19 + R16*R20;
    double result = R10*(R8*panel_dx - R9*panel_dy + panel_straw0x) + R11*(R8*panel_dy + R9*panel_dx + panel_straw0y) + R5*(panel_dz + panel_straw0z - plane_z) + plane_dx + (-R6 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(R10*(R13*R15 - R16*R17) + R11*(R13*R17 + R15*R16) - R12*R5) + (-panel_straw0z + wire_z)*(R10*(R21*R8 - R22*R9) + R11*(R21*R9 + R22*R8) + R14*R18*R5);
    return result;
}


double CosmicTrack_DCAalignpos_y(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(plane_a);
    double R1 = cos(plane_g);
    double R2 = cos(plane_a);
    double R3 = sin(plane_g);
    double R4 = R3*sin(plane_b);
    double R5 = -R0*R1 + R2*R4;
    double R6 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R7 = 1.0/R6;
    double R8 = R7*panel_straw0x;
    double R9 = R7*panel_straw0y;
    double R10 = R3*cos(plane_b);
    double R11 = R0*R4 + R1*R2;
    double R12 = sin(panel_b);
    double R13 = cos(panel_g);
    double R14 = cos(panel_b);
    double R15 = R14*R8;
    double R16 = sin(panel_g);
    double R17 = R14*R9;
    double R18 = cos(panel_a);
    double R19 = sin(panel_a);
    double R20 = R12*R18;
    double R21 = R13*R20 + R16*R19;
    double R22 = -R13*R19 + R16*R20;
    double result = R10*(R8*panel_dx - R9*panel_dy + panel_straw0x) + R11*(R8*panel_dy + R9*panel_dx + panel_straw0y) + R5*(panel_dz + panel_straw0z - plane_z) + plane_dy + (-R6 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(R10*(R13*R15 - R16*R17) + R11*(R13*R17 + R15*R16) - R12*R5) + (-panel_straw0z + wire_z)*(R10*(R21*R8 - R22*R9) + R11*(R21*R9 + R22*R8) + R14*R18*R5);
    return result;
}


double CosmicTrack_DCAalignpos_z(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = cos(plane_b);
    double R1 = R0*cos(plane_a);
    double R2 = sin(plane_b);
    double R3 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R4 = 1.0/R3;
    double R5 = R4*panel_straw0x;
    double R6 = R4*panel_straw0y;
    double R7 = R0*sin(plane_a);
    double R8 = sin(panel_b);
    double R9 = cos(panel_g);
    double R10 = cos(panel_b);
    double R11 = R10*R5;
    double R12 = sin(panel_g);
    double R13 = R10*R6;
    double R14 = cos(panel_a);
    double R15 = sin(panel_a);
    double R16 = R14*R8;
    double R17 = R12*R15 + R16*R9;
    double R18 = R12*R16 - R15*R9;
    double result = R1*(panel_dz + panel_straw0z - plane_z) - R2*(R5*panel_dx - R6*panel_dy + panel_straw0x) + R7*(R5*panel_dy + R6*panel_dx + panel_straw0y) + plane_dz + plane_z + (-R3 + sqrt(pow(wire_x, 2) + pow(wire_y, 2)))*(-R1*R8 - R2*(R11*R9 - R12*R13) + R7*(R11*R12 + R13*R9)) + (-panel_straw0z + wire_z)*(R1*R10*R14 - R2*(R17*R5 - R18*R6) + R7*(R17*R6 + R18*R5));
    return result;
}


double CosmicTrack_DCAaligndir_x(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = sin(plane_a);
    double R2 = sin(plane_g);
    double R3 = cos(plane_a);
    double R4 = cos(plane_g);
    double R5 = R4*sin(plane_b);
    double R6 = sin(panel_g);
    double R7 = cos(panel_a);
    double R8 = cos(panel_g);
    double R9 = R0*sin(panel_b);
    double R10 = -R6*R7 + R8*R9;
    double R11 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R12 = R11*panel_straw0x;
    double R13 = R6*R9 + R7*R8;
    double R14 = R11*panel_straw0y;
    double result = 1.0*R0*(R1*R2 + R3*R5)*cos(panel_b) + 1.0*R4*(R10*R12 - R13*R14)*cos(plane_b) + 1.0*(R1*R5 - R2*R3)*(R10*R14 + R12*R13);
    return result;
}


double CosmicTrack_DCAaligndir_y(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = sin(plane_a);
    double R2 = cos(plane_g);
    double R3 = cos(plane_a);
    double R4 = sin(plane_g);
    double R5 = R4*sin(plane_b);
    double R6 = sin(panel_g);
    double R7 = cos(panel_a);
    double R8 = cos(panel_g);
    double R9 = R0*sin(panel_b);
    double R10 = -R6*R7 + R8*R9;
    double R11 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R12 = R11*panel_straw0x;
    double R13 = R6*R9 + R7*R8;
    double R14 = R11*panel_straw0y;
    double result = 1.0*R0*(-R1*R2 + R3*R5)*cos(panel_b) + 1.0*R4*(R10*R12 - R13*R14)*cos(plane_b) + 1.0*(R1*R5 + R2*R3)*(R10*R14 + R12*R13);
    return result;
}


double CosmicTrack_DCAaligndir_z(double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z)
{
    double R0 = sin(panel_a);
    double R1 = 1.0*cos(plane_b);
    double R2 = sin(panel_g);
    double R3 = cos(panel_a);
    double R4 = cos(panel_g);
    double R5 = R0*sin(panel_b);
    double R6 = -R2*R3 + R4*R5;
    double R7 = pow(pow(panel_straw0x, 2) + pow(panel_straw0y, 2), -1.0/2.0);
    double R8 = R7*panel_straw0x;
    double R9 = R2*R5 + R3*R4;
    double R10 = R7*panel_straw0y;
    double result = R0*R1*cos(panel_b)*cos(plane_a) + R1*(R10*R6 + R8*R9)*sin(plane_a) - 1.0*(-R10*R9 + R6*R8)*sin(plane_b);
    return result;
}


double CosmicTrack_DCA_Deriv_a0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = 1.0/R44;
    double R46 = pow(R42*R45 + R43*R45 + R45, -1.0/2.0);
    double R47 = pow(R44, -1.0/2.0);
    double R48 = R25*R47;
    double R49 = R39*R40;
    double R50 = R46*R47;
    double R51 = R35*R40;
    double R52 = R50*a1;
    double R53 = R40*R46*R48*b1 - R49*R50 + R51*R52;
    double R54 = 1.0/(1.0 - pow(R53, 2));
    double R55 = -plane_z;
    double R56 = R55 + panel_dz + panel_straw0z;
    double R57 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R58 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R59 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R60 = R16*R4;
    double R61 = R20*R4;
    double R62 = R11*R60 - R61*R7;
    double R63 = R11*R61 + R60*R7;
    double R64 = -panel_straw0z + wire_z;
    double R65 = R4*R8;
    double R66 = R10*R17 + R18;
    double R67 = R10*R9 - R12;
    double R68 = R16*R66 - R20*R67;
    double R69 = R16*R67 + R20*R66;
    double R70 = -R2*R56 - R24*R58 + R55 + R57*R6 - R59*(-R10*R2 + R24*R63 - R6*R62) - R64*(R2*R65 + R24*R69 - R6*R68) + b0 - plane_dz;
    double R71 = R50*b1;
    double R72 = R70*R71;
    double R73 = -R36*R56 - R37*R57 - R38*R58 - R59*(-R10*R36 + R37*R62 + R38*R63) - R64*(R36*R65 + R37*R68 + R38*R69) - plane_dy;
    double R74 = R50*R73;
    double R75 = -R30*R56 - R31*R57 - R34*R58 - R59*(-R10*R30 + R31*R62 + R34*R63) - R64*(R30*R65 + R31*R68 + R34*R69) + a0 - plane_dx;
    double R76 = R52*R75;
    double R77 = R41*R70 + R49*R73 + R51*R75;
    double R78 = R54*(-R53*(R72 - R74 + R76) + R77);
    double R79 = R54*(R53*R77 - R72 + R74 - R76);
    double R80 = -R41*R78 + R70 + R71*R79;
    double R81 = -R49*R78 - R50*R79 + R73;
    double R82 = -R51*R78 + R52*R79 + R75;
    double R83 = 2*R54;
    double R84 = R83*(R51*R53 - R52);
    double R85 = R83*(R51 - R52*R53);
    double R86 = ((1.0/2.0)*R80*(-R41*R85 + R71*R84) + (1.0/2.0)*R81*(-R49*R85 - R50*R84) + (1.0/2.0)*R82*(-R51*R85 + R52*R84 + 2))/sqrt(pow(R80, 2) + pow(R81, 2) + pow(R82, 2));
    double R87 = R35*R47;
    double R88 = R39*R47;
    double R89 = R87 + R88*a1;
    double R90 = -R48*a1 + R87*b1;
    double R91 = -R48 - R88*b1;
    double R92 = pow(pow(R89, 2) + pow(R90, 2) + pow(R91, 2), -1.0/2.0);
    double result = ((R70*R89*R92 + R73*R90*R92 + R75*R91*R92 > 0) ? (
   -R86
)
: (
   R86
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_b0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = pow(R44, -1.0/2.0);
    double R46 = 1.0/R44;
    double R47 = pow(R42*R46 + R43*R46 + R46, -1.0/2.0);
    double R48 = R45*R47;
    double R49 = R48*b1;
    double R50 = R39*R40;
    double R51 = R35*R45;
    double R52 = R40*R47*R51*a1 + R41*R49 - R48*R50;
    double R53 = 1.0/(1.0 - pow(R52, 2));
    double R54 = -plane_z;
    double R55 = R54 + panel_dz + panel_straw0z;
    double R56 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R57 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R58 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R59 = R16*R4;
    double R60 = R20*R4;
    double R61 = R11*R59 - R60*R7;
    double R62 = R11*R60 + R59*R7;
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = -R2*R55 - R24*R57 + R54 + R56*R6 - R58*(-R10*R2 + R24*R62 - R6*R61) - R63*(R2*R64 + R24*R68 - R6*R67) + b0 - plane_dz;
    double R70 = R49*R69;
    double R71 = -R36*R55 - R37*R56 - R38*R57 - R58*(-R10*R36 + R37*R61 + R38*R62) - R63*(R36*R64 + R37*R67 + R38*R68) - plane_dy;
    double R72 = R48*R71;
    double R73 = -R30*R55 - R31*R56 - R34*R57 - R58*(-R10*R30 + R31*R61 + R34*R62) - R63*(R30*R64 + R31*R67 + R34*R68) + a0 - plane_dx;
    double R74 = R48*a1;
    double R75 = R73*R74;
    double R76 = R35*R40;
    double R77 = R41*R69 + R50*R71 + R73*R76;
    double R78 = R53*(-R52*(R70 - R72 + R75) + R77);
    double R79 = R53*(R52*R77 - R70 + R72 - R75);
    double R80 = -R41*R78 + R49*R79 + R69;
    double R81 = -R48*R79 - R50*R78 + R71;
    double R82 = R73 + R74*R79 - R76*R78;
    double R83 = 2*R53;
    double R84 = R83*(R41*R52 - R49);
    double R85 = R83*(R41 - R49*R52);
    double R86 = ((1.0/2.0)*R80*(-R41*R85 + R49*R84 + 2) + (1.0/2.0)*R81*(-R48*R84 - R50*R85) + (1.0/2.0)*R82*(R74*R84 - R76*R85))/sqrt(pow(R80, 2) + pow(R81, 2) + pow(R82, 2));
    double R87 = R39*R45;
    double R88 = R51 + R87*a1;
    double R89 = R25*R45;
    double R90 = R51*b1 - R89*a1;
    double R91 = -R87*b1 - R89;
    double R92 = pow(pow(R88, 2) + pow(R90, 2) + pow(R91, 2), -1.0/2.0);
    double result = ((R69*R88*R92 + R71*R90*R92 + R73*R91*R92 > 0) ? (
   -R86
)
: (
   R86
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_a1(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = 1.0/R44;
    double R46 = R42*R45 + R43*R45 + R45;
    double R47 = pow(R46, -1.0/2.0);
    double R48 = R40*R47;
    double R49 = pow(R44, -1.0/2.0);
    double R50 = R25*R49;
    double R51 = R50*b1;
    double R52 = R39*R40;
    double R53 = R47*R49;
    double R54 = R35*R49;
    double R55 = R48*R54;
    double R56 = R48*R51 - R52*R53 + R55*a1;
    double R57 = 1.0 - pow(R56, 2);
    double R58 = 1.0/R57;
    double R59 = -plane_z;
    double R60 = R59 + panel_dz + panel_straw0z;
    double R61 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R62 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R63 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R64 = R16*R4;
    double R65 = R20*R4;
    double R66 = R11*R64 - R65*R7;
    double R67 = R11*R65 + R64*R7;
    double R68 = -panel_straw0z + wire_z;
    double R69 = R4*R8;
    double R70 = R10*R17 + R18;
    double R71 = R10*R9 - R12;
    double R72 = R16*R70 - R20*R71;
    double R73 = R16*R71 + R20*R70;
    double R74 = -R2*R60 - R24*R62 + R59 + R6*R61 - R63*(-R10*R2 + R24*R67 - R6*R66) - R68*(R2*R69 + R24*R73 - R6*R72) + b0 - plane_dz;
    double R75 = R53*b1;
    double R76 = R74*R75;
    double R77 = -R36*R60 - R37*R61 - R38*R62 - R63*(-R10*R36 + R37*R66 + R38*R67) - R68*(R36*R69 + R37*R72 + R38*R73) - plane_dy;
    double R78 = R53*R77;
    double R79 = -R30*R60 - R31*R61 - R34*R62 - R63*(-R10*R30 + R31*R66 + R34*R67) - R68*(R30*R69 + R31*R72 + R34*R73) + a0 - plane_dx;
    double R80 = R53*R79;
    double R81 = R80*a1;
    double R82 = R35*R40;
    double R83 = R41*R74 + R52*R77 + R79*R82;
    double R84 = -R56*(R76 - R78 + R81) + R83;
    double R85 = R58*R84;
    double R86 = -R76 + R78 - R81;
    double R87 = R56*R83 + R86;
    double R88 = R58*R87;
    double R89 = -R41*R85 + R74 + R75*R88;
    double R90 = R53*R88;
    double R91 = -R52*R85 + R77 - R90;
    double R92 = R79 - R82*R85 + R90*a1;
    double R93 = R47/pow(R44, 3.0/2.0);
    double R94 = R93*a1;
    double R95 = R94*b1;
    double R96 = 2*R88;
    double R97 = pow(R44, -2);
    double R98 = R97*a1;
    double R99 = (R43*R98 - R45*a1 + R97*pow(a1, 3) + R98)/pow(R46, 3.0/2.0);
    double R100 = R49*R99;
    double R101 = R100*R96;
    double R102 = R41*R95;
    double R103 = R52*R94;
    double R104 = R42*R93;
    double R105 = R104*R82;
    double R106 = R40*R99;
    double R107 = R106*R51;
    double R108 = R100*R52;
    double R109 = R106*R54*a1;
    double R110 = -R102 + R103 - R105 + R107 - R108 + R109 + R55;
    double R111 = R74*b1;
    double R112 = R100*a1;
    double R113 = -R100*R111 + R100*R77 + R104*R79 + R111*R94 - R112*R79 - R77*R94 - R80;
    double R114 = 2*R58;
    double R115 = R114*(R110*R83 + R113);
    double R116 = R114*(R110*R86 + R113*R56);
    double R117 = 2*R56*(-2*R102 + 2*R103 - 2*R105 + 2*R107 - 2*R108 + 2*R109 + 2*R55)/pow(R57, 2);
    double R118 = R117*R87;
    double R119 = R117*R84;
    double R120 = R115*R53;
    double R121 = R118*R53;
    double R122 = ((1.0/2.0)*R89*(R101*b1 + R115*R75 - R116*R41 + R118*R75 - R119*R41 - R95*R96) + (1.0/2.0)*R91*(-R101 - R116*R52 - R119*R52 - R120 - R121 + R94*R96) + (1.0/2.0)*R92*(-R104*R96 + R112*R96 - R116*R82 - R119*R82 + R120*a1 + R121*a1 + 2*R90))/sqrt(pow(R89, 2) + pow(R91, 2) + pow(R92, 2));
    double R123 = R39*R49;
    double R124 = R123*a1 + R54;
    double R125 = -R50*a1 + R54*b1;
    double R126 = -R123*b1 - R50;
    double R127 = pow(pow(R124, 2) + pow(R125, 2) + pow(R126, 2), -1.0/2.0);
    double result = ((R124*R127*R74 + R125*R127*R77 + R126*R127*R79 > 0) ? (
   -R122
)
: (
   R122
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_b1(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = pow(R44, -1.0/2.0);
    double R46 = R25*R45;
    double R47 = 1.0/R44;
    double R48 = R42*R47 + R43*R47 + R47;
    double R49 = pow(R48, -1.0/2.0);
    double R50 = R40*R49;
    double R51 = R46*R50;
    double R52 = R39*R40;
    double R53 = R45*R49;
    double R54 = R35*R45;
    double R55 = R54*a1;
    double R56 = R50*R55 + R51*b1 - R52*R53;
    double R57 = 1.0 - pow(R56, 2);
    double R58 = 1.0/R57;
    double R59 = -plane_z;
    double R60 = R59 + panel_dz + panel_straw0z;
    double R61 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R62 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R63 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R64 = R16*R4;
    double R65 = R20*R4;
    double R66 = R11*R64 - R65*R7;
    double R67 = R11*R65 + R64*R7;
    double R68 = -panel_straw0z + wire_z;
    double R69 = R4*R8;
    double R70 = R10*R17 + R18;
    double R71 = R10*R9 - R12;
    double R72 = R16*R70 - R20*R71;
    double R73 = R16*R71 + R20*R70;
    double R74 = -R2*R60 - R24*R62 + R59 + R6*R61 - R63*(-R10*R2 + R24*R67 - R6*R66) - R68*(R2*R69 + R24*R73 - R6*R72) + b0 - plane_dz;
    double R75 = R53*R74;
    double R76 = R75*b1;
    double R77 = -R36*R60 - R37*R61 - R38*R62 - R63*(-R10*R36 + R37*R66 + R38*R67) - R68*(R36*R69 + R37*R72 + R38*R73) - plane_dy;
    double R78 = R53*R77;
    double R79 = -R30*R60 - R31*R61 - R34*R62 - R63*(-R10*R30 + R31*R66 + R34*R67) - R68*(R30*R69 + R31*R72 + R34*R73) + a0 - plane_dx;
    double R80 = R53*a1;
    double R81 = R79*R80;
    double R82 = R35*R40;
    double R83 = R41*R74 + R52*R77 + R79*R82;
    double R84 = -R56*(R76 - R78 + R81) + R83;
    double R85 = R58*R84;
    double R86 = -R76 + R78 - R81;
    double R87 = R56*R83 + R86;
    double R88 = R58*R87;
    double R89 = R53*R88;
    double R90 = -R41*R85 + R74 + R89*b1;
    double R91 = -R52*R85 + R77 - R89;
    double R92 = R79 + R80*R88 - R82*R85;
    double R93 = R49/pow(R44, 3.0/2.0);
    double R94 = R93*b1;
    double R95 = 2*R88;
    double R96 = pow(R44, -2);
    double R97 = R96*b1;
    double R98 = (R42*R97 - R47*b1 + R96*pow(b1, 3) + R97)/pow(R48, 3.0/2.0);
    double R99 = R45*R98;
    double R100 = R95*R99;
    double R101 = R43*R93;
    double R102 = R101*R41;
    double R103 = R52*R94;
    double R104 = R94*a1;
    double R105 = R104*R82;
    double R106 = R40*R98;
    double R107 = R106*R46*b1;
    double R108 = R52*R99;
    double R109 = R106*R55;
    double R110 = -R102 + R103 - R105 + R107 - R108 + R109 + R51;
    double R111 = R99*b1;
    double R112 = R79*a1;
    double R113 = R101*R74 - R111*R74 + R112*R94 - R112*R99 - R75 - R77*R94 + R77*R99;
    double R114 = 2*R58;
    double R115 = R114*(R110*R83 + R113);
    double R116 = R115*R53;
    double R117 = R114*(R110*R86 + R113*R56);
    double R118 = 2*R56*(-2*R102 + 2*R103 - 2*R105 + 2*R107 - 2*R108 + 2*R109 + 2*R51)/pow(R57, 2);
    double R119 = R118*R87;
    double R120 = R119*R53;
    double R121 = R118*R84;
    double R122 = ((1.0/2.0)*R90*(-R101*R95 + R111*R95 + R116*b1 - R117*R41 + R120*b1 - R121*R41 + 2*R89) + (1.0/2.0)*R91*(-R100 - R116 - R117*R52 - R120 - R121*R52 + R94*R95) + (1.0/2.0)*R92*(R100*a1 - R104*R95 + R115*R80 - R117*R82 + R119*R80 - R121*R82))/sqrt(pow(R90, 2) + pow(R91, 2) + pow(R92, 2));
    double R123 = R39*R45;
    double R124 = R123*a1 + R54;
    double R125 = -R46*a1 + R54*b1;
    double R126 = -R123*b1 - R46;
    double R127 = pow(pow(R124, 2) + pow(R125, 2) + pow(R126, 2), -1.0/2.0);
    double result = ((R124*R127*R74 + R125*R127*R77 + R126*R127*R79 > 0) ? (
   -R122
)
: (
   R122
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_t0(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double result = 1;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dx(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = 1.0/R44;
    double R46 = pow(R42*R45 + R43*R45 + R45, -1.0/2.0);
    double R47 = pow(R44, -1.0/2.0);
    double R48 = R25*R47;
    double R49 = R39*R40;
    double R50 = R46*R47;
    double R51 = R35*R40;
    double R52 = R50*a1;
    double R53 = R40*R46*R48*b1 - R49*R50 + R51*R52;
    double R54 = 1.0/(1.0 - pow(R53, 2));
    double R55 = -plane_z;
    double R56 = R55 + panel_dz + panel_straw0z;
    double R57 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R58 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R59 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R60 = R16*R4;
    double R61 = R20*R4;
    double R62 = R11*R60 - R61*R7;
    double R63 = R11*R61 + R60*R7;
    double R64 = -panel_straw0z + wire_z;
    double R65 = R4*R8;
    double R66 = R10*R17 + R18;
    double R67 = R10*R9 - R12;
    double R68 = R16*R66 - R20*R67;
    double R69 = R16*R67 + R20*R66;
    double R70 = -R2*R56 - R24*R58 + R55 + R57*R6 - R59*(-R10*R2 + R24*R63 - R6*R62) - R64*(R2*R65 + R24*R69 - R6*R68) + b0 - plane_dz;
    double R71 = R50*b1;
    double R72 = R70*R71;
    double R73 = -R36*R56 - R37*R57 - R38*R58 - R59*(-R10*R36 + R37*R62 + R38*R63) - R64*(R36*R65 + R37*R68 + R38*R69) - plane_dy;
    double R74 = R50*R73;
    double R75 = -R30*R56 - R31*R57 - R34*R58 - R59*(-R10*R30 + R31*R62 + R34*R63) - R64*(R30*R65 + R31*R68 + R34*R69) + a0 - plane_dx;
    double R76 = R52*R75;
    double R77 = R41*R70 + R49*R73 + R51*R75;
    double R78 = R54*(-R53*(R72 - R74 + R76) + R77);
    double R79 = R54*(R53*R77 - R72 + R74 - R76);
    double R80 = -R41*R78 + R70 + R71*R79;
    double R81 = -R49*R78 - R50*R79 + R73;
    double R82 = -R51*R78 + R52*R79 + R75;
    double R83 = 2*R54;
    double R84 = R83*(-R51*R53 + R52);
    double R85 = R83*(-R51 + R52*R53);
    double R86 = ((1.0/2.0)*R80*(-R41*R85 + R71*R84) + (1.0/2.0)*R81*(-R49*R85 - R50*R84) + (1.0/2.0)*R82*(-R51*R85 + R52*R84 - 2))/sqrt(pow(R80, 2) + pow(R81, 2) + pow(R82, 2));
    double R87 = R35*R47;
    double R88 = R39*R47;
    double R89 = R87 + R88*a1;
    double R90 = -R48*a1 + R87*b1;
    double R91 = -R48 - R88*b1;
    double R92 = pow(pow(R89, 2) + pow(R90, 2) + pow(R91, 2), -1.0/2.0);
    double result = ((R70*R89*R92 + R73*R90*R92 + R75*R91*R92 > 0) ? (
   -R86
)
: (
   R86
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dy(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = pow(R44, -1.0/2.0);
    double R46 = 1.0/R44;
    double R47 = R45/sqrt(R42*R46 + R43*R46 + R46);
    double R48 = R47*b1;
    double R49 = R39*R40;
    double R50 = R35*R40;
    double R51 = R47*a1;
    double R52 = R41*R48 - R47*R49 + R50*R51;
    double R53 = 1.0/(1.0 - pow(R52, 2));
    double R54 = -plane_z;
    double R55 = R54 + panel_dz + panel_straw0z;
    double R56 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R57 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R58 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R59 = R16*R4;
    double R60 = R20*R4;
    double R61 = R11*R59 - R60*R7;
    double R62 = R11*R60 + R59*R7;
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = -R2*R55 - R24*R57 + R54 + R56*R6 - R58*(-R10*R2 + R24*R62 - R6*R61) - R63*(R2*R64 + R24*R68 - R6*R67) + b0 - plane_dz;
    double R70 = R48*R69;
    double R71 = -R36*R55 - R37*R56 - R38*R57 - R58*(-R10*R36 + R37*R61 + R38*R62) - R63*(R36*R64 + R37*R67 + R38*R68) - plane_dy;
    double R72 = R47*R71;
    double R73 = -R30*R55 - R31*R56 - R34*R57 - R58*(-R10*R30 + R31*R61 + R34*R62) - R63*(R30*R64 + R31*R67 + R34*R68) + a0 - plane_dx;
    double R74 = R51*R73;
    double R75 = R41*R69 + R49*R71 + R50*R73;
    double R76 = R53*(-R52*(R70 - R72 + R74) + R75);
    double R77 = R53*(R52*R75 - R70 + R72 - R74);
    double R78 = -R41*R76 + R48*R77 + R69;
    double R79 = -R47*R77 - R49*R76 + R71;
    double R80 = -R50*R76 + R51*R77 + R73;
    double R81 = 2*R53;
    double R82 = R81*(-R47 - R49*R52);
    double R83 = R81*(-R47*R52 - R49);
    double R84 = ((1.0/2.0)*R78*(-R41*R83 + R48*R82) + (1.0/2.0)*R79*(-R47*R82 - R49*R83 - 2) + (1.0/2.0)*R80*(-R50*R83 + R51*R82))/sqrt(pow(R78, 2) + pow(R79, 2) + pow(R80, 2));
    double R85 = R35*R45;
    double R86 = R39*R45;
    double R87 = R85 + R86*a1;
    double R88 = R25*R45;
    double R89 = R85*b1 - R88*a1;
    double R90 = -R86*b1 - R88;
    double R91 = pow(pow(R87, 2) + pow(R89, 2) + pow(R90, 2), -1.0/2.0);
    double result = ((R69*R87*R91 + R71*R89*R91 + R73*R90*R91 > 0) ? (
   -R84
)
: (
   R84
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_dz(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = -R32 + R33*R6;
    double R35 = R21*R31 + R22*R34 + R30*R5;
    double R36 = R32*R6 - R33;
    double R37 = R1*R26;
    double R38 = R27*R6 + R29;
    double R39 = R21*R37 + R22*R38 + R36*R5;
    double R40 = pow(pow(R25, 2) + pow(R35, 2) + pow(R39, 2), -1.0/2.0);
    double R41 = R25*R40;
    double R42 = pow(a1, 2);
    double R43 = pow(b1, 2);
    double R44 = R42 + R43 + 1;
    double R45 = pow(R44, -1.0/2.0);
    double R46 = 1.0/R44;
    double R47 = pow(R42*R46 + R43*R46 + R46, -1.0/2.0);
    double R48 = R45*R47;
    double R49 = R48*b1;
    double R50 = R39*R40;
    double R51 = R35*R45;
    double R52 = R40*R47*R51*a1 + R41*R49 - R48*R50;
    double R53 = 1.0/(1.0 - pow(R52, 2));
    double R54 = -plane_z;
    double R55 = R54 + panel_dz + panel_straw0z;
    double R56 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R57 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R58 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R59 = R16*R4;
    double R60 = R20*R4;
    double R61 = R11*R59 - R60*R7;
    double R62 = R11*R60 + R59*R7;
    double R63 = -panel_straw0z + wire_z;
    double R64 = R4*R8;
    double R65 = R10*R17 + R18;
    double R66 = R10*R9 - R12;
    double R67 = R16*R65 - R20*R66;
    double R68 = R16*R66 + R20*R65;
    double R69 = -R2*R55 - R24*R57 + R54 + R56*R6 - R58*(-R10*R2 + R24*R62 - R6*R61) - R63*(R2*R64 + R24*R68 - R6*R67) + b0 - plane_dz;
    double R70 = R49*R69;
    double R71 = -R36*R55 - R37*R56 - R38*R57 - R58*(-R10*R36 + R37*R61 + R38*R62) - R63*(R36*R64 + R37*R67 + R38*R68) - plane_dy;
    double R72 = R48*R71;
    double R73 = -R30*R55 - R31*R56 - R34*R57 - R58*(-R10*R30 + R31*R61 + R34*R62) - R63*(R30*R64 + R31*R67 + R34*R68) + a0 - plane_dx;
    double R74 = R48*a1;
    double R75 = R73*R74;
    double R76 = R35*R40;
    double R77 = R41*R69 + R50*R71 + R73*R76;
    double R78 = R53*(-R52*(R70 - R72 + R75) + R77);
    double R79 = R53*(R52*R77 - R70 + R72 - R75);
    double R80 = -R41*R78 + R49*R79 + R69;
    double R81 = -R48*R79 - R50*R78 + R71;
    double R82 = R73 + R74*R79 - R76*R78;
    double R83 = 2*R53;
    double R84 = R83*(-R41*R52 + R49);
    double R85 = R83*(-R41 + R49*R52);
    double R86 = ((1.0/2.0)*R80*(-R41*R85 + R49*R84 - 2) + (1.0/2.0)*R81*(-R48*R84 - R50*R85) + (1.0/2.0)*R82*(R74*R84 - R76*R85))/sqrt(pow(R80, 2) + pow(R81, 2) + pow(R82, 2));
    double R87 = R39*R45;
    double R88 = R51 + R87*a1;
    double R89 = R25*R45;
    double R90 = R51*b1 - R89*a1;
    double R91 = -R87*b1 - R89;
    double R92 = pow(pow(R88, 2) + pow(R90, 2) + pow(R91, 2), -1.0/2.0);
    double result = ((R69*R88*R92 + R71*R90*R92 + R73*R91*R92 > 0) ? (
   -R86
)
: (
   R86
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_a(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = R3*R4;
    double R6 = 1.0*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R3;
    double R14 = -R10 + R11*R13;
    double R15 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R16 = 1.0/R15;
    double R17 = R16*panel_straw0x;
    double R18 = R12*R9;
    double R19 = R3*R8;
    double R20 = R11*R19 + R18;
    double R21 = R16*panel_straw0y;
    double R22 = 1.0*R14*R17 - 1.0*R20*R21;
    double R23 = R17*R20;
    double R24 = R14*R21;
    double R25 = R23 + R24;
    double R26 = 1.0*R25;
    double R27 = sin(plane_a);
    double R28 = R1*R27;
    double R29 = R2*R6 - R22*R7 + R26*R28;
    double R30 = sin(plane_g);
    double R31 = R27*R30;
    double R32 = cos(plane_g);
    double R33 = R0*R32;
    double R34 = R33*R7;
    double R35 = R31 + R34;
    double R36 = R1*R32;
    double R37 = R0*R30;
    double R38 = R27*R32;
    double R39 = R38*R7;
    double R40 = -R37 + R39;
    double R41 = R22*R36 + R26*R40 + R35*R6;
    double R42 = R37*R7;
    double R43 = -R38 + R42;
    double R44 = R1*R30;
    double R45 = R31*R7;
    double R46 = R33 + R45;
    double R47 = R22*R44 + R26*R46 + R43*R6;
    double R48 = pow(R29, 2) + pow(R41, 2) + pow(R47, 2);
    double R49 = pow(R48, -1.0/2.0);
    double R50 = R29*R49;
    double R51 = pow(a1, 2);
    double R52 = pow(b1, 2);
    double R53 = R51 + R52 + 1;
    double R54 = 1.0/R53;
    double R55 = pow(R51*R54 + R52*R54 + R54, -1.0/2.0);
    double R56 = R49*R55;
    double R57 = pow(R53, -1.0/2.0);
    double R58 = R29*R57;
    double R59 = R58*b1;
    double R60 = R55*R57;
    double R61 = R47*R49;
    double R62 = R41*R57;
    double R63 = R62*a1;
    double R64 = R56*R59 + R56*R63 - R60*R61;
    double R65 = 1.0 - pow(R64, 2);
    double R66 = 1.0/R65;
    double R67 = -plane_z;
    double R68 = R67 + panel_dz + panel_straw0z;
    double R69 = R17*panel_dx - R21*panel_dy + panel_straw0x;
    double R70 = R21*panel_dx;
    double R71 = R17*panel_dy;
    double R72 = R70 + R71 + panel_straw0y;
    double R73 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R74 = -R15 + R73;
    double R75 = R17*R4;
    double R76 = R21*R4;
    double R77 = R12*R75 - R76*R8;
    double R78 = R12*R76 + R75*R8;
    double R79 = -panel_straw0z;
    double R80 = R79 + wire_z;
    double R81 = R4*R9;
    double R82 = R11*R18 + R19;
    double R83 = R10*R11 - R13;
    double R84 = R17*R82 - R21*R83;
    double R85 = R17*R83 + R21*R82;
    double R86 = -R2*R68 - R28*R72 + R67 + R69*R7 - R74*(-R11*R2 + R28*R78 - R7*R77) - R80*(R2*R81 + R28*R85 - R7*R84) + b0 - plane_dz;
    double R87 = R60*b1;
    double R88 = R86*R87;
    double R89 = -R43*R68 - R44*R69 - R46*R72 - R74*(-R11*R43 + R44*R77 + R46*R78) - R80*(R43*R81 + R44*R84 + R46*R85) - plane_dy;
    double R90 = R60*R89;
    double R91 = -R35*R68 - R36*R69 - R40*R72 - R74*(-R11*R35 + R36*R77 + R40*R78) - R80*(R35*R81 + R36*R84 + R40*R85) + a0 - plane_dx;
    double R92 = R60*a1;
    double R93 = R91*R92;
    double R94 = R49*R86;
    double R95 = R49*R89;
    double R96 = R49*R91;
    double R97 = R29*R94 + R41*R96 + R47*R95;
    double R98 = -R64*(R88 - R90 + R93) + R97;
    double R99 = R66*R98;
    double R100 = -R88 + R90 - R93;
    double R101 = R100 + R64*R97;
    double R102 = R101*R66;
    double R103 = R102*R87 - R50*R99 + R86;
    double R104 = -R102*R60 - R61*R99 + R89;
    double R105 = R41*R49;
    double R106 = R102*R92 - R105*R99 + R91;
    double R107 = R28*(R79 - panel_dz + plane_z);
    double R108 = R2*(-R70 - R71 - panel_straw0y);
    double R109 = R15 - R73;
    double R110 = R109*(R11*R28 + R2*R78);
    double R111 = panel_straw0z - wire_z;
    double R112 = R111*(R2*R85 - R28*R81);
    double R113 = R2*(1.0*R23 + 1.0*R24);
    double R114 = R113 - R28*R6;
    double R115 = R114*R49;
    double R116 = 2*R99;
    double R117 = R5*(1.0*R37 - 1.0*R39);
    double R118 = R25*(1.0*R31 + 1.0*R34);
    double R119 = R5*(-1.0*R33 - 1.0*R45);
    double R120 = R25*(-1.0*R38 + 1.0*R42);
    double R121 = (-1.0/2.0*R29*(2*R113 - 2.0*R28*R5) - 1.0/2.0*R41*(2*R117 + 2*R118) - 1.0/2.0*R47*(2*R119 + 2*R120))/pow(R48, 3.0/2.0);
    double R122 = R121*R29;
    double R123 = R115*R87;
    double R124 = R119 + R120;
    double R125 = R124*R49;
    double R126 = R125*R60;
    double R127 = R117 + R118;
    double R128 = R127*R49;
    double R129 = R128*R92;
    double R130 = R121*R55;
    double R131 = R130*R59;
    double R132 = R121*R47;
    double R133 = R132*R60;
    double R134 = R130*R63;
    double R135 = 2*R64*(2*R123 - 2*R126 + 2*R129 + 2*R131 - 2*R133 + 2*R134)/pow(R65, 2);
    double R136 = R101*R135;
    double R137 = R135*R98;
    double R138 = -R107 + R108 + R110 + R112;
    double R139 = R46*R68;
    double R140 = R72*(R38 - R42);
    double R141 = R109*(R11*R46 + R43*R78);
    double R142 = R111*(R43*R85 + R81*(-R33 - R45));
    double R143 = R139 + R140 + R141 + R142;
    double R144 = R40*R68;
    double R145 = R72*(-R31 - R34);
    double R146 = R109*(R11*R40 + R35*R78);
    double R147 = R111*(R35*R85 + R81*(R37 - R39));
    double R148 = R144 + R145 + R146 + R147;
    double R149 = -R138*R87 + R143*R60 - R148*R92;
    double R150 = R123 - R126 + R129 + R131 - R133 + R134;
    double R151 = R121*R41;
    double R152 = R105*R148 + R114*R94 + R122*R86 + R124*R95 + R127*R96 + R132*R89 + R138*R50 + R143*R61 + R151*R91;
    double R153 = 2*R66;
    double R154 = R153*(R100*R150 + R149*R64 + R152);
    double R155 = R153*(R149 + R150*R97 + R152*R64);
    double R156 = ((1.0/2.0)*R103*(-2*R107 + 2*R108 + 2*R110 + 2*R112 - R115*R116 - R116*R122 + R136*R87 - R137*R50 - R154*R50 + R155*R87) + (1.0/2.0)*R104*(-R116*R125 - R116*R132 - R136*R60 - R137*R61 + 2*R139 + 2*R140 + 2*R141 + 2*R142 - R154*R61 - R155*R60) + (1.0/2.0)*R106*(-R105*R137 - R105*R154 - R116*R128 - R116*R151 + R136*R92 + 2*R144 + 2*R145 + 2*R146 + 2*R147 + R155*R92))/sqrt(pow(R103, 2) + pow(R104, 2) + pow(R106, 2));
    double R157 = R47*R57;
    double R158 = R157*a1 + R62;
    double R159 = -R58*a1 + R62*b1;
    double R160 = -R157*b1 - R58;
    double R161 = pow(pow(R158, 2) + pow(R159, 2) + pow(R160, 2), -1.0/2.0);
    double result = ((R158*R161*R86 + R159*R161*R89 + R160*R161*R91 > 0) ? (
   -R156
)
: (
   R156
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_b(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = R3*R4;
    double R6 = 1.0*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R3;
    double R14 = -R10 + R11*R13;
    double R15 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R16 = 1.0/R15;
    double R17 = R16*panel_straw0x;
    double R18 = R14*R17;
    double R19 = R12*R9;
    double R20 = R3*R8;
    double R21 = R11*R20 + R19;
    double R22 = R16*panel_straw0y;
    double R23 = R21*R22;
    double R24 = 1.0*R18 - 1.0*R23;
    double R25 = R17*R21;
    double R26 = R14*R22;
    double R27 = R25 + R26;
    double R28 = 1.0*R27;
    double R29 = sin(plane_a);
    double R30 = R1*R29;
    double R31 = R2*R6 - R24*R7 + R28*R30;
    double R32 = sin(plane_g);
    double R33 = R29*R32;
    double R34 = cos(plane_g);
    double R35 = R0*R34;
    double R36 = R33 + R35*R7;
    double R37 = R1*R34;
    double R38 = R0*R32;
    double R39 = R29*R34;
    double R40 = -R38 + R39*R7;
    double R41 = R24*R37 + R28*R40 + R36*R6;
    double R42 = R38*R7 - R39;
    double R43 = R1*R32;
    double R44 = R33*R7 + R35;
    double R45 = R24*R43 + R28*R44 + R42*R6;
    double R46 = pow(R31, 2) + pow(R41, 2) + pow(R45, 2);
    double R47 = pow(R46, -1.0/2.0);
    double R48 = R31*R47;
    double R49 = pow(a1, 2);
    double R50 = pow(b1, 2);
    double R51 = R49 + R50 + 1;
    double R52 = 1.0/R51;
    double R53 = pow(R49*R52 + R50*R52 + R52, -1.0/2.0);
    double R54 = R47*R53;
    double R55 = pow(R51, -1.0/2.0);
    double R56 = R31*R55;
    double R57 = R56*b1;
    double R58 = R45*R47;
    double R59 = R53*R55;
    double R60 = R41*R55;
    double R61 = R60*a1;
    double R62 = R54*R57 + R54*R61 - R58*R59;
    double R63 = 1.0 - pow(R62, 2);
    double R64 = 1.0/R63;
    double R65 = -plane_z;
    double R66 = R65 + panel_dz + panel_straw0z;
    double R67 = R17*panel_dx;
    double R68 = R22*panel_dy;
    double R69 = R67 - R68 + panel_straw0x;
    double R70 = R22*panel_dx;
    double R71 = R17*panel_dy;
    double R72 = R70 + R71 + panel_straw0y;
    double R73 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R74 = -R15 + R73;
    double R75 = R17*R4;
    double R76 = R12*R75;
    double R77 = R22*R4;
    double R78 = R77*R8;
    double R79 = R76 - R78;
    double R80 = R7*R79;
    double R81 = R12*R77 + R75*R8;
    double R82 = -panel_straw0z;
    double R83 = R82 + wire_z;
    double R84 = R4*R9;
    double R85 = R11*R19 + R20;
    double R86 = R17*R85;
    double R87 = R10*R11 - R13;
    double R88 = R22*R87;
    double R89 = R86 - R88;
    double R90 = R7*R89;
    double R91 = R17*R87 + R22*R85;
    double R92 = -R2*R66 - R30*R72 + R65 + R69*R7 - R74*(-R11*R2 + R30*R81 - R80) - R83*(R2*R84 + R30*R91 - R90) + b0 - plane_dz;
    double R93 = R59*b1;
    double R94 = R92*R93;
    double R95 = R1*R69;
    double R96 = -R32*R95 - R42*R66 - R44*R72 - R74*(-R11*R42 + R43*R79 + R44*R81) - R83*(R42*R84 + R43*R89 + R44*R91) - plane_dy;
    double R97 = R59*R96;
    double R98 = -R34*R95 - R36*R66 - R40*R72 - R74*(-R11*R36 + R37*R79 + R40*R81) - R83*(R36*R84 + R37*R89 + R40*R91) + a0 - plane_dx;
    double R99 = R59*a1;
    double R100 = R98*R99;
    double R101 = R47*R92;
    double R102 = R41*R47;
    double R103 = R101*R31 + R102*R98 + R58*R96;
    double R104 = R103 - R62*(R100 + R94 - R97);
    double R105 = R104*R64;
    double R106 = -R100 - R94 + R97;
    double R107 = R103*R62 + R106;
    double R108 = R107*R64;
    double R109 = -R105*R48 + R108*R93 + R92;
    double R110 = -R105*R58 - R108*R59 + R96;
    double R111 = -R102*R105 + R108*R99 + R98;
    double R112 = R0*R7;
    double R113 = R112*(R82 - panel_dz + plane_z);
    double R114 = R29*R7;
    double R115 = R114*(-R70 - R71 - panel_straw0y);
    double R116 = R15 - R73;
    double R117 = R116*(R1*(-R76 + R78) + R11*R112 - R114*R81);
    double R118 = panel_straw0z - wire_z;
    double R119 = R118*(R1*(-R86 + R88) - R112*R84 - R114*R91);
    double R120 = 1.0*R23;
    double R121 = 1.0*R18;
    double R122 = R1*(R120 - R121);
    double R123 = R114*(1.0*R25 + 1.0*R26);
    double R124 = -R112*R6 + R122 - R123;
    double R125 = R124*R47;
    double R126 = 2*R105;
    double R127 = 2.0*R5;
    double R128 = R1*R35;
    double R129 = R7*(-R120 + R121);
    double R130 = R129*R34;
    double R131 = R1*R39;
    double R132 = 2.0*R27;
    double R133 = R1*R38;
    double R134 = R129*R32;
    double R135 = R1*R33;
    double R136 = (-1.0/2.0*R31*(-R112*R127 + 2*R122 - 2*R123) - 1.0/2.0*R41*(R127*R128 - 2*R130 + R131*R132) - 1.0/2.0*R45*(R127*R133 + R132*R135 - 2*R134))/pow(R46, 3.0/2.0);
    double R137 = R136*R31;
    double R138 = R125*R93;
    double R139 = R47*(R133*R6 - R134 + R135*R28);
    double R140 = R139*R59;
    double R141 = R47*(R128*R6 - R130 + R131*R28);
    double R142 = R141*R99;
    double R143 = R136*R53;
    double R144 = R143*R57;
    double R145 = R136*R45;
    double R146 = R145*R59;
    double R147 = R143*R61;
    double R148 = 2*R62*(2*R138 - 2*R140 + 2*R142 + 2*R144 - 2*R146 + 2*R147)/pow(R63, 2);
    double R149 = R107*R148;
    double R150 = R104*R148;
    double R151 = -R113 - R115 + R117 + R119 + R95;
    double R152 = R133*R66;
    double R153 = R135*R72;
    double R154 = R7*(-R67 + R68 - panel_straw0x);
    double R155 = R154*R32;
    double R156 = R116*(-R11*R133 + R135*R81 - R32*R80);
    double R157 = R118*(R133*R84 + R135*R91 - R32*R90);
    double R158 = -R152 - R153 - R155 + R156 + R157;
    double R159 = R128*R66;
    double R160 = R131*R72;
    double R161 = R154*R34;
    double R162 = R116*(-R11*R128 + R131*R81 - R34*R80);
    double R163 = R118*(R128*R84 + R131*R91 - R34*R90);
    double R164 = -R159 - R160 - R161 + R162 + R163;
    double R165 = -R151*R93 + R158*R59 - R164*R99;
    double R166 = R138 - R140 + R142 + R144 - R146 + R147;
    double R167 = R136*R41;
    double R168 = R101*R124 + R102*R164 + R137*R92 + R139*R96 + R141*R98 + R145*R96 + R151*R48 + R158*R58 + R167*R98;
    double R169 = 2*R64;
    double R170 = R169*(R106*R166 + R165*R62 + R168);
    double R171 = R169*(R103*R166 + R165 + R168*R62);
    double R172 = ((1.0/2.0)*R109*(-2*R113 - 2*R115 + 2*R117 + 2*R119 - R125*R126 - R126*R137 + R149*R93 - R150*R48 - R170*R48 + R171*R93 + 2*R95) + (1.0/2.0)*R110*(-R126*R139 - R126*R145 - R149*R59 - R150*R58 - 2*R152 - 2*R153 - 2*R155 + 2*R156 + 2*R157 - R170*R58 - R171*R59) + (1.0/2.0)*R111*(-R102*R150 - R102*R170 - R126*R141 - R126*R167 + R149*R99 - 2*R159 - 2*R160 - 2*R161 + 2*R162 + 2*R163 + R171*R99))/sqrt(pow(R109, 2) + pow(R110, 2) + pow(R111, 2));
    double R173 = R45*R55;
    double R174 = R173*a1 + R60;
    double R175 = -R56*a1 + R60*b1;
    double R176 = -R173*b1 - R56;
    double R177 = pow(pow(R174, 2) + pow(R175, 2) + pow(R176, 2), -1.0/2.0);
    double result = ((R174*R177*R92 + R175*R177*R96 + R176*R177*R98 > 0) ? (
   -R172
)
: (
   R172
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_plane_g(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = R3*R4;
    double R6 = 1.0*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R3;
    double R14 = -R10 + R11*R13;
    double R15 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R16 = 1.0/R15;
    double R17 = R16*panel_straw0x;
    double R18 = R14*R17;
    double R19 = R12*R9;
    double R20 = R3*R8;
    double R21 = R11*R20 + R19;
    double R22 = R16*panel_straw0y;
    double R23 = R21*R22;
    double R24 = 1.0*R18 - 1.0*R23;
    double R25 = R14*R22 + R17*R21;
    double R26 = 1.0*R25;
    double R27 = sin(plane_a);
    double R28 = R1*R27;
    double R29 = R2*R6 - R24*R7 + R26*R28;
    double R30 = sin(plane_g);
    double R31 = R27*R30;
    double R32 = cos(plane_g);
    double R33 = R0*R32;
    double R34 = R33*R7;
    double R35 = R31 + R34;
    double R36 = R1*R32;
    double R37 = R0*R30;
    double R38 = R27*R32;
    double R39 = R38*R7;
    double R40 = -R37 + R39;
    double R41 = R24*R36 + R26*R40 + R35*R6;
    double R42 = R37*R7;
    double R43 = -R38 + R42;
    double R44 = R1*R30;
    double R45 = R31*R7;
    double R46 = R33 + R45;
    double R47 = R24*R44 + R26*R46 + R43*R6;
    double R48 = pow(R29, 2) + pow(R41, 2) + pow(R47, 2);
    double R49 = pow(R48, -1.0/2.0);
    double R50 = R29*R49;
    double R51 = pow(a1, 2);
    double R52 = pow(b1, 2);
    double R53 = R51 + R52 + 1;
    double R54 = 1.0/R53;
    double R55 = pow(R51*R54 + R52*R54 + R54, -1.0/2.0);
    double R56 = R49*R55;
    double R57 = pow(R53, -1.0/2.0);
    double R58 = R29*R57;
    double R59 = R58*b1;
    double R60 = R55*R57;
    double R61 = R47*R49;
    double R62 = R41*R57;
    double R63 = R62*a1;
    double R64 = R56*R59 + R56*R63 - R60*R61;
    double R65 = 1.0 - pow(R64, 2);
    double R66 = 1.0/R65;
    double R67 = -plane_z;
    double R68 = R67 + panel_dz + panel_straw0z;
    double R69 = R17*panel_dx;
    double R70 = R22*panel_dy;
    double R71 = R69 - R70 + panel_straw0x;
    double R72 = R17*panel_dy + R22*panel_dx + panel_straw0y;
    double R73 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R74 = -R15 + R73;
    double R75 = R17*R4;
    double R76 = R22*R4;
    double R77 = R12*R75 - R76*R8;
    double R78 = R12*R76 + R75*R8;
    double R79 = -panel_straw0z + wire_z;
    double R80 = R4*R9;
    double R81 = R11*R19 + R20;
    double R82 = R10*R11 - R13;
    double R83 = R17*R81 - R22*R82;
    double R84 = R17*R82 + R22*R81;
    double R85 = -R2*R68 - R28*R72 + R67 + R7*R71 - R74*(-R11*R2 + R28*R78 - R7*R77) - R79*(R2*R80 + R28*R84 - R7*R83) + b0 - plane_dz;
    double R86 = R60*b1;
    double R87 = R85*R86;
    double R88 = R43*R68;
    double R89 = R46*R72;
    double R90 = R11*R43;
    double R91 = R44*R77;
    double R92 = R44*R83;
    double R93 = -R44*R71 - R74*(R46*R78 - R90 + R91) - R79*(R43*R80 + R46*R84 + R92) - R88 - R89 - plane_dy;
    double R94 = R60*R93;
    double R95 = R36*R77 + R40*R78;
    double R96 = R35*R80 + R36*R83 + R40*R84;
    double R97 = -R35*R68 - R36*R71 - R40*R72 - R74*(-R11*R35 + R95) - R79*R96 + a0 - plane_dx;
    double R98 = R60*a1;
    double R99 = R97*R98;
    double R100 = R49*R93;
    double R101 = R49*R97;
    double R102 = R100*R47 + R101*R41 + R50*R85;
    double R103 = R102 - R64*(R87 - R94 + R99);
    double R104 = R103*R66;
    double R105 = -R87 + R94 - R99;
    double R106 = R102*R64 + R105;
    double R107 = R106*R66;
    double R108 = -R104*R50 + R107*R86 + R85;
    double R109 = -R104*R61 - R107*R60 + R93;
    double R110 = R41*R49;
    double R111 = -R104*R110 + R107*R98 + R97;
    double R112 = R5*(1.0*R38 - 1.0*R42);
    double R113 = 1.0*R18 - 1.0*R23;
    double R114 = R113*R44;
    double R115 = R25*(-1.0*R33 - 1.0*R45);
    double R116 = R5*(1.0*R31 + 1.0*R34);
    double R117 = R113*R36;
    double R118 = R25*(-1.0*R37 + 1.0*R39);
    double R119 = (-1.0/2.0*R41*(2*R112 - 2*R114 + 2*R115) - 1.0/2.0*R47*(2*R116 + 2*R117 + 2*R118))/pow(R48, 3.0/2.0);
    double R120 = R119*R29;
    double R121 = 2*R104;
    double R122 = R116 + R117 + R118;
    double R123 = R122*R49;
    double R124 = R123*R60;
    double R125 = R112 - R114 + R115;
    double R126 = R125*R49;
    double R127 = R126*R98;
    double R128 = R119*R55;
    double R129 = R128*R59;
    double R130 = R119*R47;
    double R131 = R130*R60;
    double R132 = R128*R63;
    double R133 = 2*R64*(-2*R124 + 2*R127 + 2*R129 - 2*R131 + 2*R132)/pow(R65, 2);
    double R134 = R106*R133;
    double R135 = R103*R133;
    double R136 = -R31 - R34;
    double R137 = R136*R68;
    double R138 = -R69 + R70 - panel_straw0x;
    double R139 = R138*R36;
    double R140 = R72*(R37 - R39);
    double R141 = R15 - R73;
    double R142 = R141*(R11*R136 + R95);
    double R143 = panel_straw0z - wire_z;
    double R144 = R143*R96;
    double R145 = R137 + R139 + R140 + R142 + R144;
    double R146 = R138*R44;
    double R147 = -R33 - R45;
    double R148 = R141*(R147*R78 + R90 - R91);
    double R149 = R143*(R147*R84 + R80*(R38 - R42) - R92);
    double R150 = -R146 + R148 + R149 + R88 + R89;
    double R151 = R145*R60 - R150*R98;
    double R152 = -R124 + R127 + R129 - R131 + R132;
    double R153 = R119*R41;
    double R154 = R100*R122 + R101*R125 + R110*R150 + R120*R85 + R130*R93 + R145*R61 + R153*R97;
    double R155 = 2*R66;
    double R156 = R155*(R105*R152 + R151*R64 + R154);
    double R157 = R155*(R102*R152 + R151 + R154*R64);
    double R158 = ((1.0/2.0)*R108*(-R120*R121 + R134*R86 - R135*R50 - R156*R50 + R157*R86) + (1.0/2.0)*R109*(-R121*R123 - R121*R130 - R134*R60 - R135*R61 + 2*R137 + 2*R139 + 2*R140 + 2*R142 + 2*R144 - R156*R61 - R157*R60) + (1.0/2.0)*R111*(-R110*R135 - R110*R156 - R121*R126 - R121*R153 + R134*R98 - 2*R146 + 2*R148 + 2*R149 + R157*R98 + 2*R88 + 2*R89))/sqrt(pow(R108, 2) + pow(R109, 2) + pow(R111, 2));
    double R159 = R47*R57;
    double R160 = R159*a1 + R62;
    double R161 = -R58*a1 + R62*b1;
    double R162 = -R159*b1 - R58;
    double R163 = pow(pow(R160, 2) + pow(R161, 2) + pow(R162, 2), -1.0/2.0);
    double result = ((R160*R163*R85 + R161*R163*R93 + R162*R163*R97 > 0) ? (
   -R158
)
: (
   R158
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dx(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = R33*R6;
    double R35 = -R32 + R34;
    double R36 = R21*R31 + R22*R35 + R30*R5;
    double R37 = R32*R6 - R33;
    double R38 = R1*R26;
    double R39 = R27*R6;
    double R40 = R29 + R39;
    double R41 = R21*R38 + R22*R40 + R37*R5;
    double R42 = pow(pow(R25, 2) + pow(R36, 2) + pow(R41, 2), -1.0/2.0);
    double R43 = R25*R42;
    double R44 = pow(a1, 2);
    double R45 = pow(b1, 2);
    double R46 = R44 + R45 + 1;
    double R47 = pow(R46, -1.0/2.0);
    double R48 = R25*R47;
    double R49 = 1.0/R46;
    double R50 = pow(R44*R49 + R45*R49 + R49, -1.0/2.0);
    double R51 = R42*R50;
    double R52 = R41*R42;
    double R53 = R47*R50;
    double R54 = R36*R47;
    double R55 = R48*R51*b1 + R51*R54*a1 - R52*R53;
    double R56 = 1.0/(1.0 - pow(R55, 2));
    double R57 = -plane_z;
    double R58 = R57 + panel_dz + panel_straw0z;
    double R59 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R60 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R61 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R62 = R16*R4;
    double R63 = R20*R4;
    double R64 = R11*R62 - R63*R7;
    double R65 = R11*R63 + R62*R7;
    double R66 = -panel_straw0z + wire_z;
    double R67 = R4*R8;
    double R68 = R10*R17 + R18;
    double R69 = R10*R9 - R12;
    double R70 = R16*R68 - R20*R69;
    double R71 = R16*R69 + R20*R68;
    double R72 = -R2*R58 - R24*R60 + R57 + R59*R6 - R61*(-R10*R2 + R24*R65 - R6*R64) - R66*(R2*R67 + R24*R71 - R6*R70) + b0 - plane_dz;
    double R73 = R53*b1;
    double R74 = R72*R73;
    double R75 = -R37*R58 - R38*R59 - R40*R60 - R61*(-R10*R37 + R38*R64 + R40*R65) - R66*(R37*R67 + R38*R70 + R40*R71) - plane_dy;
    double R76 = R53*R75;
    double R77 = -R30*R58 - R31*R59 - R35*R60 - R61*(-R10*R30 + R31*R64 + R35*R65) - R66*(R30*R67 + R31*R70 + R35*R71) + a0 - plane_dx;
    double R78 = R53*a1;
    double R79 = R77*R78;
    double R80 = R36*R42;
    double R81 = R43*R72 + R52*R75 + R77*R80;
    double R82 = R56*(-R55*(R74 - R76 + R79) + R81);
    double R83 = R56*(R55*R81 - R74 + R76 - R79);
    double R84 = -R43*R82 + R72 + R73*R83;
    double R85 = -R52*R82 - R53*R83 + R75;
    double R86 = R77 + R78*R83 - R80*R82;
    double R87 = R16*R6;
    double R88 = R20*R24;
    double R89 = R87 - R88;
    double R90 = R16*R31;
    double R91 = R20*(R32 - R34);
    double R92 = -R90 + R91;
    double R93 = R16*R38;
    double R94 = R20*(-R29 - R39);
    double R95 = -R93 + R94;
    double R96 = R43*R89 + R52*R95 + R80*R92;
    double R97 = R53*R95 - R73*R89 - R78*R92;
    double R98 = 2*R56;
    double R99 = R98*(R55*R96 + R97);
    double R100 = R98*(R55*R97 + R96);
    double R101 = ((1.0/2.0)*R84*(-R100*R43 + R73*R99 + 2*R87 - 2*R88) + (1.0/2.0)*R85*(-R100*R52 - R53*R99 - 2*R93 + 2*R94) + (1.0/2.0)*R86*(-R100*R80 + R78*R99 - 2*R90 + 2*R91))/sqrt(pow(R84, 2) + pow(R85, 2) + pow(R86, 2));
    double R102 = R41*R47;
    double R103 = R102*a1 + R54;
    double R104 = -R48*a1 + R54*b1;
    double R105 = -R102*b1 - R48;
    double R106 = pow(pow(R103, 2) + pow(R104, 2) + pow(R105, 2), -1.0/2.0);
    double result = ((R103*R106*R72 + R104*R106*R75 + R105*R106*R77 > 0) ? (
   -R101
)
: (
   R101
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dy(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R27 + R29*R6;
    double R31 = R1*R28;
    double R32 = R0*R26;
    double R33 = R23*R28;
    double R34 = R33*R6;
    double R35 = -R32 + R34;
    double R36 = R21*R31 + R22*R35 + R30*R5;
    double R37 = R32*R6 - R33;
    double R38 = R1*R26;
    double R39 = R27*R6;
    double R40 = R29 + R39;
    double R41 = R21*R38 + R22*R40 + R37*R5;
    double R42 = pow(pow(R25, 2) + pow(R36, 2) + pow(R41, 2), -1.0/2.0);
    double R43 = R25*R42;
    double R44 = pow(a1, 2);
    double R45 = pow(b1, 2);
    double R46 = R44 + R45 + 1;
    double R47 = pow(R46, -1.0/2.0);
    double R48 = R25*R47;
    double R49 = 1.0/R46;
    double R50 = pow(R44*R49 + R45*R49 + R49, -1.0/2.0);
    double R51 = R42*R50;
    double R52 = R41*R42;
    double R53 = R47*R50;
    double R54 = R36*R47;
    double R55 = R48*R51*b1 + R51*R54*a1 - R52*R53;
    double R56 = 1.0/(1.0 - pow(R55, 2));
    double R57 = -plane_z;
    double R58 = R57 + panel_dz + panel_straw0z;
    double R59 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R60 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R61 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R62 = R16*R4;
    double R63 = R20*R4;
    double R64 = R11*R62 - R63*R7;
    double R65 = R11*R63 + R62*R7;
    double R66 = -panel_straw0z + wire_z;
    double R67 = R4*R8;
    double R68 = R10*R17 + R18;
    double R69 = R10*R9 - R12;
    double R70 = R16*R68 - R20*R69;
    double R71 = R16*R69 + R20*R68;
    double R72 = -R2*R58 - R24*R60 + R57 + R59*R6 - R61*(-R10*R2 + R24*R65 - R6*R64) - R66*(R2*R67 + R24*R71 - R6*R70) + b0 - plane_dz;
    double R73 = R53*b1;
    double R74 = R72*R73;
    double R75 = -R37*R58 - R38*R59 - R40*R60 - R61*(-R10*R37 + R38*R64 + R40*R65) - R66*(R37*R67 + R38*R70 + R40*R71) - plane_dy;
    double R76 = R53*R75;
    double R77 = -R30*R58 - R31*R59 - R35*R60 - R61*(-R10*R30 + R31*R64 + R35*R65) - R66*(R30*R67 + R31*R70 + R35*R71) + a0 - plane_dx;
    double R78 = R53*a1;
    double R79 = R77*R78;
    double R80 = R36*R42;
    double R81 = R43*R72 + R52*R75 + R77*R80;
    double R82 = R56*(-R55*(R74 - R76 + R79) + R81);
    double R83 = R56*(R55*R81 - R74 + R76 - R79);
    double R84 = -R43*R82 + R72 + R73*R83;
    double R85 = -R52*R82 - R53*R83 + R75;
    double R86 = R77 + R78*R83 - R80*R82;
    double R87 = R20*R6;
    double R88 = R16*R24;
    double R89 = -R87 - R88;
    double R90 = R20*R31;
    double R91 = R16*(R32 - R34);
    double R92 = R90 + R91;
    double R93 = R20*R38;
    double R94 = R16*(-R29 - R39);
    double R95 = R93 + R94;
    double R96 = R43*R89 + R52*R95 + R80*R92;
    double R97 = R53*R95 - R73*R89 - R78*R92;
    double R98 = 2*R56;
    double R99 = R98*(R55*R96 + R97);
    double R100 = R98*(R55*R97 + R96);
    double R101 = ((1.0/2.0)*R84*(-R100*R43 + R73*R99 - 2*R87 - 2*R88) + (1.0/2.0)*R85*(-R100*R52 - R53*R99 + 2*R93 + 2*R94) + (1.0/2.0)*R86*(-R100*R80 + R78*R99 + 2*R90 + 2*R91))/sqrt(pow(R84, 2) + pow(R85, 2) + pow(R86, 2));
    double R102 = R41*R47;
    double R103 = R102*a1 + R54;
    double R104 = -R48*a1 + R54*b1;
    double R105 = -R102*b1 - R48;
    double R106 = pow(pow(R103, 2) + pow(R104, 2) + pow(R105, 2), -1.0/2.0);
    double result = ((R103*R106*R72 + R104*R106*R75 + R105*R106*R77 > 0) ? (
   -R101
)
: (
   R101
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_dz(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R11*R8;
    double R18 = R3*R7;
    double R19 = R10*R18 + R17;
    double R20 = R15*panel_straw0y;
    double R21 = 1.0*R13*R16 - 1.0*R19*R20;
    double R22 = 1.0*R13*R20 + 1.0*R16*R19;
    double R23 = sin(plane_a);
    double R24 = R1*R23;
    double R25 = R2*R5 - R21*R6 + R22*R24;
    double R26 = sin(plane_g);
    double R27 = R23*R26;
    double R28 = cos(plane_g);
    double R29 = R0*R28;
    double R30 = R29*R6;
    double R31 = R27 + R30;
    double R32 = R1*R28;
    double R33 = R0*R26;
    double R34 = R23*R28;
    double R35 = -R33 + R34*R6;
    double R36 = R21*R32 + R22*R35 + R31*R5;
    double R37 = R33*R6;
    double R38 = -R34 + R37;
    double R39 = R1*R26;
    double R40 = R27*R6 + R29;
    double R41 = R21*R39 + R22*R40 + R38*R5;
    double R42 = pow(pow(R25, 2) + pow(R36, 2) + pow(R41, 2), -1.0/2.0);
    double R43 = R25*R42;
    double R44 = pow(a1, 2);
    double R45 = pow(b1, 2);
    double R46 = R44 + R45 + 1;
    double R47 = pow(R46, -1.0/2.0);
    double R48 = R25*R47;
    double R49 = 1.0/R46;
    double R50 = pow(R44*R49 + R45*R49 + R49, -1.0/2.0);
    double R51 = R42*R50;
    double R52 = R41*R42;
    double R53 = R47*R50;
    double R54 = R36*R47;
    double R55 = R48*R51*b1 + R51*R54*a1 - R52*R53;
    double R56 = 1.0/(1.0 - pow(R55, 2));
    double R57 = -plane_z;
    double R58 = R57 + panel_dz + panel_straw0z;
    double R59 = R16*panel_dx - R20*panel_dy + panel_straw0x;
    double R60 = R16*panel_dy + R20*panel_dx + panel_straw0y;
    double R61 = -R14 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R62 = R16*R4;
    double R63 = R20*R4;
    double R64 = R11*R62 - R63*R7;
    double R65 = R11*R63 + R62*R7;
    double R66 = -panel_straw0z + wire_z;
    double R67 = R4*R8;
    double R68 = R10*R17 + R18;
    double R69 = R10*R9 - R12;
    double R70 = R16*R68 - R20*R69;
    double R71 = R16*R69 + R20*R68;
    double R72 = -R2*R58 - R24*R60 + R57 + R59*R6 - R61*(-R10*R2 + R24*R65 - R6*R64) - R66*(R2*R67 + R24*R71 - R6*R70) + b0 - plane_dz;
    double R73 = R53*b1;
    double R74 = R72*R73;
    double R75 = -R38*R58 - R39*R59 - R40*R60 - R61*(-R10*R38 + R39*R64 + R40*R65) - R66*(R38*R67 + R39*R70 + R40*R71) - plane_dy;
    double R76 = R53*R75;
    double R77 = -R31*R58 - R32*R59 - R35*R60 - R61*(-R10*R31 + R32*R64 + R35*R65) - R66*(R31*R67 + R32*R70 + R35*R71) + a0 - plane_dx;
    double R78 = R53*a1;
    double R79 = R77*R78;
    double R80 = R36*R42;
    double R81 = R43*R72 + R52*R75 + R77*R80;
    double R82 = R56*(-R55*(R74 - R76 + R79) + R81);
    double R83 = R56*(R55*R81 - R74 + R76 - R79);
    double R84 = -R43*R82 + R72 + R73*R83;
    double R85 = -R52*R82 - R53*R83 + R75;
    double R86 = R77 + R78*R83 - R80*R82;
    double R87 = R34 - R37;
    double R88 = -R27 - R30;
    double R89 = -R2*R43 + R52*R87 + R80*R88;
    double R90 = R2*R73 + R53*R87 - R78*R88;
    double R91 = 2*R56;
    double R92 = R91*(R55*R89 + R90);
    double R93 = R91*(R55*R90 + R89);
    double R94 = ((1.0/2.0)*R84*(-2*R2 - R43*R93 + R73*R92) + (1.0/2.0)*R85*(2*R34 - 2*R37 - R52*R93 - R53*R92) + (1.0/2.0)*R86*(-2*R27 - 2*R30 + R78*R92 - R80*R93))/sqrt(pow(R84, 2) + pow(R85, 2) + pow(R86, 2));
    double R95 = R41*R47;
    double R96 = R54 + R95*a1;
    double R97 = -R48*a1 + R54*b1;
    double R98 = -R48 - R95*b1;
    double R99 = pow(pow(R96, 2) + pow(R97, 2) + pow(R98, 2), -1.0/2.0);
    double result = ((R72*R96*R99 + R75*R97*R99 + R77*R98*R99 > 0) ? (
   -R94
)
: (
   R94
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_a(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = R3*R4;
    double R6 = R2*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R3;
    double R14 = R11*R13;
    double R15 = -R10 + R14;
    double R16 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R17 = 1.0/R16;
    double R18 = R17*panel_straw0x;
    double R19 = R12*R9;
    double R20 = R3*R8;
    double R21 = R11*R20;
    double R22 = R19 + R21;
    double R23 = R17*panel_straw0y;
    double R24 = 1.0*R15*R18 - 1.0*R22*R23;
    double R25 = 1.0*R15*R23 + 1.0*R18*R22;
    double R26 = sin(plane_a);
    double R27 = R1*R26;
    double R28 = -R24*R7 + R25*R27 + 1.0*R6;
    double R29 = sin(plane_g);
    double R30 = R26*R29;
    double R31 = cos(plane_g);
    double R32 = R0*R31;
    double R33 = R32*R7;
    double R34 = R30 + R33;
    double R35 = R34*R5;
    double R36 = R1*R31;
    double R37 = R0*R29;
    double R38 = R26*R31;
    double R39 = R38*R7;
    double R40 = -R37 + R39;
    double R41 = R24*R36 + R25*R40 + 1.0*R35;
    double R42 = R37*R7;
    double R43 = -R38 + R42;
    double R44 = R43*R5;
    double R45 = R1*R29;
    double R46 = R30*R7;
    double R47 = R32 + R46;
    double R48 = R24*R45 + R25*R47 + 1.0*R44;
    double R49 = pow(R28, 2) + pow(R41, 2) + pow(R48, 2);
    double R50 = pow(R49, -1.0/2.0);
    double R51 = pow(a1, 2);
    double R52 = pow(b1, 2);
    double R53 = R51 + R52 + 1;
    double R54 = 1.0/R53;
    double R55 = pow(R51*R54 + R52*R54 + R54, -1.0/2.0);
    double R56 = R50*R55;
    double R57 = pow(R53, -1.0/2.0);
    double R58 = R28*R57;
    double R59 = R58*b1;
    double R60 = R55*R57;
    double R61 = R48*R50;
    double R62 = R41*R57;
    double R63 = R62*a1;
    double R64 = R56*R59 + R56*R63 - R60*R61;
    double R65 = 1.0 - pow(R64, 2);
    double R66 = 1.0/R65;
    double R67 = -plane_z;
    double R68 = R67 + panel_dz + panel_straw0z;
    double R69 = R18*panel_dx - R23*panel_dy + panel_straw0x;
    double R70 = R18*panel_dy + R23*panel_dx + panel_straw0y;
    double R71 = -R16 + sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R72 = R18*R4;
    double R73 = R23*R4;
    double R74 = R12*R72 - R73*R8;
    double R75 = R12*R73 + R72*R8;
    double R76 = -panel_straw0z + wire_z;
    double R77 = R4*R9;
    double R78 = R2*R77;
    double R79 = R11*R19 + R20;
    double R80 = R18*R79;
    double R81 = R10*R11 - R13;
    double R82 = R23*R81;
    double R83 = R80 - R82;
    double R84 = R23*R79;
    double R85 = R18*R81;
    double R86 = R84 + R85;
    double R87 = -R2*R68 - R27*R70 + R67 + R69*R7 - R71*(-R11*R2 + R27*R75 - R7*R74) - R76*(R27*R86 - R7*R83 + R78) + b0 - plane_dz;
    double R88 = R60*b1;
    double R89 = R87*R88;
    double R90 = -R43*R68 - R45*R69 - R47*R70 - R71*(-R11*R43 + R45*R74 + R47*R75) - R76*(R43*R77 + R45*R83 + R47*R86) - plane_dy;
    double R91 = R60*R90;
    double R92 = -R34*R68 - R36*R69 - R40*R70 - R71*(-R11*R34 + R36*R74 + R40*R75) - R76*(R34*R77 + R36*R83 + R40*R86) + a0 - plane_dx;
    double R93 = R60*a1;
    double R94 = R92*R93;
    double R95 = R50*R87;
    double R96 = R50*R90;
    double R97 = R50*R92;
    double R98 = R28*R95 + R41*R97 + R48*R96;
    double R99 = -R64*(R89 - R91 + R94) + R98;
    double R100 = R66*R99;
    double R101 = R100*R50;
    double R102 = -R89 + R91 - R94;
    double R103 = R102 + R64*R98;
    double R104 = R103*R66;
    double R105 = -R101*R28 + R104*R88 + R87;
    double R106 = -R100*R61 - R104*R60 + R90;
    double R107 = -R101*R41 + R104*R93 + R92;
    double R108 = R10 - R14;
    double R109 = R108*R18;
    double R110 = -R19 - R21;
    double R111 = R110*R23;
    double R112 = R108*R23 + R110*R18;
    double R113 = R112*R27 - R6 + R7*(-R109 + R111);
    double R114 = panel_straw0z - wire_z;
    double R115 = 2*R114;
    double R116 = 1.0*R80;
    double R117 = 1.0*R82;
    double R118 = R7*(-R116 + R117);
    double R119 = R27*(1.0*R84 + 1.0*R85);
    double R120 = R118 + R119 + 1.0*R78;
    double R121 = 2*R101;
    double R122 = R77*(1.0*R30 + 1.0*R33);
    double R123 = R116 - R117;
    double R124 = R123*R36;
    double R125 = R86*(-1.0*R37 + 1.0*R39);
    double R126 = R77*(-1.0*R38 + 1.0*R42);
    double R127 = R123*R45;
    double R128 = R86*(1.0*R32 + 1.0*R46);
    double R129 = (-1.0/2.0*R28*(2*R118 + 2*R119 + 2.0*R78) - 1.0/2.0*R41*(2*R122 + 2*R124 + 2*R125) - 1.0/2.0*R48*(2*R126 + 2*R127 + 2*R128))/pow(R49, 3.0/2.0);
    double R130 = R129*R28;
    double R131 = 2*R100;
    double R132 = R120*R50*R88;
    double R133 = R126 + R127 + R128;
    double R134 = R133*R50*R60;
    double R135 = R122 + R124 + R125;
    double R136 = R135*R50*R93;
    double R137 = R129*R55;
    double R138 = R137*R59;
    double R139 = R129*R48;
    double R140 = R139*R60;
    double R141 = R137*R63;
    double R142 = 2*R64*(2*R132 - 2*R134 + 2*R136 + 2*R138 - 2*R140 + 2*R141)/pow(R65, 2);
    double R143 = R103*R142;
    double R144 = R142*R99;
    double R145 = R144*R50;
    double R146 = R132 - R134 + R136 + R138 - R140 + R141;
    double R147 = R109 - R111;
    double R148 = R112*R47 + R147*R45 - R44;
    double R149 = R114*R148;
    double R150 = R112*R40 + R147*R36 - R35;
    double R151 = -R113*R114*R88 - R114*R150*R93 + R149*R60;
    double R152 = R114*R50;
    double R153 = R129*R41;
    double R154 = R113*R152*R28 + R120*R95 + R130*R87 + R133*R96 + R135*R97 + R139*R90 + R149*R61 + R150*R152*R41 + R153*R92;
    double R155 = 2*R66;
    double R156 = R155*(R102*R146 + R151*R64 + R154);
    double R157 = R156*R50;
    double R158 = R155*(R146*R98 + R151 + R154*R64);
    double R159 = ((1.0/2.0)*R105*(R113*R115 - R120*R121 - R130*R131 + R143*R88 - R145*R28 - R157*R28 + R158*R88) + (1.0/2.0)*R106*(R115*R148 - R121*R133 - R131*R139 - R143*R60 - R144*R61 - R156*R61 - R158*R60) + (1.0/2.0)*R107*(R115*R150 - R121*R135 - R131*R153 + R143*R93 - R145*R41 - R157*R41 + R158*R93))/sqrt(pow(R105, 2) + pow(R106, 2) + pow(R107, 2));
    double R160 = R48*R57;
    double R161 = R160*a1 + R62;
    double R162 = -R58*a1 + R62*b1;
    double R163 = -R160*b1 - R58;
    double R164 = pow(pow(R161, 2) + pow(R162, 2) + pow(R163, 2), -1.0/2.0);
    double result = ((R161*R164*R87 + R162*R164*R90 + R163*R164*R92 > 0) ? (
   -R159
)
: (
   R159
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_b(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(panel_b);
    double R1 = cos(plane_a);
    double R2 = cos(plane_b);
    double R3 = R1*R2;
    double R4 = R0*R3;
    double R5 = sin(panel_a);
    double R6 = 1.0*R5;
    double R7 = sin(plane_b);
    double R8 = sin(panel_g);
    double R9 = cos(panel_a);
    double R10 = R8*R9;
    double R11 = sin(panel_b);
    double R12 = cos(panel_g);
    double R13 = R12*R5;
    double R14 = -R10 + R11*R13;
    double R15 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R16 = 1.0/R15;
    double R17 = R16*panel_straw0x;
    double R18 = R12*R9;
    double R19 = R5*R8;
    double R20 = R11*R19 + R18;
    double R21 = R16*panel_straw0y;
    double R22 = 1.0*R14*R17 - 1.0*R20*R21;
    double R23 = 1.0*R14*R21 + 1.0*R17*R20;
    double R24 = sin(plane_a);
    double R25 = R2*R24;
    double R26 = -R22*R7 + R23*R25 + R4*R6;
    double R27 = sin(plane_g);
    double R28 = R24*R27;
    double R29 = cos(plane_g);
    double R30 = R1*R29;
    double R31 = R30*R7;
    double R32 = R28 + R31;
    double R33 = R0*R6;
    double R34 = R2*R29;
    double R35 = R1*R27;
    double R36 = R24*R29;
    double R37 = R36*R7;
    double R38 = -R35 + R37;
    double R39 = R22*R34 + R23*R38 + R32*R33;
    double R40 = R35*R7;
    double R41 = -R36 + R40;
    double R42 = R2*R27;
    double R43 = R28*R7;
    double R44 = R30 + R43;
    double R45 = R22*R42 + R23*R44 + R33*R41;
    double R46 = pow(R26, 2) + pow(R39, 2) + pow(R45, 2);
    double R47 = pow(R46, -1.0/2.0);
    double R48 = R26*R47;
    double R49 = pow(a1, 2);
    double R50 = pow(b1, 2);
    double R51 = R49 + R50 + 1;
    double R52 = 1.0/R51;
    double R53 = pow(R49*R52 + R50*R52 + R52, -1.0/2.0);
    double R54 = R47*R53;
    double R55 = pow(R51, -1.0/2.0);
    double R56 = R26*R55;
    double R57 = R56*b1;
    double R58 = R45*R47;
    double R59 = R53*R55;
    double R60 = R39*R55;
    double R61 = R60*a1;
    double R62 = R54*R57 + R54*R61 - R58*R59;
    double R63 = 1.0 - pow(R62, 2);
    double R64 = 1.0/R63;
    double R65 = -plane_z;
    double R66 = R65 + panel_dz + panel_straw0z;
    double R67 = R17*panel_dx - R21*panel_dy + panel_straw0x;
    double R68 = R17*panel_dy + R21*panel_dx + panel_straw0y;
    double R69 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R70 = -R15 + R69;
    double R71 = R11*R3;
    double R72 = R0*R17;
    double R73 = R0*R21;
    double R74 = R12*R72 - R73*R8;
    double R75 = R12*R73 + R72*R8;
    double R76 = -panel_straw0z + wire_z;
    double R77 = R0*R9;
    double R78 = R11*R18 + R19;
    double R79 = R10*R11 - R13;
    double R80 = R17*R78 - R21*R79;
    double R81 = R17*R79 + R21*R78;
    double R82 = -R25*R68 - R3*R66 + R65 + R67*R7 - R70*(R25*R75 - R7*R74 - R71) - R76*(R25*R81 + R3*R77 - R7*R80) + b0 - plane_dz;
    double R83 = R59*b1;
    double R84 = R82*R83;
    double R85 = R11*R41;
    double R86 = -R41*R66 - R42*R67 - R44*R68 - R70*(R42*R74 + R44*R75 - R85) - R76*(R41*R77 + R42*R80 + R44*R81) - plane_dy;
    double R87 = R59*R86;
    double R88 = R11*R32;
    double R89 = -R32*R66 - R34*R67 - R38*R68 - R70*(R34*R74 + R38*R75 - R88) - R76*(R32*R77 + R34*R80 + R38*R81) + a0 - plane_dx;
    double R90 = R59*a1;
    double R91 = R89*R90;
    double R92 = R39*R47;
    double R93 = R48*R82 + R58*R86 + R89*R92;
    double R94 = -R62*(R84 - R87 + R91) + R93;
    double R95 = R64*R94;
    double R96 = -R84 + R87 - R91;
    double R97 = R62*R93 + R96;
    double R98 = R64*R97;
    double R99 = -R48*R95 + R82 + R83*R98;
    double R100 = -R58*R95 - R59*R98 + R86;
    double R101 = R89 + R90*R98 - R92*R95;
    double R102 = panel_straw0z - wire_z;
    double R103 = R10*R73;
    double R104 = R18*R72;
    double R105 = R10*R72 + R18*R73;
    double R106 = R102*(R105*R25 + R7*(R103 - R104) - R71*R9);
    double R107 = R15 - R69;
    double R108 = R11*R12;
    double R109 = R108*R17;
    double R110 = R11*R8;
    double R111 = R110*R21;
    double R112 = -R108*R21 - R110*R17;
    double R113 = R107*(R112*R25 - R4 + R7*(R109 - R111));
    double R114 = 1.0*R13*R72;
    double R115 = 1.0*R19*R73;
    double R116 = R7*(-R114 + R115);
    double R117 = R19*R72;
    double R118 = R13*R73;
    double R119 = R25*(1.0*R117 + 1.0*R118);
    double R120 = R47*(R116 + R119 - R6*R71);
    double R121 = 2*R95;
    double R122 = R11*R5;
    double R123 = R122*(1.0*R28 + 1.0*R31);
    double R124 = R114 - R115;
    double R125 = R124*R34;
    double R126 = R117 + R118;
    double R127 = R126*(-1.0*R35 + 1.0*R37);
    double R128 = R122*(-1.0*R36 + 1.0*R40);
    double R129 = R124*R42;
    double R130 = R126*(1.0*R30 + 1.0*R43);
    double R131 = (-1.0/2.0*R26*(2*R116 + 2*R119 - 2.0*R5*R71) - 1.0/2.0*R39*(-2*R123 + 2*R125 + 2*R127) - 1.0/2.0*R45*(-2*R128 + 2*R129 + 2*R130))/pow(R46, 3.0/2.0);
    double R132 = R131*R26;
    double R133 = R120*R83;
    double R134 = R47*(-R128 + R129 + R130);
    double R135 = R134*R59;
    double R136 = R47*(-R123 + R125 + R127);
    double R137 = R136*R90;
    double R138 = R131*R53;
    double R139 = R138*R57;
    double R140 = R131*R45;
    double R141 = R140*R59;
    double R142 = R138*R61;
    double R143 = 2*R62*(2*R133 - 2*R135 + 2*R137 + 2*R139 - 2*R141 + 2*R142)/pow(R63, 2);
    double R144 = R143*R97;
    double R145 = R143*R94;
    double R146 = R106 + R113;
    double R147 = -R103 + R104;
    double R148 = R102*(R105*R44 + R147*R42 - R85*R9);
    double R149 = -R109 + R111;
    double R150 = R107*(R0*(R36 - R40) + R112*R44 + R149*R42);
    double R151 = R148 + R150;
    double R152 = R102*(R105*R38 + R147*R34 - R88*R9);
    double R153 = R107*(R0*(-R28 - R31) + R112*R38 + R149*R34);
    double R154 = R152 + R153;
    double R155 = -R146*R83 + R151*R59 - R154*R90;
    double R156 = R133 - R135 + R137 + R139 - R141 + R142;
    double R157 = R131*R39;
    double R158 = R120*R82 + R132*R82 + R134*R86 + R136*R89 + R140*R86 + R146*R48 + R151*R58 + R154*R92 + R157*R89;
    double R159 = 2*R64;
    double R160 = R159*(R155*R62 + R156*R96 + R158);
    double R161 = R159*(R155 + R156*R93 + R158*R62);
    double R162 = ((1.0/2.0)*R100*(-R121*R134 - R121*R140 - R144*R59 - R145*R58 + 2*R148 + 2*R150 - R160*R58 - R161*R59) + (1.0/2.0)*R101*(-R121*R136 - R121*R157 + R144*R90 - R145*R92 + 2*R152 + 2*R153 - R160*R92 + R161*R90) + (1.0/2.0)*R99*(2*R106 + 2*R113 - R120*R121 - R121*R132 + R144*R83 - R145*R48 - R160*R48 + R161*R83))/sqrt(pow(R100, 2) + pow(R101, 2) + pow(R99, 2));
    double R163 = R45*R55;
    double R164 = R163*a1 + R60;
    double R165 = -R56*a1 + R60*b1;
    double R166 = -R163*b1 - R56;
    double R167 = pow(pow(R164, 2) + pow(R165, 2) + pow(R166, 2), -1.0/2.0);
    double result = ((R164*R167*R82 + R165*R167*R86 + R166*R167*R89 > 0) ? (
   -R162
)
: (
   R162
))/driftvel;
    return result;
}


double CosmicTrack_DCA_Deriv_panel_g(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
    double R0 = cos(plane_a);
    double R1 = cos(plane_b);
    double R2 = R0*R1;
    double R3 = sin(panel_a);
    double R4 = cos(panel_b);
    double R5 = 1.0*R3*R4;
    double R6 = sin(plane_b);
    double R7 = sin(panel_g);
    double R8 = cos(panel_a);
    double R9 = R7*R8;
    double R10 = sin(panel_b);
    double R11 = cos(panel_g);
    double R12 = R11*R3;
    double R13 = R10*R12 - R9;
    double R14 = sqrt(pow(panel_straw0x, 2) + pow(panel_straw0y, 2));
    double R15 = 1.0/R14;
    double R16 = R15*panel_straw0x;
    double R17 = R13*R16;
    double R18 = R11*R8;
    double R19 = R3*R7;
    double R20 = R10*R19;
    double R21 = R18 + R20;
    double R22 = R15*panel_straw0y;
    double R23 = 1.0*R17 - 1.0*R21*R22;
    double R24 = R13*R22;
    double R25 = 1.0*R16*R21 + 1.0*R24;
    double R26 = sin(plane_a);
    double R27 = R1*R26;
    double R28 = R2*R5 - R23*R6 + R25*R27;
    double R29 = sin(plane_g);
    double R30 = R26*R29;
    double R31 = cos(plane_g);
    double R32 = R0*R31;
    double R33 = R30 + R32*R6;
    double R34 = R1*R31;
    double R35 = R0*R29;
    double R36 = R26*R31;
    double R37 = R36*R6;
    double R38 = -R35 + R37;
    double R39 = R23*R34 + R25*R38 + R33*R5;
    double R40 = R35*R6 - R36;
    double R41 = R1*R29;
    double R42 = R30*R6;
    double R43 = R32 + R42;
    double R44 = R23*R41 + R25*R43 + R40*R5;
    double R45 = pow(R28, 2) + pow(R39, 2) + pow(R44, 2);
    double R46 = pow(R45, -1.0/2.0);
    double R47 = R28*R46;
    double R48 = pow(a1, 2);
    double R49 = pow(b1, 2);
    double R50 = R48 + R49 + 1;
    double R51 = 1.0/R50;
    double R52 = pow(R48*R51 + R49*R51 + R51, -1.0/2.0);
    double R53 = R46*R52;
    double R54 = pow(R50, -1.0/2.0);
    double R55 = R28*R54;
    double R56 = R55*b1;
    double R57 = R44*R46;
    double R58 = R52*R54;
    double R59 = R39*R54;
    double R60 = R59*a1;
    double R61 = R53*R56 + R53*R60 - R57*R58;
    double R62 = 1.0 - pow(R61, 2);
    double R63 = 1.0/R62;
    double R64 = -plane_z;
    double R65 = R64 + panel_dz + panel_straw0z;
    double R66 = R16*panel_dx - R22*panel_dy + panel_straw0x;
    double R67 = R16*panel_dy + R22*panel_dx + panel_straw0y;
    double R68 = sqrt(pow(wire_x, 2) + pow(wire_y, 2));
    double R69 = -R14 + R68;
    double R70 = R16*R4;
    double R71 = R22*R4;
    double R72 = R11*R70 - R7*R71;
    double R73 = R7*R70;
    double R74 = R11*R71;
    double R75 = R73 + R74;
    double R76 = -panel_straw0z + wire_z;
    double R77 = R4*R8;
    double R78 = R10*R18 + R19;
    double R79 = R16*R78;
    double R80 = R10*R9;
    double R81 = -R12 + R80;
    double R82 = -R22*R81 + R79;
    double R83 = R22*R78;
    double R84 = R16*R81 + R83;
    double R85 = -R2*R65 - R27*R67 + R6*R66 + R64 - R69*(-R10*R2 + R27*R75 - R6*R72) - R76*(R2*R77 + R27*R84 - R6*R82) + b0 - plane_dz;
    double R86 = R58*b1;
    double R87 = R85*R86;
    double R88 = -R40*R65 - R41*R66 - R43*R67 - R69*(-R10*R40 + R41*R72 + R43*R75) - R76*(R40*R77 + R41*R82 + R43*R84) - plane_dy;
    double R89 = R58*R88;
    double R90 = -R33*R65 - R34*R66 - R38*R67 - R69*(-R10*R33 + R34*R72 + R38*R75) - R76*(R33*R77 + R34*R82 + R38*R84) + a0 - plane_dx;
    double R91 = R58*a1;
    double R92 = R90*R91;
    double R93 = R39*R46;
    double R94 = R47*R85 + R57*R88 + R90*R93;
    double R95 = -R61*(R87 - R89 + R92) + R94;
    double R96 = R63*R95;
    double R97 = -R87 + R89 - R92;
    double R98 = R61*R94 + R97;
    double R99 = R63*R98;
    double R100 = -R47*R96 + R85 + R86*R99;
    double R101 = -R57*R96 - R58*R99 + R88;
    double R102 = R90 + R91*R99 - R93*R96;
    double R103 = R14 - R68;
    double R104 = R103*(R27*R72 + R6*R75);
    double R105 = panel_straw0z - wire_z;
    double R106 = R12 - R80;
    double R107 = R106*R16;
    double R108 = R106*R22 + R79;
    double R109 = R105*(R108*R27 + R6*(-R107 + R83));
    double R110 = 1.0*R24;
    double R111 = -R18 - R20;
    double R112 = 1.0*R111*R16;
    double R113 = R6*(R110 - R112);
    double R114 = R111*R22;
    double R115 = R27*(1.0*R114 + 1.0*R17);
    double R116 = R46*(R113 + R115);
    double R117 = 2*R96;
    double R118 = -R110 + R112;
    double R119 = R118*R41;
    double R120 = R114 + R17;
    double R121 = R120*(1.0*R32 + 1.0*R42);
    double R122 = R118*R34;
    double R123 = R120*(-1.0*R35 + 1.0*R37);
    double R124 = (-1.0/2.0*R28*(2*R113 + 2*R115) - 1.0/2.0*R39*(2*R122 + 2*R123) - 1.0/2.0*R44*(2*R119 + 2*R121))/pow(R45, 3.0/2.0);
    double R125 = R124*R28;
    double R126 = R116*R86;
    double R127 = R46*(R119 + R121);
    double R128 = R127*R58;
    double R129 = R46*(R122 + R123);
    double R130 = R129*R91;
    double R131 = R124*R52;
    double R132 = R131*R56;
    double R133 = R124*R44;
    double R134 = R133*R58;
    double R135 = R131*R60;
    double R136 = 2*R61*(2*R126 - 2*R128 + 2*R130 + 2*R132 - 2*R134 + 2*R135)/pow(R62, 2);
    double R137 = R136*R98;
    double R138 = R136*R95;
    double R139 = R104 + R109;
    double R140 = -R73 - R74;
    double R141 = R103*(R140*R41 + R43*R72);
    double R142 = R107 - R83;
    double R143 = R105*(R108*R43 + R142*R41);
    double R144 = R141 + R143;
    double R145 = R103*(R140*R34 + R38*R72);
    double R146 = R105*(R108*R38 + R142*R34);
    double R147 = R145 + R146;
    double R148 = -R139*R86 + R144*R58 - R147*R91;
    double R149 = R126 - R128 + R130 + R132 - R134 + R135;
    double R150 = R124*R39;
    double R151 = R116*R85 + R125*R85 + R127*R88 + R129*R90 + R133*R88 + R139*R47 + R144*R57 + R147*R93 + R150*R90;
    double R152 = 2*R63;
    double R153 = R152*(R148*R61 + R149*R97 + R151);
    double R154 = R152*(R148 + R149*R94 + R151*R61);
    double R155 = ((1.0/2.0)*R100*(2*R104 + 2*R109 - R116*R117 - R117*R125 + R137*R86 - R138*R47 - R153*R47 + R154*R86) + (1.0/2.0)*R101*(-R117*R127 - R117*R133 - R137*R58 - R138*R57 + 2*R141 + 2*R143 - R153*R57 - R154*R58) + (1.0/2.0)*R102*(-R117*R129 - R117*R150 + R137*R91 - R138*R93 + 2*R145 + 2*R146 - R153*R93 + R154*R91))/sqrt(pow(R100, 2) + pow(R101, 2) + pow(R102, 2));
    double R156 = R44*R54;
    double R157 = R156*a1 + R59;
    double R158 = -R55*a1 + R59*b1;
    double R159 = -R156*b1 - R55;
    double R160 = pow(pow(R157, 2) + pow(R158, 2) + pow(R159, 2), -1.0/2.0);
    double result = ((R157*R160*R85 + R158*R160*R88 + R159*R160*R90 > 0) ? (
   -R155
)
: (
   R155
))/driftvel;
    return result;
}


std::vector<double> CosmicTrack_DCA_LocalDeriv(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
        std::vector<double> result = {CosmicTrack_DCA_Deriv_a0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_b0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_a1(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_b1(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_t0(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel)};
return result;
}

std::vector<double> CosmicTrack_DCA_GlobalDeriv(double const& a0, double const& b0, double const& a1, double const& b1, double const& t0, double const& plane_dx, double const& plane_dy, double const& plane_dz, double const& plane_a, double const& plane_b, double const& plane_g, double const& panel_dx, double const& panel_dy, double const& panel_dz, double const& panel_a, double const& panel_b, double const& panel_g, double const& wire_x, double const& wire_y, double const& wire_z, double const& wdir_x, double const& wdir_y, double const& wdir_z, double const& plane_x, double const& plane_y, double const& plane_z, double const& panel_straw0x, double const& panel_straw0y, double const& panel_straw0z, double const& driftvel)
{
        std::vector<double> result = {CosmicTrack_DCA_Deriv_plane_dx(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_dy(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_dz(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_a(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_b(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_plane_g(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dx(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dy(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_dz(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_a(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_b(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel),
CosmicTrack_DCA_Deriv_panel_g(a0,b0,a1,b1,t0,plane_dx,plane_dy,plane_dz,plane_a,plane_b,plane_g,panel_dx,panel_dy,panel_dz,panel_a,panel_b,panel_g,wire_x,wire_y,wire_z,wdir_x,wdir_y,wdir_z,plane_x,plane_y,plane_z,panel_straw0x,panel_straw0y,panel_straw0z,driftvel)};
return result;
}

