# Run StrawAndCaloDigisFromFragments module to convert artdaq::Fragment collections
# into TRK and CAL digi collections.
# Usage: mu2e -c DAQ/test/generateDigiFromFragment.fcl -s <input art files> -n '-1'
#
#
# Contact person G. Pezzullo
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardServices.fcl"
#include "DAQ/fcl/prolog_trigger.fcl"
process_name : FragmentToDigi

source : {
   module_type : RootInput
   fileNames   : @nil

   # firstEvent  : 500
   maxEvents   : -1
#   inputCommands: ["keep *", 
#                   "drop *Mu2eEventHeader*_*_*_*"]
}

services : @local::Services.Reco

physics : {

   producers : {
      makeSD:
      {
	 @table::DAQ.producers.makeSD
      }

      CaloDigiFromShower:		
      {	 
	 @table::DAQ.producers.CaloDigiFromShower
      }
   }

   analyzers  : {
      readFragments : {
	 module_type : FragmentAna
	 diagLevel   : 0
	 parseCAL    : 1
	 parseTRK    : 1
	 caloTag     : "daq:calo"
	 trkTag      : "daq:trk"
      }
   }

   #  t1 : [ makeSD ] 
   t1 : [ makeSD, CaloDigiFromShower ] 
   e1 : [ readFragments, outfile ]

   trigger_paths  : [t1]
   end_paths      : [e1]
   #  end_paths      : []

}

outputs:  {
   outfile :  {
      module_type   :   RootOutput
      fileName      :   "digis_from_frags_debug.art"
      
      outputCommands: [ 
	 "drop *_*_*_*",
	 "keep *_*_*_*"
      ]
   }
}

services.TFileService.fileName : "generateDigiFromFragment_test.root" 
