# -*- mode: tcl -*-
BEGIN_PROLOG
#------------------------------------------------------------------------------
# this file is included by fcl/standardProducers.fcl inside the PROLOG section
# TrkReco/fcl/prolog.fcl
#
# 1. default configuration of the DoubletAmbigResolver
#
# may use a more careful optimization, but this is it for now
#------------------------------------------------------------------------------
TrkReco: {
  McUtils : { tool_type : "TrkRecoMcUtils"
    comboHitCollTag    : "makeSH"
    strawDigiMCCollTag : "compressDigiMCs"
  }
}

TrkReco: { @table::TrkReco
  #------------------------------------------------------------------------------
  # if mcTruth = 0, a dummy ("return-end") implementation of MC truth functions
  # is used with no MC dependence.
  # to really use that, the McUtilsToolBase needs to be moved from Mu2eUtilities *FIXME*
  # into some 'Base' library with no MC dependencies
  #------------------------------------------------------------------------------
  PrintUtils: {
    strawHitCollTag    : "makeSH"
    mcTruth            : 0 #
    mcUtils            : { @table::TrkReco.McUtils } # defined on top of this file
  }

  RobustHelixFit : {
    diagLevel      : 0
    debugLevel     : 0
    CircleInitType : 0     # 0=median, 1=mean
    CircleFitType  : 0     # 0=median, 1=mean
    DontUseFlag    : ["Outlier"]
    minNStrawHits  : 10
    minNHit        : 5
    minXYResid     : 5.

    lambda0        : 0.1
    lstep          : 0.01

    minlambda          : 0.001
    minDfDz            : 0.002
    maxDfDz            : 0.01
    NPhiHistBins       : 25
    PhiHistRangeFactor : 1.2
    MinNPhi            : 2
    maxniter           : 100
    minzsep            : 100.0
    maxzsep            : 500.0
    mindphi            : 0.5
    sigmaPhi           : 0.49
    mindist            : 50.0
    maxdist            : 2000.0

    maxdxy             : 100.0
    maxXDPhi           : 5.0
    minR               : 100.
    maxR               : 600.
    minCenterR         : 100.0
    maxCenterR         : 700.0

    minAbsLambda       : 10.0
    maxAbsLambda       : 700.0

    targetintersect    : false
    TripleRadius       : false
    HitErrorWeight     : false
    UseCaloCluster     : false
    CaloClusterWeight  : 10.0

    targetradius       : 600.0
    trackerradius      : 700.0
    RadiusWindow       : 10.0
    ntripleMin         : 5
    ntripleMax         : 500

    maxzsep            : 1000.
    fitFZMinLambda     : 30
    fitFZMaxLambda     : 1000
    fitFZStepLambda    : 10

    minArea            : 500.0


    nLoopsdfdz: 2
    use_initFZ_from_dzFrequency: false
    initFZMinLambda: 30.
    initFZMaxLambda: 1000.
    initFZStepLambda: 20.
    initFZFrequencyNSigma: 3
    initFZFrequencyBinsToIntegrate: 10
    initFZFrequencyArraySize:  200
    initFZFrequencyNMaxPeaks: 10
    initFZFrequencyTolerance: 2.
  }

  DoubletAmbigResolver : {
    debugLevel                          : 0
    HitMinDrift         : 0.2
    ZeroDriftPenalty        : 0.05
    HitAmbigPenalty         : false
    #------------------------------------------------------------------------------
    # the following parameters are used for making decisions, but not for
    # the doublet reconstruction
    #------------------------------------------------------------------------------
    # sigmaSlope                          : 0.025
    sigmaSlope                          : 0.05
    maxDoubletChi2                      : 20.   # to account 3**2 + 3**2, not quite rigorous mathematically
    scaleErrDoublet                     : 5.    # external error scale factor
    minDriftDoublet                     : 0.3
    deltaDriftDoublet                   : 0.3
    excludeBothHits                     : 1
    minChi2Ratio                        : 0.2
    tempScale                           : 0.5
    penaltyScale                        : 0.4
    maxHitChi                           : 5.    #
    useMeanResidual                     : 0     # default: dont use
    maxMeanResidual                     : 0.8
  }
  producers : {
    MergeHelices : { module_type : MergeHelices
      debugLevel                 : 0
      deltanh                    : 5     # if the difference in the strawHit counts between the helices is less than deltanh, use the chisq of the helices to select the better helix
      scaleXY                    : 1.1   # scale the weight for having chi2XY/ndof distribution peaking at 1
      scaleZPhi                  : 0.75  # scale the weight for having chi2ZPhi/ndof distribution peaking at 1
    }
  }
}
END_PROLOG
