#
#  This script runs the TrackAnalsys module to create a prototype track-based analysis TTree.  For example:
#  > mu2e --config TrkDiag/test/TrkAnaDigis.fcl --source-list (your files) --TFile TrkAna.root --nevts=100
# will process 100 events from (your files).
#
# David Brown (LBNL) 13 July 2016
#
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "TrkDiag/fcl/prolog_legacy.fcl"

process_name : TrkAnaDigis

source : { module_type : RootInput }

services : @local::Services.Reco

physics :
{
  producers : @local::TrkAna.producers
  analyzers :  {
    @table::TrkAna.analyzers
#    @table::TrkDiag.analyzers
  }
}

physics.TrkAnaTriggerPath : [ @sequence::TrkAna.TrkCaloRecoSequence ]
physics.TrkAnaEndPath : [ @sequence::TrkAna.EndSequence, genCountLogger ]
#
physics.analyzers.TrkAnaNeg.FillTrkQualInfo : true
physics.analyzers.TrkAnaPos.FillTrkQualInfo : true

# You can add detailed (hit) information to the TTree by setting diagLevel to 2
physics.analyzers.TrkAnaNeg.diagLevel : 1
physics.analyzers.TrkAnaPos.diagLevel : 1

services.TFileService.fileName: "nts.owner.trkanadigis.version.sequencer.root"
