#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "TrkDiag/fcl/prolog.fcl"

process_name : TrkAnaRecoUpstream

source : { module_type : RootInput }

services : @local::Services.Reco

physics :
{
  producers : { @table::TrkAnaReco.producers }
  analyzers : { @table::TrkAnaReco.analyzers }
}

physics.TrkAnaTrigPath : [ @sequence::TrkAnaReco.TrigSequence ]
physics.TrkAnaEndPath : [ @sequence::TrkAnaReco.EndSequence ]

physics.analyzers.TrkAnaNeg.candidate : @local::UeM
physics.analyzers.TrkAnaNeg.supplements : [ @local::DeM, @local::UmuM ]
physics.analyzers.TrkAnaPos.candidate : @local::UeP
physics.analyzers.TrkAnaPos.supplements : [ @local::DeP, @local::UmuP ]

# Include more information (MC and full TrkQual branches)
physics.analyzers.TrkAnaNeg.candidate.options : @local::AllOpt
physics.analyzers.TrkAnaNeg.candidate.options.fillTrkPID : false
physics.analyzers.TrkAnaPos.candidate.options : @local::AllOpt
physics.analyzers.TrkAnaPos.candidate.options.fillTrkPID : false

# for hit level diagnostics, set diagLevel to 2
physics.analyzers.TrkAnaNeg.diagLevel : 1
physics.analyzers.TrkAnaNeg.FillMCInfo : true
physics.analyzers.TrkAnaNeg.AnalyzeCRV : true
physics.analyzers.TrkAnaNeg.FillTriggerInfo : true
physics.analyzers.TrkAnaPos.diagLevel : 1
physics.analyzers.TrkAnaPos.FillMCInfo : true
physics.analyzers.TrkAnaPos.AnalyzeCRV : true
physics.analyzers.TrkAnaPos.FillTriggerInfo : true

services.TFileService.fileName: "nts.owner.trkana-reco.version.sequencer.root"
