#
# Minimal job to create BkgDiag output off of digis
#
# To create a functional job you must add database purpose and version; ie create a fcl stub that #includes this file and
# adds (for instance):
# services.DbService.purpose: MDC2020_perfect
# services.DbService.version: v1_0
#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/TrkDiag/fcl/prolog.fcl"
#include "Offline/TrkHitReco/fcl/prolog.fcl"
process_name: BkgDiag
source : { module_type : RootInput }
services : @local::Services.Reco
physics :
{
  producers : {
    @table::TrkHitReco.producers
  }
  analyzers : {
    BD : {
      @table::BD
      diagLevel : 1
    }
    evtprint : {
      module_type : RunSubrunEvent
      printSam    : false
      printRun    : false
      printSubrun : false
      printEvent  : true
    }
  }
  EndPath : [BD]
  RecoPath : [ @sequence::TrkHitReco.PrepareHits ]
}
physics.end_paths : [ EndPath ]
physics.trigger_paths : [ RecoPath ]
physics.producers.FlagBkgHits.SaveBkgClusters : true
services.TimeTracker.printSummary: true
services.TFileService.fileName: "nts.owner.BkgDiag.version.sequence.root"
