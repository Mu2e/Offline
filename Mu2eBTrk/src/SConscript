#!/usr/bin/env python
#
# Original author Rob Kutschke.
#

import os, re
Import('env')

Import('mu2e_helper')

helper=mu2e_helper(env)

rootlibs  = env['ROOTLIBS']
babarlibs = env['BABARLIBS']

mainlib = helper.make_mainlib ( [
    'mu2e_GeometryService',
    'mu2e_BFieldGeom',
    'mu2e_TrackerGeom',
    'mu2e_GlobalConstantsService',
    'mu2e_DataProducts',
    'mu2e_GeneralUtilities',
    babarlibs,
    'art_Framework_Core',
    'art_Framework_Principal',
    'art_Framework_Services_Registry',
    'art_root_io_TFileService',
    'art_root_io_tfile_support',
    'art_Persistency_Provenance',
    'art_Persistency_Common',
    'art_Utilities',
    'canvas',
    'fhiclcpp',
    'fhiclcpp_types',
    'tbb',
    'cetlib',
    'cetlib_except',
    rootlibs,
    'CLHEP',
    'xerces-c'
    ] )

# Fixme: split into link lists for each module.
helper.make_plugins( [
   mainlib,
   'mu2e_GeometryService',
   'mu2e_BFieldGeom',
   'mu2e_TrackerGeom',
   'mu2e_GlobalConstantsService',
   'mu2e_DataProducts',
   'mu2e_GeneralUtilities',
   babarlibs,
   'art_Framework_Core',
   'art_Framework_Principal',
   'art_Framework_Services_Registry',
   'art_root_io_tfile_support',
   'art_root_io_TFileService',
   'art_Framework_Services_Optional_RandomNumberGenerator',
   'art_Persistency_Common',
   'art_Persistency_Provenance',
   'art_Utilities',
   'canvas',
   'MF_MessageLogger',
   'fhiclcpp',
   'cetlib',
   'cetlib_except',
   'CLHEP',
   rootlibs,
   'xerces-c',
   'boost_filesystem',
    ] )


# This tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
