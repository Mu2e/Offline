# This module simulates a photon being fired at the STM detector of choice, and generates a tree with the energy deposited in the detector
# Used to investigate the full energy deposition of the STM detectors
# Original author : Pawel Plesniak
# Note - edit the parameters in this prolog.fcl, aside from the @nil parmaeters

#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/STMMC/fcl/prolog.fcl"

process_name: DetetorEfficiency

source : {
  module_type : EmptyEvent
  maxEvents : @local::Efficiency.NPhotons
}

services : @local::Services.Sim

physics: {
  producers : {
    generate : {
      module_type : PhotonGun
      x : @local::ComponentPositions.HPGe.x
      y : @local::ComponentPositions.HPGe.y
      z : @local::ComponentPositions.HPGe.z
      E : @local::Efficiency.PhotonEnergy
    }
    g4run : @local::g4run
  }

  analyzers : {
    EDep : {
      module_type : DetectorEfficiency
    }
  }

  p1 : [generate, g4run]
  trigger_paths : [p1]
}

physics.producers.g4run.physics.physicsListName: "QGSP_BERT_EMZ"
physics.producers.g4run.SDConfig.enableSD: [STMDet]

services.SeedService.baseSeed         : @nil
services.SeedService.maxUniqueEngines : @nil
services.TFileService.fileName        : @local::Efficiency.OutputFilename
