# This module simulates a photon being fired at the STM detector of choice, and applies the full digitization stack
# Original author : Pawel Plesniak
# Note - edit the parameters in this prolog.fcl, aside from the @nil parmaeters

#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/STMMC/fcl/prolog.fcl"

process_name: TestFullDigitizationStack

source : {
  module_type : EmptyEvent
  maxEvents : 10
}

services : @local::Services.Sim

physics: {
  producers : {
    generate : {
      module_type : PhotonGun
      x : -3990
      y : @local::ComponentPositions.HPGeCrystalEndcapCentre.y
      z : 40637
      E : 1.809
    }
    g4run : @local::g4run
  }
  p1 : [generate, g4run]
  trigger_paths : [p1]
  output_path : [compressedOutput]
  end_paths : [output_path]
}

outputs : {
  compressedOutput : {
    module_type : RootOutput
    fileName : "testStackUnprocessed.art" #@nil
  }
}

physics.producers.g4run.physics.physicsListName: "QGSP_BERT_EMZ"
physics.producers.g4run.SDConfig.enableSD: [STMDet]

services.SeedService.baseSeed         : 1323454667 #@nil
services.SeedService.maxUniqueEngines : 1 #@nil
physics.producers.g4run.debug.trackingVerbosityLevel : 1
physics.producers.g4run.debug.steppingVerbosityLevel : 1
