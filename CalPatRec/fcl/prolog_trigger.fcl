# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# this file is included by fcl/standardProducers.fcl inside the PROLOG section
# CalPatRec: calorimeter-seeded track finding
# CalPatRec uses its own instance of the hit flags
# DoubletAmbigResolver is defined in TrkReco/fcl/prolog.fcl
#------------------------------------------------------------------------------

BEGIN_PROLOG
#------------------------------------------------------------------------------
# there seems to be a circular dependence between MakeStrawHitPositions and 
# FlagStrawHits ... FlagBkgHits ?
# MakeStrawHitPositions stores the hit flag in StrawHitPosition object
# for that, an existing StrawHitFlagCollection is required
#
# in its turn, the FlagStrawHits module flags if the corresponding hit 
# position 'stereo' and also sets radial selection flag
# it also sets 'timesel' and 'energysel' flags
# if, however, the StrawHitPosition doesnt exist, the 'stereo' and 'radsel' 
# flags are not set
#
# FlagBkgHits produces yet another hit flag collection, copying flags set by 
# the OR of FlagStrawHits and flags stored in StrawHitPositions, and potentially adding 
# a 'delta' and 'isolated' flags
# in principle, FlagBkgHits also uses StereoHitCollection, but that is not a must
#
# yes, there is a circular dependence between the data products.
# Dave runs several instances of the hit flagging modules for a reason
#------------------------------------------------------------------------------ 
#-----------------------------------------------------------------------------
# new format
#------------------------------------------------------------------------------

CprTrigger : { 

#------------------------------------------------------------------------------
# CalPatRec.HelixFinder and HelixFitHack configuratons (pattern recognition)
#------------------------------------------------------------------------------
    TTHelixFinderAlg : { @table::CalPatRec.HelixFinderAlg
	targetconsistent      : 0
	maxZTripletSearch     : 0. # mm            
	maxDfDz               : 0.025
	initDfDz              : 0
    }
#------------------------------------------------------------------------------
# SeedFitter(SeedFitHackNew) configuration for the final track fit: NOT USED ANYMORE
#------------------------------------------------------------------------------
}
#------------------------------------------------------------------------------
# producers
#------------------------------------------------------------------------------
CprTrigger : { @table::CprTrigger 

    producers : { 
#	@table::CaloClusterFast.producers

	cprFetchDigis : { module_type:PrefetchData
	    debugLevel                    : 0
	    mcDiag                        : true

	    fetchCaloDigis                : 1
	    fetchStrawDigis               : 1
	    fetchStrawHits                : 0
	    fetchStrawHitFlags            : 0
	    fetchStrawHitPositions        : 0
	    fetchComboHits                : 0

	    caloDigiCollectionTag         : CaloDigiFromShower
	    strawDigiCollection           : makeSD
	    strawHitCollectionTag         : TTmakeSH
	    strawHitPositionCollectionTag : TTmakeSH
	    strawHitFlagCollectionTag     : TTmakeSH
	    comboHitCollectionTag         : TTmakePH # MakeStereoHits
	}

	TTDeltaFinder : { @table::CalPatRec.producers.DeltaFinder
	    comboHitCollectionTag         : TTmakePH                # input coll
	    strawHitCollectionTag         : TTmakeSH                # input coll
	    timePeakCollectionTag         : TTfastTimeClusterFinder
	    writeStrawHits                : 0
	    filter                        : 1
	}

#------------------------------------------------------------------------------
# default configuration: DEM
# CalPatRec, so far, has been validated only for e- 
#------------------------------------------------------------------------------
	TTCalSeedFit : { @table::CalPatRec.producers.CalSeedFit
	    ComboHitCollection          : TTmakeSH			 
#	    SeedCollection              : "TTCalHelixFinder:Positive"
	    SeedCollection              : "TTCalHelixMergerDeM"
	}
	
	TTCalTrkFit  : { @table::CalPatRec.producers.CalTrkFit
	    ComboHitCollection          : TTmakeSH			 
	    SeedCollection              : TTCalSeedFit	
	    StrawHitFlagCollection      : "TTflagBkgHits:StrawHits"
	}
    }

    filters : { 
#------------------------------------------------------------------------------
# new modules
#------------------------------------------------------------------------------
	TTfastTimeClusterFinder      : { @table::CalPatRec.filters.CalTimePeakFinder
	    useAsFilter                                 : 0
	    StrawHitCollectionLabel                     : TTmakePH          
	    StrawHitFlagCollectionLabel                 : ShouldNotBeUsed
	    caloClusterModuleLabel                      : CaloClusterFast
	    HitSelectionBits                            : ["EnergySelection","TimeSelection"] 
	    BackgroundSelectionBits                     : ["Background"] 
	    minClusterEnergy                            : 50.    # MeV
	    minClusterSize                              : 2      # number of crystals
	    minClusterTime                              : 500.   # ns
	}


	TTCalTimePeakFinder          : { @table::CalPatRec.filters.CalTimePeakFinder
	    useAsFilter                                 : 0
	    StrawHitCollectionLabel                     : TTmakePH          
	    StrawHitFlagCollectionLabel                 : "TTflagBkgHits:ComboHits"
	    caloClusterModuleLabel                      : CaloClusterFast
	    HitSelectionBits                            : ["EnergySelection","TimeSelection"] 
	    BackgroundSelectionBits                     : ["Background"] 
	    minClusterEnergy                            : 50.    # MeV
	    minClusterSize                              : 2      # number of crystals
	    minClusterTime                              : 500.   # ns
	}

	TTCalHelixFinder             : { @table::CalPatRec.filters.CalHelixFinder
	    useAsFilter                                 : 0
	    StrawHitCollectionLabel                     : TTmakePH
	    StrawHitFlagCollectionLabel                 : "TTflagBkgHits:ComboHits"
	    TimeClusterCollectionLabel                  : TTCalTimePeakFinder

	    # HelixFinderAlg configuraton (pattern recognition)
	    HelixFinderAlg                              : { @table::CprTrigger.TTHelixFinderAlg }
	}

	TTCalTimePeakFinderUCC       : { @table::CalPatRec.filters.CalTimePeakFinder
	    useAsFilter                                 : 0
	    StrawHitCollectionLabel                     : TTmakePHUCC          
	    StrawHitFlagCollectionLabel                 : "TTflagBkgHitsUCC:ComboHits"
	    caloClusterModuleLabel                      : CaloClusterFast
	    HitSelectionBits                            : ["EnergySelection","TimeSelection"] 
	    BackgroundSelectionBits                     : ["Background"] 
	    minClusterEnergy                            : 50.    # MeV
	    minClusterSize                              : 2      # number of crystals
	    minClusterTime                              : 500.   # ns
	}

	TTCalHelixFinderUCC          : { @table::CalPatRec.filters.CalHelixFinder
	    useAsFilter                                 : 0
	    StrawHitCollectionLabel                     : TTmakePHUCC
	    StrawHitFlagCollectionLabel                 : "TTflagBkgHitsUCC:ComboHits"
	    TimeClusterCollectionLabel                  : TTCalTimePeakFinderUCC

	    # HelixFinderAlg configuraton (pattern recognition)
	    HelixFinderAlg                              : { @table::CprTrigger.TTHelixFinderAlg }
	}
    }
}

#------------------------------------------------------------------------------
# calorimeter-seeded tracking makes sense only for downstream particles
#------------------------------------------------------------------------------
CprTrigger: { @table::CprTrigger 
    producers : { @table::CprTrigger.producers
	
	TTCalSeedFitDem                : { @table::CprTrigger.producers.TTCalSeedFit        
	    SeedCollection             : "TTCalHelixMergerDeM"
	}
	TTCalSeedFitUCCDem             : { @table::CprTrigger.producers.TTCalSeedFit        
	    ComboHitCollection          : TTmakeSHUCC			 
	    SeedCollection             : "TTCalHelixUCCMergerDeM"
	}
	TTCalSeedFitDmm                  : { @table::CprTrigger.producers.TTCalSeedFit 
	    fitparticle                : @local::Particle.muminus
	    SeedCollection             : "TTCalHelixFinderDm:Positive"
	}
	TTCalSeedFitDep                  : { @table::CprTrigger.producers.TTCalSeedFit 
	    fitparticle                : @local::Particle.eplus  
	    SeedCollection             : "TTCalHelixMergerDeP"
	}
	TTCalSeedFitUCCDep             : { @table::CprTrigger.producers.TTCalSeedFit 
	    ComboHitCollection         : TTmakeSHUCC			 
	    fitparticle                : @local::Particle.eplus  
	    SeedCollection             : "TTCalHelixUCCMergerDeP"
	}
	TTCalSeedFitDmp                  : { @table::CprTrigger.producers.TTCalSeedFit 
	    fitparticle                : @local::Particle.muplus
	    SeedCollection             : "TTCalHelixFinderDm:Negative"
	}
	
	TTCalTrkFitDem                 : { @table::CprTrigger.producers.TTCalTrkFit
	    SeedCollection             : TTCalSeedFitDem
	    CaloClusterCollection  : "CaloClusterFast"
	}
	TTCalTrkFitDep                 : { @table::CprTrigger.producers.TTCalTrkFit        
	    SeedCollection             : TTCalSeedFitDep
	    CaloClusterCollection  : "CaloClusterFast"
	}
    }
    
    filters : { @table::CprTrigger.filters
	TTCalHelixFinderDe              : { @table::CprTrigger.filters.TTCalHelixFinder    }
	TTCalHelixFinderUCCDe           : { @table::CprTrigger.filters.TTCalHelixFinderUCC }
	TTCalHelixFinderDm              : { @table::CprTrigger.filters.TTCalHelixFinder    fitparticle: @local::Particle.muminus }
    }
    
    sequences : {
	# production sequence to find helices
	findHelices     : [ TTtimeClusterFinder, TThelixFinder ]
	# production sequence to find TrackSeeds
	KSFDeM          : [ TTCalTimePeakFinder, TTCalHelixFinderDe, TTCalSeedFitDem ]
	KSFDeP          : [ TTCalTimePeakFinder, TTCalHelixFinderDe, TTCalSeedFitDep ]
	# production sequence to find KalReps
	KFFDeM          : [ TTCalTimePeakFinder, TTCalHelixFinderDe, TTCalSeedFitDem, TTCalTrkFitDem ]
	KFFDeP          : [ TTCalTimePeakFinder, TTCalHelixFinderDe, TTCalSeedFitDep, TTCalTrkFitDep ]	
    }
}

END_PROLOG
