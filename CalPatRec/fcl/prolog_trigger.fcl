# -*- mode: tcl -*-
#------------------------------------------------------------------------------
# this file is included by fcl/standardProducers.fcl inside the PROLOG section
# CalPatRec: calorimeter-seeded track finding
# CalPatRec uses its own instance of the hit flags
# DoubletAmbigResolver is defined in TrkReco/fcl/prolog.fcl
#------------------------------------------------------------------------------

BEGIN_PROLOG
#------------------------------------------------------------------------------
# there seems to be a circular dependence between MakeStrawHitPositions and
# FlagStrawHits ... FlagBkgHits ?
# MakeStrawHitPositions stores the hit flag in StrawHitPosition object
# for that, an existing StrawHitFlagCollection is required
#
# in its turn, the FlagStrawHits module flags if the corresponding hit
# position 'stereo' and also sets radial selection flag
# it also sets 'timesel' and 'energysel' flags
# if, however, the StrawHitPosition doesnt exist, the 'stereo' and 'radsel'
# flags are not set
#
# FlagBkgHits produces yet another hit flag collection, copying flags set by
# the OR of FlagStrawHits and flags stored in StrawHitPositions, and potentially adding
# a 'delta' and 'isolated' flags
# in principle, FlagBkgHits also uses StereoHitCollection, but that is not a must
#
# yes, there is a circular dependence between the data products.
# Dave runs several instances of the hit flagging modules for a reason
#------------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# new format
#------------------------------------------------------------------------------

CprTrigger : {

#------------------------------------------------------------------------------
# CalPatRec.HelixFinder and HelixFitHack configuratons (pattern recognition)
#------------------------------------------------------------------------------
    TTHelixFinderAlg : { @table::CalPatRec.HelixFinderAlg
        targetconsistent      : 0
        maxZTripletSearch     : 0. # mm
        maxDfDz               : 0.025
        initDfDz              : 0
    }
#------------------------------------------------------------------------------
# SeedFitter(SeedFitHackNew) configuration for the final track fit: NOT USED ANYMORE
#------------------------------------------------------------------------------
}
#------------------------------------------------------------------------------
# producers
#------------------------------------------------------------------------------
CprTrigger : { @table::CprTrigger

    producers : {
#        @table::CaloClusterFast.producers

        cprFetchDigis : { module_type:PrefetchData
            debugLevel                    : 0
            mcDiag                        : true

            fetchCaloDigis                : 1
            fetchStrawDigis               : 1
            fetchStrawHits                : 0
            fetchStrawHitFlags            : 0
            fetchStrawHitPositions        : 0
            fetchComboHits                : 0

            caloDigiCollectionTag         : CaloDigiMaker
            strawDigiCollection           : makeSD
            strawHitCollectionTag         : TTmakeSH
            strawHitPositionCollectionTag : TTmakeSH
            strawHitFlagCollectionTag     : TTmakeSH
            comboHitCollectionTag         : TTmakePH # MakeStereoHits
        }

        TTDeltaFinder : { @table::CalPatRec.producers.DeltaFinder
            chCollTag                     : TTmakePH                # input coll
            sschCollTag                   : TTmakeSH                # input coll
            writeFilteredComboHits        : 1
        }

#------------------------------------------------------------------------------
# default configuration: DEM
# CalPatRec, so far, has been validated only for e-
#------------------------------------------------------------------------------
        TTCalSeedFit : { @table::TTMu2eKinKal.producers.TTKKDeMSeedFit
            ModuleSettings : { @table::TTMu2eKinKal.producers.TTKKDeMSeedFit.ModuleSettings
                ComboHitCollection     : "TTmakeSH"
                CaloClusterCollection  : "CaloClusterFast"
                PrintLevel             : 0
                SaveAllFits            : false
            }
        }

    }

    filters : {
#------------------------------------------------------------------------------
# new modules
#------------------------------------------------------------------------------
        TTfastTimeClusterFinder      : { @table::CalPatRec.filters.CalTimePeakFinder
            useAsFilter                                 : 0
            StrawHitCollectionLabel                     : TTmakePH
            caloClusterModuleLabel                      : CaloClusterFast
#            HitSelectionBits                            : ["EnergySelection","TimeSelection"]
#            BackgroundSelectionBits                     : ["Background"]
            minClusterEnergy                            : 50.    # MeV
            minClusterSize                              : 2      # number of crystals
            #            dtOffset                                    : -61. #FIXME! this is necessary because CaloClusterFast returns an uncalibrated time!
            dtOffset                                    : 0
        }


        TTCalTimePeakFinder          : { @table::CalPatRec.filters.CalTimePeakFinder
            useAsFilter                                 : 0
            StrawHitCollectionLabel                     : "TTflagBkgHits"
            caloClusterModuleLabel                      : CaloClusterFast
#            HitSelectionBits                            : ["EnergySelection","TimeSelection"]
#            BackgroundSelectionBits                     : ["Background"]
            minClusterEnergy                            : 50.    # MeV
            minClusterSize                              : 2      # number of crystals
            #            dtOffset                                    : -61. #-41.8 #FIXME! this is necessary because CaloClusterFast returns an uncalibrated time!
            dtOffset                                    : 0
        }

        TTCalTimePeakFinderUe          : { @table::CalPatRec.filters.CalTimePeakFinder
            useAsFilter                                 : 0
            StrawHitCollectionLabel                     : "TTflagBkgHits"
            caloClusterModuleLabel                      : CaloClusterFast
#            HitSelectionBits                            : ["EnergySelection","TimeSelection"]
#            BackgroundSelectionBits                     : ["Background"]
            minClusterEnergy                            : 50.    # MeV
            minClusterSize                              : 2      # number of crystals
            pitchAngle                                  : -0.67
        }

        TTCalHelixFinder             : { @table::CalPatRec.filters.CalHelixFinder
            useAsFilter                                 : 0
            StrawHitCollectionLabel                     : "TTflagBkgHits"
            TimeClusterCollectionLabel                  : TTCalTimePeakFinder

            # HelixFinderAlg configuraton (pattern recognition)
            HelixFinderAlg                              : { @table::CprTrigger.TTHelixFinderAlg }
        }

        TTCalHelixFinderUe             : { @table::CalPatRec.filters.CalHelixFinder
            useAsFilter                                 : 0
            StrawHitCollectionLabel                     : "TTflagBkgHits"
            TimeClusterCollectionLabel                  : TTCalTimePeakFinderUe

            # HelixFinderAlg configuraton (pattern recognition)
            HelixFinderAlg                              : { @table::CprTrigger.TTHelixFinderAlg }
        }

        TTCalTimePeakFinderUCC       : { @table::CalPatRec.filters.CalTimePeakFinder
            useAsFilter                                 : 0
            StrawHitCollectionLabel                     : "TTflagBkgHits"
            caloClusterModuleLabel                      : CaloClusterFast
#            HitSelectionBits                            : ["EnergySelection","TimeSelection"]
#            BackgroundSelectionBits                     : ["Background"]
            minClusterEnergy                            : 50.    # MeV
            minClusterSize                              : 2      # number of crystals
            #            dtOffset                                    : -41.8 #FIXME! this is necessary because CaloClusterFast returns an uncalibrated time!
            dtOffset                                    : 0.0
        }

        TTCalHelixFinderUCC          : { @table::CalPatRec.filters.CalHelixFinder
            useAsFilter                                 : 0
            StrawHitCollectionLabel                     : TTmakePHUCC
            TimeClusterCollectionLabel                  : TTCalTimePeakFinderUCC

            # HelixFinderAlg configuraton (pattern recognition)
            HelixFinderAlg                              : { @table::CprTrigger.TTHelixFinderAlg }
        }
    }
}

#------------------------------------------------------------------------------
# calorimeter-seeded tracking makes sense only for downstream particles
#------------------------------------------------------------------------------
CprTrigger: { @table::CprTrigger
    producers : { @table::CprTrigger.producers

        TTCalSeedFitDem                : { @table::CprTrigger.producers.TTCalSeedFit
            ModuleSettings : { @table::CprTrigger.producers.TTCalSeedFit.ModuleSettings
                HelixSeedCollections   : [ "TTCalHelixMergerDeM" ]
                FitParticle : 11
            }
            KKFitSettings  : { @table::CprTrigger.producers.TTCalSeedFit.KKFitSettings
            }
            FitDirection : 0
        }
        TTCalSeedFitUCCDem             : { @table::CprTrigger.producers.TTCalSeedFit
            ModuleSettings : { @table::CprTrigger.producers.TTCalSeedFit.ModuleSettings
                ComboHitCollection     : "TTmakeSHUCC"
                HelixSeedCollections   : [ "TTCalHelixUCCMergerDeM" ]
                FitParticle : 11
            }
            KKFitSettings  : { @table::CprTrigger.producers.TTCalSeedFit.KKFitSettings
            }
            FitDirection : 0
        }
        TTCalSeedFitDmm                  : { @table::CprTrigger.producers.TTCalSeedFit
            ModuleSettings : { @table::CprTrigger.producers.TTCalSeedFit.ModuleSettings
                HelixSeedCollections   : [ "TTCalHelixFinderDm:Positive" ]
                FitParticle : 13
            }
            KKFitSettings  : { @table::CprTrigger.producers.TTCalSeedFit.KKFitSettings
            }
            FitDirection : 0
        }
        TTCalSeedFitDep                  : { @table::CprTrigger.producers.TTCalSeedFit
            ModuleSettings : { @table::CprTrigger.producers.TTCalSeedFit.ModuleSettings
                HelixSeedCollections   : [ "TTCalHelixMergerDeP" ]
                FitParticle : -11
            }
            KKFitSettings  : { @table::CprTrigger.producers.TTCalSeedFit.KKFitSettings
            }
            FitDirection : 0

        }
        TTCalSeedFitUCCDep             : { @table::CprTrigger.producers.TTCalSeedFit
            ModuleSettings : { @table::CprTrigger.producers.TTCalSeedFit.ModuleSettings
                ComboHitCollection     : "TTmakeSHUCC"
                HelixSeedCollections   : [ "TTCalHelixUCCMergerDeP" ]
                FitParticle : -11
            }
            KKFitSettings  : { @table::CprTrigger.producers.TTCalSeedFit.KKFitSettings
            }
            FitDirection : 0

        }
        TTCalSeedFitDmp                  : { @table::CprTrigger.producers.TTCalSeedFit
            ModuleSettings : { @table::CprTrigger.producers.TTCalSeedFit.ModuleSettings
                HelixSeedCollections   : [ "TTCalHelixFinderDm:Negative" ]
                FitParticle : -13
            }
            KKFitSettings  : { @table::CprTrigger.producers.TTCalSeedFit.KKFitSettings
            }
            FitDirection : 0
        }

    }

    filters : { @table::CprTrigger.filters
        TTCalHelixFinderDe              : { @table::CprTrigger.filters.TTCalHelixFinder    }
        TTCalHelixFinderUCCDe           : { @table::CprTrigger.filters.TTCalHelixFinderUCC }
        TTCalHelixFinderDm              : { @table::CprTrigger.filters.TTCalHelixFinder    FitParticle: @local::Particle.muminus }
    }

    sequences : {
        # production sequence to find helices
        findHelices     : [ TTtimeClusterFinder, TThelixFinder ]
        # production sequence to find TrackSeeds
        KSFDeM          : [ TTCalTimePeakFinder, TTCalHelixFinderDe, TTCalSeedFitDem ]
        KSFDeP          : [ TTCalTimePeakFinder, TTCalHelixFinderDe, TTCalSeedFitDep ]

    }
}

END_PROLOG
