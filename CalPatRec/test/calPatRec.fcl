# -*- mode: tcl -*-
# $Id: calPatRec.fcl,v 1.6 2014/04/27 15:48:52 murat Exp $
#------------------------------------------------------------------------------
# read data from the input file,
# assume the file contains the digitized hits
#------------------------------------------------------------------------------
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#
#include "CaloCluster/fcl/prolog.fcl"
#include "TrackCaloMatching/fcl/prolog.fcl"
#include "CalPatRec/fcl/prolog.fcl"
#include "ParticleID/fcl/prolog.fcl"

#                             Give this process a name
process_name : calPatRec
#------------------------------------------------------------------------------
# Read events from a file (made by example 3)
#------------------------------------------------------------------------------
source : {
#    module_type : EmptyEvent
    module_type : RootInput
    maxEvents   : 100
}
#------------------------------------------------------------------------------
# services
#------------------------------------------------------------------------------
services : {
    message : @local::mf_debugging

    # Adjust configuration of message logger:
    # Load the standard message logger configuration:
    # Threshold=Info (from using mf_interactive). 
    # Limit of 5 per category; then exponential backoff.
    #  message.destinations.log.default.limit : 5
    
    TFileService          : { fileName   : "calPatRec.root" }
    RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }

    GeometryService        : { inputFile : "Mu2eG4/geom/geom_common.txt" }
    ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
    BTrkHelper             : @local::BTrkHelperDefault
    G4Helper               : { }
    SeedService            : @local::automaticSeeds
} 
#------------------------------------------------------------------------------
# physics
#------------------------------------------------------------------------------
physics : {
    producers : {
	generate      : @local::generate
	g4run         : @local::g4run
#------------------------------------------------------------------------------
# hist times, digitization
#------------------------------------------------------------------------------
	protonTimeMap        : { module_type : GenerateProtonTimes }
	muonTimeMap          : { module_type : GenerateMuonLife    }
	makeSD               : @local::makeSD
	makeSH               : @local::makeSHfromSD
	FlagStrawHits        : @local::FlagStrawHits
	FlagBkgHits          : @local::FlagBkgHits
	CaloReadoutHitsMaker : @local::CaloReadoutHitsMaker
	CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker
#------------------------------------------------------------------------------
# CalPatRec and modules it brings in
#------------------------------------------------------------------------------
	MakeCaloCluster      : @local::MakeCaloCluster

	MakeStrawHitPositions: @local::MakeStrawHitPositions
	CalPatRec            : @local::CalPatRec
    }

    analyzers: {  }
#------------------------------------------------------------------------------
# paths, start from clustering
#------------------------------------------------------------------------------
    p1 : [
	  # generate, g4run,
	  protonTimeMap, muonTimeMap, 
	  makeSD, makeSH, MakeStrawHitPositions, 
	  FlagStrawHits, FlagBkgHits, 
	  CaloReadoutHitsMaker, CaloCrystalHitsMaker,
	  MakeCaloCluster, 
	  CalPatRec
	 ]

    e1 : [
	  #outfile
	 ]

    trigger_paths  : [p1]
    end_paths      : [e1]
}

outputs: {
    outfile : {
	module_type    : RootOutput
	fileName       : "calPatRec_outFile.root"
	SelectEvents  : [ p1 ]
	outputCommands : ['keep *_*_*_*'
			  #                   , 'drop mu2eStrawDigis_*_*_*'
			  #                   , 'drop mu2eStrawHits_*_*_*'
			  # Uncomment the above line to reduce file size.
			 ]  
    }
}
services.scheduler.wantSummary: true
#------------------------------------------------------------------------------
# print per event timing for ::event entry points
#------------------------------------------------------------------------------
#     services.Timing: { }
#------------------------------------------------------------------------------
# print timing summary
#------------------------------------------------------------------------------
# services.scheduler.wantSummary: true
source.firstRun                            :  1 
services.SeedService.baseSeed         :  1
services.SeedService.maxUniqueEngines :  20

# physics.producers.generate.inputfile               : "Mu2eG4/test/genconfig_DownstreameMinus.txt"
physics.producers.makeSD.TimeOffsets               :  { inputs : [ "protonTimeMap", "muonTimeMap" ] }
physics.producers.CaloReadoutHitsMaker.TimeOffsets :  { inputs : [ "protonTimeMap", "muonTimeMap" ] }

physics.producers.FlagStrawHits.StrawHitPositionCollectionLabel : MakeStrawHitPositions
physics.producers.FlagBkgHits.StrawHitPositionCollectionLabel   : MakeStrawHitPositions
