#
# Tracker-only trigger based on digis
#
#  > mu2e --config TrkFilters/fcl/TTDigis.fcl --source "your digis file" --TFile TTDigis.root --nevts=100
#
#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/TrkHitReco/fcl/prolog.fcl"
#include "Offline/TrkPatRec/fcl/prolog.fcl"
#include "Offline/TrkFilters/fcl/prolog.fcl"
#include "Offline/TrkDiag/fcl/prolog.fcl"

process_name : TTDigis

source :
{
  module_type : RootInput
}
# we don't need any simulation services for this job
services : @local::Services.Reco

services : {
  message               : @local::default_message
  TFileService          : { fileName : "TTDigis.hist" }

  RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }
  #   Timing                : { }

  GeometryService        : { inputFile      : "Offline/Mu2eG4/geom/geom_common.txt"          }
  ConditionsService      : { conditionsfile : "Offline/ConditionsService/data/conditions_01.txt"        }
  GlobalConstantsService : { inputFile      : "Offline/GlobalConstantsService/data/globalConstants_01.txt"   }
  Mu2eG4Helper           : { }
  BTrkHelper             : @local::BTrkHelperDefault
  SeedService            : { @table::automaticSeeds
    baseSeed         :  8
    maxUniqueEngines :  20
  }

}

# timing information
services.TimeTracker : {
  dbOutput : {
    filename : "TTDigis.db"
    overwrite : true
  }
}
# setup modules needed to filter tracks
physics :
{
  producers : {
    @table::TrkHitReco.producers
    @table::Tracking.TrkTrigger.producers

    TTKSFDeM : @local::TTKSF
    TTKSFDeP : @local::TTKSF
    RSD : {
      module_type : ReadStrawDigi
    }

  }
  filters : {
    @table::TrkTrigger.Filters
    @table::CalPatRec.filters
  }
  # analyzers : {
  #   TrkTriggerDiag : {
  #     module_type : TrkTriggerDiag
  #   }
  # }
}

# physics.filters.PosHelixFilter.MinMomentum        : 220.0
# physics.filters.NegHelixFilter.MinMomentum        : 220.0
# physics.filters.DeMSeedFilter.MinMomentum       : 95.0
# physics.filters.DePSeedFilter.MinMomentum       : 95.0

physics.filters.PosHelixFilter.MinMomentum        : 180.0
physics.filters.NegHelixFilter.MinMomentum        : 180.0
physics.filters.PosHelixFilter.MinNHits               : 15.0
physics.filters.NegHelixFilter.MinNHits           : 15.0
physics.filters.DeMSeedFilter.MinMomentum       : 75.0
physics.filters.DePSeedFilter.MinMomentum       : 75.0

physics.producers.TTKSFDeM.SeedCollection      : "TThelixFinder:Positive"
physics.producers.TTKSFDeM.fitparticle        : @local::Particle.eminus
physics.producers.TTKSFDeM.fitdirection       : @local::FitDir.downstream
physics.producers.TTKSFDeM.KalFit.MaxIterations : 1

physics.producers.TTKSFDeP.SeedCollection      : "TThelixFinder:Negative"
physics.producers.TTKSFDeP.fitparticle        : @local::Particle.eplus
physics.producers.TTKSFDeP.fitdirection       : @local::FitDir.downstream
physics.producers.TTKSFDeP.KalFit.MaxIterations : 1

# create a trigger test path.  Note that physics.trigger_paths and physics.end_paths are not used, art will
# create those automatically from all the defined paths

physics.TCTrigPath : [ RSD, @sequence::TrkTrigger.Sequences.TCFilterSequence ]
physics.PHTrigPath : [ RSD, @sequence::TrkTrigger.Sequences.PosHelixFilterSequence ]
physics.DeMSeedTrigPath : [RSD,  @sequence::TrkTrigger.Sequences.DeMSeedFilterSequence ]
physics.DePSeedTrigPath : [RSD,  @sequence::TrkTrigger.Sequences.DePSeedFilterSequence ]

# analysis path: this is for monitoring only
# physics.TTDigisEndPath : [ TrkTriggerDiag ]

