# -*- mode: tcl -*-
#
# Define sequences for track based triggers.  The sequences for hit preparation
# and the tracking modules configuration must preceede these and are defined elsewhere
# original author: Dave Brown (LBNL) Mar. 7 2017
#
BEGIN_PROLOG
# define the filter modules used for track-based trigger
# filter to require a minimum # of hits in a time slot
TrkFilters : {
    filters : {
	# filters for track hit clustering
	tprSeedDeMTCFilter : {
	    module_type : TimeClusterFilter
	    timeClusterCollection : "TTtimeClusterFinder"
	    triggerPath            : "tprSeedDeM"
	}
	tprSeedDePTCFilter : {
	    module_type : TimeClusterFilter
	    timeClusterCollection : "TTtimeClusterFinder"
	    triggerPath            : "tprSeedDeP"
	}
	cprSeedDeMTCFilter : {
	    module_type : TimeClusterFilter
	    timeClusterCollection : "TTCalTimePeakFinder"
	    minNHits              : 1  #just check if there are TimeClusters
	    triggerPath            : "cprSeedDeM"	    
	}
	cprSeedDePTCFilter : {
	    module_type : TimeClusterFilter
	    timeClusterCollection : "TTCalTimePeakFinder"
	    minNHits              : 1  #just check if there are TimeClusters
	    triggerPath            : "cprSeedDeP"	    
	}
	tprHelixIPADeMTCFilter : {
	    module_type : TimeClusterFilter
	    timeClusterCollection : "TTtimeClusterFinder"
	    triggerPath            : "tprHelixIPADeM"
	}
	
	# filters for either positive or negative helicity tracks near the CE energy
	tprSeedDeMHSFilter : {
	    module_type : HelixFilter
#	    helixSeedCollection : "TThelixFinder:Positive"
	    helixSeedCollection : "TTHelixMergerDeM"
	    helicity            : 1
	    minNStrawHits       : 15   
	    minMomentum         : 70.  
	    maxMomentum         : 120. 
	    minPt               : 0    
	    maxChi2XY           : 8.   
	    maxChi2PhiZ         : 8.   
	    maxD0               : 300. 
	    minD0               : -150.
	    minAbsLambda        : 140. 
	    maxAbsLambda        : 300. 
	    triggerPath          : "tprSeedDeM"	    
	}
	tprHelixIPADeMHSFilter : {
	    module_type : HelixFilter
#	    helixSeedCollection : "TThelixFinder:Positive"
	    helixSeedCollection : "TTHelixMergerDeM"
	    helicity            : 1		    
	    minNStrawHits       : 15   		    
	    minMomentum         : 30.  		    
	    maxMomentum         : 70. 		    
	    minPt               : 0    		    
	    maxChi2XY           : 8.   		    
	    maxChi2PhiZ         : 8.   		    
	    maxD0               : 500. 		    
	    minD0               : 200.		    
	    minAbsLambda        : 40. 		    
	    maxAbsLambda        : 80. 		    
	    triggerPath          : "tprHelixIPADeM"	    
	}

	tprSeedDePHSFilter : {
	    module_type : HelixFilter
#	    helixSeedCollection : "TThelixFinder:Negative"
	    helixSeedCollection : "TTHelixMergerDeP"
	    helicity            : -1
	    minNStrawHits       : 15   
	    minMomentum         : 60.  
	    maxMomentum         : 140. 
	    minPt               : 0    
	    maxChi2XY           : 8.   
	    maxChi2PhiZ         : 8.   
	    maxD0               : 300. 
	    minD0               : -150.
	    minAbsLambda        : 100. 
	    maxAbsLambda        : 330. 
	    triggerPath          : "tprSeedDeP"	    
	}
	
	cprSeedDeMHSFilter : {
	    module_type : HelixFilter
#	    helixSeedCollection : "TTCalHelixFinderDe:Positive"
	    helixSeedCollection : "TTCalHelixMergerDeM"
	    helicity            : 1
	    minNStrawHits       : 15   
	    minMomentum         : 80.  
	    maxMomentum         : 140. 
	    minPt               : 0    
	    maxChi2XY           : 5.   
	    maxChi2PhiZ         : 5.   
	    maxD0               : 350. 
	    minD0               : -350.
	    minAbsLambda        : 140. 
	    maxAbsLambda        : 330. 
	    triggerPath          : "cprSeedDeM"	    
	}
	cprSeedDePHSFilter : {
	    module_type : HelixFilter
#	    helixSeedCollection : "TTCalHelixFinderDe:Negative"
	    helixSeedCollection : "TTCalHelixMergerDeP"
	    helicity            : -1
	    minNStrawHits       : 15   
	    minMomentum         : 60.  
	    maxMomentum         : 140. 
	    minPt               : 0    
	    maxChi2XY           : 5.   
	    maxChi2PhiZ         : 5.   
	    maxD0               : 300. 
	    minD0               : -150.
	    minAbsLambda        : 100. 
	    maxAbsLambda        : 330. 
	    triggerPath          : "cprSeedDeP"	    
	}
	# filters for CE candidates (downstream eminus near 100 MeV/c)
	tprSeedDeMTSFilter : {
	    module_type : SeedFilter
	    kalSeedCollection : "TTKSFDeM"
	    fitparticle       : @local::Particle.eminus	 
	    fitdirection      : @local::FitDir.downstream 
	    minNStrawHits     : 15   
	    minMomentum       : 80.      
	    maxMomentum       : 200.     #don't apply cut
	    maxChi2DOF        : 20.      #don't apply cut
	    maxMomErr         : 10.      #don't apply cut
	    minD0             : -200.
	    maxD0             : 200. 
	    triggerPath        : "tprSeedDeM"	    
	}

	cprSeedDeMTSFilter : {
	    module_type : SeedFilter
	    kalSeedCollection : "TTCalSeedFitDem"    
	    fitparticle       : @local::Particle.eminus
	    fitdirection      : @local::FitDir.downstream 
	    minNStrawHits     : 15   
	    minMomentum       : 80.      
	    maxMomentum       : 200.     #don't apply cut
	    maxChi2DOF        : 20.      #don't apply cut
	    maxMomErr         : 10.      #don't apply cut
	    minD0             : -200.
	    maxD0             : 200. 
	    triggerPath        : "cprSeedDeM"	    
	}
	tprSeedDeMKFFilter : {
	    module_type : SeedFilter
	    kalSeedCollection : "TTKFFDeM"
	    triggerPath        : "tprSeedDeM"	    
	}
	# filters for downstream positrons (mu- -> e+ conversion) 
	tprSeedDePTSFilter : {
	    module_type : SeedFilter
	    kalSeedCollection : "TTKSFDeP"
	    fitparticle       : @local::Particle.eplus
	    fitdirection      : @local::FitDir.downstream 
	    minNStrawHits     : 15  
	    minMomentum       : 70.      
	    maxMomentum       : 110.     #don't apply cut
	    maxChi2DOF        : 20.      #don't apply cut
	    maxMomErr         : 10.      #don't apply cut
	    minD0             : -200.
	    maxD0             : 200.
	    triggerPath        : "tprSeedDeP"	    
	}

	cprSeedDePTSFilter : {
	    module_type : SeedFilter
	    kalSeedCollection : "TTCalSeedFitDep"    
	    fitparticle       : @local::Particle.eplus
	    fitdirection      : @local::FitDir.downstream 
	    minNStrawHits     : 15   
	    minMomentum       : 70.      
	    maxMomentum       : 110.     #don't apply cut
	    maxChi2DOF        : 20.      #don't apply cut
	    maxMomErr         : 10.      #don't apply cut
	    minD0             : -200.
	    maxD0             : 200. 
	    triggerPath        : "cprSeedDeP"	    
	}

	tprSeedDePKFFilter : {
	    module_type : SeedFilter
	    kalSeedCollection : "TTKFFDeP"
	    triggerPath        : "tprSeedDeP"	    
	}
	# Other filters FIXME!!
	# calibration filters
	# reflecting cosmic filters
	# low-momentum electron filters
	# low-field running filters

	# trackSDCountFilter: is used upstream all the tracking sequence.
	#                     it requires minimum number of hits; that is
	#                     particularly useful for the off-spill events
	tprTimeClusterDeMSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true
	    useCaloDigi         : false
	    minNStrawDigi       : 10 
	    maxNStrawDigi       : 10000
	    minNCaloDigi        : -1
	    maxNCaloDigi        : -1
	    maxCaloEnergy       : -1
	    triggerPath          : "tprTimeClusterDeM"	    
	}
	tprTimeClusterDePSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true
	    useCaloDigi         : false
	    minNStrawDigi       : 10 
	    maxNStrawDigi       : 10000
	    minNCaloDigi        : -1
	    maxNCaloDigi        : -1
	    maxCaloEnergy       : -1
	    triggerPath          : "tprTimeClusterDeP"	    
	}

	tprHelixDeMSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true
	    useCaloDigi         : false
	    minNStrawDigi       : 10 
	    maxNStrawDigi       : 10000
	    minNCaloDigi        : -1
	    maxNCaloDigi        : -1
	    maxCaloEnergy       : -1
	    triggerPath          : "tprHelixDeM"	    
	}
	tprHelixDePSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true
	    useCaloDigi         : false
	    minNStrawDigi       : 10 
	    maxNStrawDigi       : 10000
	    minNCaloDigi        : -1
	    maxNCaloDigi        : -1
	    maxCaloEnergy       : -1
	    triggerPath          : "tprHelixDeP"	    
	}
	tprHelixIPADeMSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true
	    useCaloDigi         : false
	    minNStrawDigi       : 10 
	    maxNStrawDigi       : 10000
	    minNCaloDigi        : -1
	    maxNCaloDigi        : -1
	    maxCaloEnergy       : -1
	    triggerPath          : "tprHelixIPADeM"	    
	}

	tprSeedDeMSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true
	    useCaloDigi         : false
	    minNStrawDigi       : 10 
	    maxNStrawDigi       : 10000
	    minNCaloDigi        : -1
	    maxNCaloDigi        : -1
	    maxCaloEnergy       : -1
	    triggerPath          : "tprSeedDeM"	    
	}
	tprSeedDePSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true
	    useCaloDigi         : false
	    minNStrawDigi       : 10 
	    maxNStrawDigi       : 10000
	    minNCaloDigi        : -1
	    maxNCaloDigi        : -1
	    maxCaloEnergy       : -1
	    triggerPath          : "tprSeedDeP"	    
	}
	
	cprSeedDeMSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true
	    useCaloDigi         : false
	    minNStrawDigi       : 10 
	    maxNStrawDigi       : 10000
	    minNCaloDigi        : -1
	    maxNCaloDigi        : -1
	    maxCaloEnergy       : -1
	    triggerPath          : "cprSeedDeM"	    
	}
	cprSeedDePSDCountFilter     : {
	    module_type : DigiFilter
	    strawDigiCollection : makeSD
	    caloDigiCollection  : notUsed
	    useStrawDigi        : true	 
	    useCaloDigi         : false	 
	    minNStrawDigi       : 10 	 
	    maxNStrawDigi       : 10000	 
	    minNCaloDigi        : -1	 
	    maxNCaloDigi        : -1	 
	    maxCaloEnergy       : -1      
	    triggerPath          : "cprSeedDeP"	    
	}
	
	#  Prescaling filters
	#follow the prescaler filters for Tpr Track sequences

	#filters for the paths where decision is made using the TimeCluster
	tprTimeClusterDeMEventPrescale : {
	    module_type : PrescaleEvent
	    nPrescale     : 1
	    triggerPath    : "tprTimeClusterDeM"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}
	tprTimeClusterDeMPrescale : {
	    module_type : PrescaleEvent
	    nPrescale : 1000
	    useFilteredEvents : true
	    triggerPath    : "tprTimeClusterDeM"	    
	    triggerFlag   : ["PrescaleGoodEvents"]	    	    
	}
	tprTimeClusterDePEventPrescale : {
	    module_type : PrescaleEvent
	    nPrescale     : 1
	    triggerPath    : "tprTimeClusterDeP"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}
	tprTimeClusterDePPrescale : {
	    module_type : PrescaleEvent
	    nPrescale : 1000
	    useFilteredEvents : true
	    triggerPath    : "tprTimeClusterDeP"	    
	    triggerFlag       : ["PrescaleGoodEvents"]	    
	}

	#filters for the paths where decision is made using the HelixSeed
	tprHelixDeMEventPrescale : {
	    module_type : PrescaleEvent
	    nPrescale     : 1
	    triggerPath    : "tprHelixDeM"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}
	tprHelixDeMPrescale : {
	    module_type : PrescaleEvent
	    useFilteredEvents : true
	    nPrescale         : 300
	    triggerPath        : "tprHelixDeM"	    
	    triggerFlag       : ["PrescaleGoodEvents"]	    
	}
	tprHelixDePEventPrescale : {
	    module_type : PrescaleEvent
	    nPrescale     : 1
	    triggerPath    : "tprHelixDeP"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}
	tprHelixDePPrescale : {
	    module_type : PrescaleEvent
	    useFilteredEvents : true
	    nPrescale         : 300
	    triggerPath        : "tprHelixDeP"	    
	    triggerFlag       : ["PrescaleGoodEvents"]	    
	}
	tprHelixIPADeMEventPrescale : {
	    module_type : PrescaleEvent
	    nPrescale     : 1
	    triggerPath    : "tprHelixIPADeM"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}
	tprHelixIPADeMPrescale : {
	    module_type : PrescaleEvent
	    useFilteredEvents : true
	    nPrescale         : 300
	    triggerPath        : "tprHelixIPADeM"	    
	    triggerFlag       : ["PrescaleGoodEvents"]	    
	}

	#filters for the paths where decision is made using the TrackSeed
	tprSeedDeMEventPrescale: {
	    module_type : PrescaleEvent
	    nPrescale         : 1 
	    triggerPath        : "tprSeedDeM"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}
	
	tprSeedDeMPrescale : {
	    module_type : PrescaleEvent
	    nPrescale         : 1
	    useFilteredEvents : true
	    triggerPath        : "tprSeedDeM"	    
	    triggerFlag       : ["PrescaleGoodEvents"]	    
	}

	tprSeedDePEventPrescale: {
	    module_type : PrescaleEvent
	    nPrescale         : 1
	    triggerPath        : "tprSeedDeP"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}	
	tprSeedDePPrescale : {
	    module_type : PrescaleEvent
	    nPrescale         : 1 
	    useFilteredEvents : true
	    triggerPath        : "tprSeedDeP"	    
	    triggerFlag       : ["PrescaleGoodEvents"]	    
	}
	
	#follow the prescaler filters for Tpr Track sequences
	cprSeedDeMEventPrescale: {
	    module_type : PrescaleEvent
	    nPrescale         : 1 
	    triggerPath        : "cprSeedDeM"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}
	
	cprSeedDeMPrescale : {
	    module_type : PrescaleEvent
	    nPrescale         : 1 
	    useFilteredEvents : true
	    triggerPath        : "cprSeedDeM"	    
	    triggerFlag       : ["PrescaleGoodEvents"]	    
	}

	cprSeedDePEventPrescale: {
	    module_type : PrescaleEvent
	    nPrescale         : 1 
	    triggerPath        : "cprSeedDeP"	    
	    triggerFlag   : ["PrescaleRandom"]	    
	}
	cprSeedDePPrescale : {
	    module_type : PrescaleEvent
	    nPrescale         : 1 
	    useFilteredEvents : true
	    triggerPath        : "cprSeedDeP"	    
	    triggerFlag       : ["PrescaleGoodEvents"]	    
	}
	
    }

    # sequences for different trigger paths.  Early triggers are prescaled
    sequences : {
	# #trkpatrec tracking
	tprTimeClusterDeM    : [ tprTimeClusterDeMEventPrescale, tprTimeClusterDeMSDCountFilter, @sequence::CaloClusterTrigger.Reco,
				 @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
				 TTtimeClusterFinder, tprTimeClusterDeMTCFilter,  tprTimeClusterDeMPrescale ]
	tprTimeClusterDeP    : [ tprTimeClusterDePEventPrescale, tprTimeClusterDePSDCountFilter, @sequence::CaloClusterTrigger.Reco,
				 @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
				 TTtimeClusterFinder, tprTimeClusterDePTCFilter,  tprTimeClusterDePPrescale ]

	tprHelixDeM          : [ tprHelixDeMEventPrescale, tprHelixDeMSDCountFilter, @sequence::CaloClusterTrigger.Reco, @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
				 TTtimeClusterFinder, tprHelixDeMTCFilter, TThelixFinder, TTHelixMergerDeM, tprHelixDeMHSFilter, tprHelixDeMPrescale  ]
	tprHelixDeP          : [ tprDePHelixEventPrescale, tprDePHelixSDCountFilter, @sequence::CaloClusterTrigger.Reco, @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
				 TTtimeClusterFinder, tprHelixDePTCFilter, TThelixFinder, TTHelixMergerDeP, tprHelixDePHSFilter, tprHelixDePPrescale  ]

	tprSeedDeM           : [ tprSeedDeMEventPrescale, tprSeedDeMSDCountFilter, @sequence::CaloClusterTrigger.Reco, 
				 @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
				 TTtimeClusterFinder, tprSeedDeMTCFilter, TThelixFinder, TTHelixMergerDeM, tprSeedDeMHSFilter, TTKSFDeM, tprSeedDeMTSFilter, tprSeedDeMPrescale ]
	tprSeedDeP           : [ tprSeedDePEventPrescale, tprSeedDePSDCountFilter, @sequence::CaloClusterTrigger.Reco, 
				 @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
				 TTtimeClusterFinder, tprSeedDePTCFilter, TThelixFinder,TTHelixMergerDeP,  tprSeedDePHSFilter, TTKSFDeP, tprSeedDePTSFilter, tprSeedDePPrescale ]
	#   calibration with DIO-Michel form Inner Proton Absorber
	tprHelixIPADeM       : [ tprHelixIPADeMEventPrescale, tprHelixIPADeMSDCountFilter, @sequence::CaloClusterTrigger.Reco, 
				 @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
				 TTtimeClusterFinder, tprHelixIPADeMTCFilter, TThelixFinder, tprHelixIPADeMHSFilter, tprHelixIPADeMPrescale  ]
	
	#calo-seeded tracking
	cprSeedDeM           : [ cprSeedDeMEventPrescale, cprSeedDeMSDCountFilter, @sequence::CaloClusterTrigger.Reco,
				 @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
				 TTCalTimePeakFinder, cprSeedDeMTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM, cprSeedDeMHSFilter,
				 TTCalSeedFitDem, cprSeedDeMTSFilter, cprSeedDeMPrescale ]
	cprSeedDeP           : [ cprSeedDePEventPrescale, cprSeedDePSDCountFilter, @sequence::CaloClusterTrigger.Reco,
				 @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
				 TTCalTimePeakFinder, cprSeedDePTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP, cprSeedDePHSFilter, 
				 TTCalSeedFitDep, cprSeedDePTSFilter, cprSeedDePPrescale ]
	
	#fast tracking sequences that uses the calorimeter-time selection to reduce the number of TimeClusters and also the number of hits processed by the Delta-ray 
	#removal algorithm
	# fastTprSeedDeM  : [ tprSeedDeMEventPrescale, TrackSDCountFilter, @sequence::CaloClusterTrigger.Reco, @sequence::TrkHitRecoTrigger.sequences.TTmakefastHits, 
	# 		    TTfastTimeClusterFinder, tprFTCFilter, TTDeltaFinder, TTfastHelixFinder, FtprDeMHelixFilter, TTFKSFDeM, FtprSeedDeMFilter, tprSeedDeMPrescale ]
	# fastTprSeedDeP  : [ tprSeedDePEventPrescale, TrackSDCountFilter, @sequence::CaloClusterTrigger.Reco,  @sequence::TrkHitRecoTrigger.sequences.TTmakefastHits, 
	# 		    TTfastTimeClusterFinder, tprFTCFilter, TTDeltaFinder, TTfastHelixFinder, FtprDePHelixFilter, TTFKSFDeP, FtprSeedDePFilter, tprSeedDePPrescale ]



	#kalman filter included
	tprKalDeM  : [ @sequence::CaloClusterTrigger.Reco,
		       @sequence::TrkHitRecoTrigger.sequences.TTprepareHits, 
		       TTtimeClusterFinder, tprSeedDeMTCFilter, TThelixFinder, TTHelixMergerDeM, tprSeedDeMHSFilter, 
		       TTKSFDeM, tprSeedDeMTSFilter, TTKFFDeM, tprSeedDeMKFFilter ]
	# add sequences for upstream, calibration, ...  FIXME!
    }
}
END_PROLOG
