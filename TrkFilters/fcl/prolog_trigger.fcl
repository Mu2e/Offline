# -*- mode: tcl -*-
#
# Define sequences for track based triggers.  The sequences for hit preparation
# and the tracking modules configuration must preceede these and are defined elsewhere
# original author: Dave Brown (LBNL) Mar. 7 2017
#
BEGIN_PROLOG
# define the filter modules used for track-based trigger
# filter to require a minimum # of hits in a time slot
TrkFilters : {
  filters : {
    #--------------------------------------------------------------------------------
    # filters for the TimeClustering results
    #--------------------------------------------------------------------------------
    tprTimeClusterDeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    tprTimeClusterDePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }


    # CE and CEPlus from the ST
    tprDeMHighPStopTargTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    tprDePHighPStopTargTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    cprDeMHighPStopTargTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinder"
      minNStrawHits              : 1  #just check if there are TimeClusters
    }
    cprDePHighPStopTargTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinder"
      minNStrawHits              : 1  #just check if there are TimeClusters
    }

    #cosmic tracks
    tprDeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    tprDePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    tprHelixDeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    tprHelixDePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    tprHelixUeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinderUe"
    }
    tprHelixUePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinderUe"
    }
    cprDeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinder"
    }
    cprDePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinder"
    }
    cprHelixDeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinder"
    }
    cprHelixDePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinder"
    }
    cprHelixUeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinderUe"
    }
    cprHelixUePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinderUe"
    }

    #low p particles from the ST
    tprDeMLowPStopTargTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    tprDePLowPStopTargTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }
    cprDeMLowPStopTargTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinder"
    }
    cprDePLowPStopTargTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinder"
    }

    #fast sequcnes that process only the ComboHits in time with the calo-cluster with E>50MeV
    tprSeedUCCDeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinderUCC"
    }
    tprSeedUCCDePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinderUCC"
    }
    cprSeedUCCDeMTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinderUCC"
    }
    cprSeedUCCDePTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTCalTimePeakFinderUCC"
    }

    #e- from the IPA
    tprHelixDeMIpaTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }

    tprHelixDeMIpaPhiScaledTCFilter : {
      module_type : TimeClusterFilter
      timeClusterCollection : "TTtimeClusterFinder"
    }

    #--------------------------------------------------------------------------------
    # Helix filters
    #--------------------------------------------------------------------------------

    # filters for either positive or negative helicity tracks near the CE energy
    tprDeMHighPStopTargHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeM"
    }
    tprDePHighPStopTargHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeP"
    }

    cprDeMHighPStopTargHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerDeM"
    }
    cprDePHighPStopTargHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerDeP"
    }

    # cosmic tracks e-/e+ not from the ST
    tprDeMHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeM"
    }
    tprDePHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeP"
    }

    cprDeMHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerDeM"
    }
    cprDePHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerDeP"
    }

    #cosmic helix: HS filters
    tprHelixDeMHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeM"
    }
    tprHelixDePHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeP"
    }
    tprHelixUeMHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerUeM"
    }
    tprHelixUePHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerUeP"
    }

    cprHelixDeMHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerDeM"
    }
    cprHelixDePHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerDeP"
    }
    cprHelixUeMHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerUeM"
    }
    cprHelixUePHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerUeP"
    }


    # low P e-/e+ from the ST
    tprDeMLowPStopTargHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeM"
    }
    tprDePLowPStopTargHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeP"
    }

    cprDeMLowPStopTargHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerDeM"
    }
    cprDePLowPStopTargHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixMergerDeP"
    }

    # filters that uses the combohit collection filtered with the calorimeter info
    tprSeedUCCDeMHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixUCCMergerDeM"
    }
    tprSeedUCCDePHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixUCCMergerDeP"
    }

    cprSeedUCCDeMHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixUCCMergerDeM"
    }
    cprSeedUCCDePHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTCalHelixUCCMergerDeP"
    }


    tprHelixDeMIpaHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeM"
    }

    tprHelixDeMIpaPhiScaledHSFilter : {
      module_type : HelixFilter
      helixSeedCollection : "TTHelixMergerDeM"
    }


    # filters for CE candidates (downstream eminus near 100 MeV/c)
    tprDeMHighPStopTargTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKSFDeM"
    }

    cprDeMHighPStopTargTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTCalSeedFitDem"
    }

    #cosmic tracks e-/e+
    tprDeMTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKSFDeM"
    }

    cprDeMTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTCalSeedFitDem"
    }

    #low P e-/e+ from the ST
    tprDeMLowPStopTargTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKSFDeM"
    }

    cprDeMLowPStopTargTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTCalSeedFitDem"
    }


    # fitlered sequences
    tprSeedUCCDeMTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKSFUCCDeM"
    }

    cprSeedUCCDeMTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTCalSeedFitUCCDem"
    }
    tprDeMHighPStopTargKFFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKFFDeM"
    }
    # filters for downstream positrons (mu- -> e+ conversion)
    tprDePHighPStopTargTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKSFDeP"
    }

    cprDePHighPStopTargTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTCalSeedFitDep"
    }


    #cosmic tracks e-/e+ from the ST
    tprDePTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKSFDeP"
    }

    cprDePTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTCalSeedFitDep"
    }

    #low P e-/e+ from the ST
    tprDePLowPStopTargTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKSFDeP"
    }

    cprDePLowPStopTargTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTCalSeedFitDep"
    }



    tprSeedUCCDePTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKSFUCCDeP"
    }

    cprSeedUCCDePTSFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTCalSeedFitUCCDep"
    }

    tprDePHighPStopTargKFFilter : {
      module_type : SeedFilter
      kalSeedCollection : "TTKFFDeP"
    }
    # Other filters FIXME!!
    # calibration filters
    # reflecting cosmic filters
    # low-momentum electron filters
    # low-field running filters

    # trackSDCountFilter: is used upstream all the tracking sequence.
    #                     it requires minimum number of hits; that is
    #                     particularly useful for the off-spill events
    tprTimeClusterDeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprTimeClusterDePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    tprHelixDeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprHelixDePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprHelixDeMIpaSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    tprHelixDeMIpaPhiScaledSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    tprDeMHighPStopTargSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprDePHighPStopTargSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    cprDeMHighPStopTargSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    cprDePHighPStopTargSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    #SD counter filter for comisc track triggers

    tprDeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprDePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    cprDeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    cprDePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    #cosmic cpr helix
    tprHelixDeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprHelixDePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprHelixUeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprHelixUePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    cprHelixDeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    cprHelixDePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }


    #SD counter filter for lowP trigger lines
    tprDeMLowPStopTargSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprDePLowPStopTargSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    cprDeMLowPStopTargSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    cprDePLowPStopTargSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }


    tprSeedUCCDeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    tprSeedUCCDePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }

    cprSeedUCCDeMSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    cprSeedUCCDePSDCountFilter     : {
      module_type : DigiFilter
      strawDigiCollection : makeSD
      caloDigiCollection  : notUsed
    }
    #  Prescaling filters
    #follow the prescaler filters for Tpr Track sequences

    #filters for the paths where decision is made using the TimeCluster
    tprTimeClusterDeMEventPrescale : {
      module_type : PrescaleEvent
    }
    tprTimeClusterDeMPrescale : {
      module_type : PrescaleEvent
    }
    tprTimeClusterDePEventPrescale : {
      module_type : PrescaleEvent
    }
    tprTimeClusterDePPrescale : {
      module_type : PrescaleEvent
    }

    #filters for the paths where decision is made using the HelixSeed
    tprHelixDeMEventPrescale : {
      module_type : PrescaleEvent
    }
    tprHelixDeMPrescale : {
      module_type : PrescaleEvent
    }
    tprHelixDePEventPrescale : {
      module_type : PrescaleEvent
    }
    tprHelixDePPrescale : {
      module_type : PrescaleEvent
    }
    tprHelixDeMIpaEventPrescale : {
      module_type : PrescaleEvent
    }
    tprHelixDeMIpaPrescale : {
      module_type : PrescaleEvent
    }

    tprHelixDeMIpaPhiScaledEventPrescale : {
      module_type : PrescaleEvent
    }
    tprHelixDeMIpaPhiScaledPrescale : {
      module_type : PrescaleEvent
    }

    #filters for the paths where decision is made using the TrackSeed
    tprDeMHighPStopTargEventPrescale: {
      module_type : PrescaleEvent
    }

    tprDeMHighPStopTargPrescale : {
      module_type : PrescaleEvent
    }

    tprDePHighPStopTargEventPrescale: {
      module_type : PrescaleEvent
    }
    tprDePHighPStopTargPrescale : {
      module_type : PrescaleEvent
    }


    tprDeMEventPrescale: {
      module_type : PrescaleEvent
    }

    tprDeMPrescale : {
      module_type : PrescaleEvent
    }

    tprDePEventPrescale: {
      module_type : PrescaleEvent
      nPrescale         : 1
    }
    tprDePPrescale : {
      module_type : PrescaleEvent
    }

    #cosmic tpr helix
    tprHelixDeMEventPrescale: {
      module_type : PrescaleEvent
    }

    tprHelixDePEventPrescale: {
      module_type : PrescaleEvent
    }

    tprHelixUeMEventPrescale: {
      module_type : PrescaleEvent
    }

    tprHelixUePEventPrescale: {
      module_type : PrescaleEvent
    }

    # low p particles
    tprDeMLowPStopTargEventPrescale: {
      module_type : PrescaleEvent
    }

    tprDeMLowPStopTargPrescale : {
      module_type : PrescaleEvent
    }

    tprDePLowPStopTargEventPrescale: {
      module_type : PrescaleEvent
    }
    tprDePLowPStopTargPrescale : {
      module_type : PrescaleEvent
    }


    #follow the prescaler filters for Tpr Track sequences
    cprDeMHighPStopTargEventPrescale: {
      module_type : PrescaleEvent
    }

    cprDeMHighPStopTargPrescale : {
      module_type : PrescaleEvent
    }

    cprDePHighPStopTargEventPrescale: {
      module_type : PrescaleEvent
    }

    cprDePHighPStopTargPrescale : {
      module_type : PrescaleEvent
    }

    cprDePLowPStopTargPrescale : {
      module_type : PrescaleEvent
    }

    cprDePLowPStopTargEventPrescale: {
      module_type : PrescaleEvent
    }

    cprDeMLowPStopTargPrescale : {
      module_type : PrescaleEvent
    }

    cprDeMLowPStopTargEventPrescale: {
      module_type : PrescaleEvent
    }

    #cosmic tracks
    cprDeMPrescale : {
      module_type : PrescaleEvent
    }

    cprDeMEventPrescale: {
      module_type : PrescaleEvent
    }

    cprDePPrescale : {
      module_type : PrescaleEvent
    }

    cprDePEventPrescale: {
      module_type : PrescaleEvent
    }

    #cosmic helixes
    cprHelixDeMEventPrescale: {
      module_type : PrescaleEvent
    }

    cprHelixUeMEventPrescale: {
      module_type : PrescaleEvent
    }

    cprHelixDePPrescale : {
      module_type : PrescaleEvent
    }

    cprHelixDePEventPrescale: {
      module_type : PrescaleEvent
    }

    cprHelixUePEventPrescale: {
      module_type : PrescaleEvent
    }

    #prescaler for the sequences that use the combohit collection filtered with the calorimeter cluster
    tprSeedUCCDeMEventPrescale: {
      module_type : PrescaleEvent
    }

    tprSeedUCCDeMPrescale : {
      module_type : PrescaleEvent
    }

    tprSeedUCCDePEventPrescale: {
      module_type : PrescaleEvent
    }
    tprSeedUCCDePPrescale : {
      module_type : PrescaleEvent
    }

    #follow the prescaler filters for Tpr Track sequences
    cprSeedUCCDeMEventPrescale: {
      module_type : PrescaleEvent
    }

    cprSeedUCCDeMPrescale : {
      module_type : PrescaleEvent
    }

    cprSeedUCCDePEventPrescale: {
      module_type : PrescaleEvent
    }
    cprSeedUCCDePPrescale : {
      module_type : PrescaleEvent
    }

  }

  # sequences for different trigger paths.  Early triggers are prescaled
  sequences : {
    # #trkpatrec tracking
    tprTimeClusterDeM    : [ tprTimeClusterDeMEventPrescale,
      @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprTimeClusterDeMTCFilter ]
    tprTimeClusterDeP    : [ tprTimeClusterDePEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprTimeClusterDePTCFilter ]

    # tprHelixDeM          : [ tprHelixDeMEventPrescale, tprHelixDeMSDCountFilter, @sequence::CaloClusterTrigger.Reco, @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
    #        TTtimeClusterFinder, tprHelixDeMTCFilter, TThelixFinder, TTHelixMergerDeM, tprHelixDeMHSFilter  ]
    # tprHelixDeP          : [ tprDePHelixEventPrescale, tprDePHelixSDCountFilter, @sequence::CaloClusterTrigger.Reco, @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
    #        TTtimeClusterFinder, tprHelixDePTCFilter, TThelixFinder, TTHelixMergerDeP, tprHelixDePHSFilter  ]

    tprDeM_highP_stopTarg           : [ tprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMHighPStopTargTCFilter, TThelixFinder, TTHelixMergerDeM, tprDeMHighPStopTargHSFilter, TTKSFDeM, tprDeMHighPStopTargTSFilter, tprDeMHighPStopTargTriggerInfoMerger ]
    trpDeM               : [ tprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMHighPStopTargTCFilter, TThelixFinder, TTHelixMergerDeM, tprDeMHighPStopTargHSFilter, TTKSFDeM, tprDeMHighPStopTargTSFilter, tprDeMHighPStopTargTriggerInfoMerger ]

    tprDeP_highP_stopTarg           : [ tprDePHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDePHighPStopTargTCFilter, TThelixFinder,TTHelixMergerDeP,  tprDePHighPStopTargHSFilter, TTKSFDeP, tprDePHighPStopTargTSFilter, tprDePHighPStopTargTriggerInfoMerger  ]

    tprDeM_lowP_stopTarg       : [ tprDeMLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMLowPStopTargTCFilter, TThelixFinder, TTHelixMergerDeM, tprDeMLowPStopTargHSFilter, TTKSFDeM, tprDeMLowPStopTargTSFilter, tprDeMLowPStopTargTriggerInfoMerger ]
    tprDeP_lowP_stopTarg       : [ tprDePLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDePLowPStopTargTCFilter, TThelixFinder,TTHelixMergerDeP,  tprDePLowPStopTargHSFilter, TTKSFDeP, tprDePLowPStopTargTSFilter, tprDePLowPStopTargTriggerInfoMerger ]

    tprDeM     : [ tprDeMEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMTCFilter, TThelixFinder, TTHelixMergerDeM, tprDeMHSFilter, TTKSFDeM, tprDeMTSFilter, tprDeMTriggerInfoMerger ]
    tprDeP     : [ tprDePEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDePTCFilter, TThelixFinder,TTHelixMergerDeP,  tprDePHSFilter, TTKSFDeP, tprDePTSFilter, tprDePTriggerInfoMerger ]

    tprHelixDeM     : [ tprHelixDeMEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprHelixDeMTCFilter, TThelixFinder, TTHelixMergerDeM, tprHelixDeMHSFilter, tprHelixDeMTriggerInfoMerger ]
    tprHelixDeP     : [ tprHelixDePEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprHelixDePTCFilter, TThelixFinder,TTHelixMergerDeP,  tprHelixDePHSFilter, tprHelixDePTriggerInfoMerger ]

    tprHelixUeM     : [ tprHelixUeMEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinderUe, tprHelixUeMTCFilter, TThelixFinderUe, TTHelixMergerUeM, tprHelixUeMHSFilter, tprHelixUeMTriggerInfoMerger ]
    tprHelixUeP     : [ tprHelixUePEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinderUe, tprHelixUePTCFilter, TThelixFinderUe,TTHelixMergerUeP,  tprHelixUePHSFilter, tprHelixUePTriggerInfoMerger ]


    # sequences that use a collection of combohits filtered using the calorimeter cluster info
    tprSeedUCCDeM        : [ tprSeedUCCDeMEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHitsUCC,
      TTtimeClusterFinderUCC, tprSeedUCCDeMTCFilter, TThelixFinderUCC, TTHelixUCCMergerDeM, tprSeedUCCDeMHSFilter, TTKSFUCCDeM, tprSeedUCCDeMTSFilter, tprSeedUCCDeMTriggerInfoMerger ]
    tprSeedUCCDeP        : [ tprSeedUCCDePEventPrescale,  @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHitsUCC,
      TTtimeClusterFinderUCC, tprSeedUCCDePTCFilter, TThelixFinderUCC, TTHelixUCCMergerDeP, tprSeedUCCDePHSFilter, TTKSFUCCDeP, tprSeedUCCDePTSFilter, tprSeedUCCDeMTriggerInfoMerger ]

    #   calibration with DIO-Michel form Inner Proton Absorber
    tprHelixDeM_ipa_phiScaled  : [ tprHelixDeMIpaPhiScaledEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprHelixDeMIpaPhiScaledTCFilter, TThelixFinder, TTHelixMergerDeM, tprHelixDeMIpaPhiScaledHSFilter, tprHelixDeMIpaPhiScaledTriggerInfoMerger  ]

    #    beam monitoring using the e- from the DIO in the IPA
    tprHelixDeM_ipa       : [ tprHelixDeMIpaEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprHelixDeMIpaTCFilter, TThelixFinder, TTHelixMergerDeM, tprHelixDeMIpaHSFilter, tprHelixDeMIpaTriggerInfoMerger  ]

    #calo-seeded tracking
    cprDeM_highP_stopTarg           : [ cprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDeMHighPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM, cprDeMHighPStopTargHSFilter,
      TTCalSeedFitDem, cprDeMHighPStopTargTSFilter, cprDeMHighPStopTargTriggerInfoMerger ]
    cprDeP_highP_stopTarg           : [ cprDePHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDePHighPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP, cprDePHighPStopTargHSFilter,
      TTCalSeedFitDep, cprDePHighPStopTargTSFilter, cprDePHighPStopTargTriggerInfoMerger ]

    cprDeM_lowP_stopTarg       : [ cprDeMLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDeMLowPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM, cprDeMLowPStopTargHSFilter,
      TTCalSeedFitDem, cprDeMLowPStopTargTSFilter, cprDeMLowPStopTargTriggerInfoMerger ]
    cprDeP_lowP_stopTarg       : [ cprDePLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDePLowPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP, cprDePLowPStopTargHSFilter,
      TTCalSeedFitDep, cprDePLowPStopTargTSFilter, cprDePLowPStopTargTriggerInfoMerger ]

    cprDeM     : [ cprDeMEventPrescale,  @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDeMTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM, cprDeMHSFilter,
      TTCalSeedFitDem, cprDeMTSFilter, cprDeMTriggerInfoMerger ]
    cprDeP     : [ cprDePEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDePTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP, cprDePHSFilter,
      TTCalSeedFitDep, cprDePTSFilter, cprDePTriggerInfoMerger ]
    cprHelixDeM     : [ cprHelixDeMEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprHelixDeMTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM, cprHelixDeMHSFilter, cprHelixDeMTriggerInfoMerger ]
    cprHelixDeP     : [ cprHelixDePEventPrescale,  @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprHelixDePTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP, cprHelixDePHSFilter, cprHelixDePTriggerInfoMerger ]
    cprHelixUeM     : [ cprHelixUeMEventPrescale,  @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinderUe, cprHelixUeMTCFilter, TTCalHelixFinderUe, TTCalHelixMergerUeM, cprHelixUeMHSFilter ]
    cprHelixUeP     : [ cprHelixUePEventPrescale,   @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinderUe, cprHelixUePTCFilter, TTCalHelixFinderUe, TTCalHelixMergerUeP, cprHelixUePHSFilter ]

    cprSeedUCCDeM        : [ cprSeedUCCDeMEventPrescale,  @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHitsUCC,
      TTCalTimePeakFinderUCC, cprSeedUCCDeMTCFilter, TTCalHelixFinderUCCDe, TTCalHelixUCCMergerDeM, cprSeedUCCDeMHSFilter,
      TTCalSeedFitUCCDem, cprSeedUCCDeMTSFilter, cprSeedUCCDeMTriggerInfoMerger ]
    cprSeedUCCDeP        : [ cprSeedUCCDePEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHitsUCC,
      TTCalTimePeakFinderUCC, cprSeedUCCDePTCFilter, TTCalHelixFinderUCCDe, TTCalHelixUCCMergerDeP, cprSeedUCCDePHSFilter,
      TTCalSeedFitUCCDep, cprSeedUCCDePTSFilter, cprSeedUCCDePTriggerInfoMerger ]

    #fast tracking sequences that uses the calorimeter-time selection to reduce the number of TimeClusters and also the number of hits processed by the Delta-ray
    #removal algorithm
    # fastTprSeedDeM  : [ tprDeMHighPStopTargEventPrescale, TrackSDCountFilter, @sequence::CaloClusterTrigger.Reco, @sequence::TrkHitRecoTrigger.sequences.TTmakefastHits,
    #         TTfastTimeClusterFinder, tprFTCFilter, TTDeltaFinder, TTfastHelixFinder, FtprDeMHelixFilter, TTFKSFDeM, FtprDeMHighPStopTargFilter, tprDeMHighPStopTargPrescale ]
    # fastTprSeedDeP  : [ tprDePHighPStopTargEventPrescale, TrackSDCountFilter, @sequence::CaloClusterTrigger.Reco,  @sequence::TrkHitRecoTrigger.sequences.TTmakefastHits,
    #         TTfastTimeClusterFinder, tprFTCFilter, TTDeltaFinder, TTfastHelixFinder, FtprDePHelixFilter, TTFKSFDeP, FtprDePHighPStopTargFilter, tprDePHighPStopTargPrescale ]


    # sequences for doing timing tests
    tprDeM_highP_stopTarg_timing0   : [ tprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMHighPStopTargTCFilter, TThelixFinder, TTHelixMergerDeM, tprDeMHighPStopTargHSFilter, TTKSFDeM, tprDeMHighPStopTargTriggerInfoMerger ]
    tprDeM_highP_stopTarg_timing1   : [ tprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMHighPStopTargTCFilter, TThelixFinder, TTHelixMergerDeM ]
    tprDeM_highP_stopTarg_timing2   : [ tprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder ]

    tprDeP_highP_stopTarg_timing0   : [ tprDePHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDePHighPStopTargTCFilter, TThelixFinder, TTHelixMergerDeP, tprDePHighPStopTargHSFilter, TTKSFDeP, tprDePHighPStopTargTriggerInfoMerger ]
    tprDeP_highP_stopTarg_timing1   : [ tprDePHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDePHighPStopTargTCFilter, TThelixFinder, TTHelixMergerDeP ]
    tprDeP_highP_stopTarg_timing2   : [ tprDePHighPStopTargEventPrescale,  @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder ]

    cprDeM_highP_stopTarg_timing0   : [ cprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDeMHighPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM, cprDeMHighPStopTargHSFilter,
      TTCalSeedFitDem, cprDeMHighPStopTargTriggerInfoMerger ]
    cprDeM_highP_stopTarg_timing1   : [ cprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDeMHighPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM ]
    cprDeM_highP_stopTarg_timing2   : [ cprDeMHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder ]

    cprDeP_highP_stopTarg_timing0   : [ cprDePHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDePHighPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP, cprDePHighPStopTargHSFilter,
      TTCalSeedFitDep, cprDePHighPStopTargTriggerInfoMerger ]
    cprDeP_highP_stopTarg_timing1   : [ cprDePHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDePHighPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP ]
    cprDeP_highP_stopTarg_timing2   : [ cprDePHighPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder ]



    tprDeM_lowP_stopTarg_timing0      : [ tprDeMLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMLowPStopTargTCFilter, TThelixFinder, TTHelixMergerDeM, tprDeMLowPStopTargHSFilter,
      TTKSFDeM, tprDeMLowPStopTargTriggerInfoMerger ]

    tprDeM_lowP_stopTarg_timing1      : [ tprDeMLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMLowPStopTargTCFilter, TThelixFinder, TTHelixMergerDeM ]

    tprDeM_lowP_stopTarg_timing2      : [ tprDeMLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder ]


    tprDeP_lowP_stopTarg_timing0      : [ tprDePLowPStopTargEventPrescale,  @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDePLowPStopTargTCFilter, TThelixFinder, TTHelixMergerDeP, tprDePLowPStopTargHSFilter,
      TTKSFDeP, tprDePLowPStopTargTriggerInfoMerger ]

    tprDeP_lowP_stopTarg_timing1      : [ tprDePLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDePLowPStopTargTCFilter, TThelixFinder, TTHelixMergerDeP ]

    tprDeP_lowP_stopTarg_timing2      : [ tprDePLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder ]


    cprDeM_lowP_stopTarg_timing0      : [ cprDeMLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDeMLowPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM, cprDeMLowPStopTargHSFilter,
      TTCalSeedFitDem, cprDeMLowPStopTargTriggerInfoMerger ]

    cprDeM_lowP_stopTarg_timing1      : [ cprDeMLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDeMLowPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeM]

    cprDeM_lowP_stopTarg_timing2      : [ cprDeMLowPStopTargEventPrescale,  @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder]


    cprDeP_lowP_stopTarg_timing0      : [ cprDePLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDePLowPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP, cprDePLowPStopTargHSFilter,
      TTCalSeedFitDep, cprDePLowPStopTargTriggerInfoMerger ]

    cprDeP_lowP_stopTarg_timing1      : [ cprDePLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDePLowPStopTargTCFilter, TTCalHelixFinderDe, TTCalHelixMergerDeP ]

    cprDeP_lowP_stopTarg_timing2      : [ cprDePLowPStopTargEventPrescale, @sequence::CaloHitRecoTrigger.prepareHits,  @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder ]


    #kalman filter included
    tprKalDeM  : [ @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMHighPStopTargTCFilter, TThelixFinder, TTHelixMergerDeM, tprDeMHighPStopTargHSFilter,
      TTKSFDeM, tprDeMHighPStopTargTSFilter, TTKFFDeM, tprDeMHighPStopTargKFFilter ]
    # add sequences for upstream, calibration, ...  FIXME!
  }
}
END_PROLOG
