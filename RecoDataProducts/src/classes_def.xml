<!--  -->
<!--  Only include art::Wrapper lines for objects that we would like to put into the event -->
<!--  Include the non-wrapper lines for all objects on the art::Wrapper lines and     -->
<!--  for all objects inside of those objects.                                        -->
<!--  -->

<lcgdict>

 <class name="std::vector<std::pair<unsigned int, unsigned int> >"/>
<!--  ********* cosmics  ********* -->
 <class name="mu2e::CosmicTrackSeed"/>
 <class name="mu2e::CosmicTrackSeedCollection"/>
 <class name="art::Ptr<mu2e::CosmicTrackSeed>"/>
 <class name="art::Wrapper<mu2e::CosmicTrackSeedCollection>"/>

<!--  ********* calorimeter  ********* -->
 <class name="mu2e::CaloDigi"/>
 <class name="mu2e::CaloDigiCollection"/>
 <class name="art::Ptr<mu2e::CaloDigi>"/>
 <class name="std::vector<art::Ptr<mu2e::CaloDigi> >"/>
 <class name="art::Wrapper<mu2e::CaloDigiCollection>"/>

 <class name="mu2e::CaloRecoDigi"/>
 <class name="std::vector<art::Ptr<mu2e::CaloRecoDigi> >"/>
 <class name="mu2e::CaloRecoDigiCollection"/>
 <class name="art::Ptr<mu2e::CaloRecoDigi>"/>
 <class name="art::Wrapper<mu2e::CaloRecoDigiCollection>"/>

 <class name="mu2e::CaloHit"/>
 <class name="std::vector<art::Ptr<mu2e::CaloHit> >"/>
 <class name="mu2e::CaloHitCollection"/>
 <class name="art::Ptr<mu2e::CaloHit>"/>
 <class name="art::Wrapper<mu2e::CaloHitCollection>"/>

 <class name="mu2e::CaloCrystalHit"/>
 <class name="art::Ptr<mu2e::CaloCrystalHit>"/>
 <class name="std::vector<art::Ptr<mu2e::CaloCrystalHit> >"/>
 <class name="mu2e::CaloCrystalHitCollection"/>
 <class name="std::pair<art::Ptr<mu2e::CaloCrystalHit>, art::Ptr<mu2e::CaloCrystalHit> >"/>
 <class name="std::map<art::Ptr<mu2e::CaloCrystalHit>, art::Ptr<mu2e::CaloCrystalHit> >"/> 
 <class name="mu2e::CaloCrystalHitRemapping"/>
 <class name="art::Wrapper<mu2e::CaloCrystalHitCollection>"/>
 <class name="art::Wrapper<mu2e::CaloCrystalHitRemapping>"/>

 <class name="mu2e::CaloProtoCluster"/>
 <class name="art::Ptr<mu2e::CaloProtoCluster>"/>
 <class name="mu2e::CaloProtoClusterCollection"/>
 <class name="std::vector<art::Ptr<mu2e::CaloProtoCluster> >"/>
 <class name="art::Wrapper<mu2e::CaloProtoClusterCollection>"/>

 <class name="mu2e::CaloCluster"/>
 <class name="std::vector<art::Ptr<mu2e::CaloCluster> >"/>
 <class name="mu2e::CaloClusterCollection"/>
 <class name="art::Ptr<mu2e::CaloCluster>"/>
 <class name="art::Wrapper<mu2e::CaloClusterCollection>"/>

 <class name="mu2e::CaloTrigSeed"/>
 <class name="std::vector<art::Ptr<mu2e::CaloTrigSeed> >"/>
 <class name="mu2e::CaloTrigSeedCollection"/>
 <class name="art::Ptr<mu2e::CaloTrigSeed>"/>
 <class name="art::Wrapper<mu2e::CaloTrigSeedCollection>"/>

<!--  ********* straws  ********* -->
 <class name="mu2e::StrawHit"/>
 <class name="mu2e::StrawHitCollection"/>
 <class name="art::Ptr<mu2e::StrawHit>"/>
 <class name="std::vector<art::Ptr<mu2e::StrawHit> >"/>
 <class name="art::Wrapper<mu2e::StrawHitCollection>"/>

 <class name="mu2e::StrawHitFlag"/>
 <class name="mu2e::StrawHitFlagDetail"/>
 <class name="mu2e::StrawHitFlagCollection"/>
 <class name="art::Ptr<mu2e::StrawHitFlag>"/>
 <class name="std::vector<art::Ptr<mu2e::StrawHitFlag> >"/>
 <class name="art::Wrapper<mu2e::StrawHitFlagCollection>"/>

 <class name="mu2e::ComboHit"/>
 <class name="std::vector<mu2e::ComboHit>"/>
 <class name="mu2e::ComboHitCollection"/>
 <class name="std::vector<art::Ptr<mu2e::ComboHit> >"/>
 <class name="art::Ptr<mu2e::ComboHit>"/>
 <class name="art::Wrapper<mu2e::ComboHitCollection>"/>

 <class name="mu2e::HelixHit"/>
 <class name="mu2e::HelixHitCollection"/>
 <class name="art::Ptr<mu2e::HelixHit>"/>
 <class name="std::vector<art::Ptr<mu2e::HelixHit> >"/>

 <class name="mu2e::StrawDigiFlag"/>
 <class name="mu2e::StrawDigiFlagDetail"/>

 <class name="mu2e::StrawDigi"/>
 <class name="mu2e::StrawDigiCollection"/>
 <class name="std::vector<art::Ptr<mu2e::StrawDigi> >"/>
 <class name="art::Ptr<mu2e::StrawDigi>"/>
 <class name="art::Wrapper<mu2e::StrawDigiCollection>"/>

<!--  ********* tracking intermediate products  ********* -->

 <class name="mu2e::TimeCluster"/>
 <class name="mu2e::TimeClusterCollection"/>
 <class name="art::Ptr<mu2e::TimeCluster>"/>
 <class name="std::vector<art::Ptr<mu2e::TimeCluster> >"/>
 <class name="art::Wrapper<mu2e::TimeClusterCollection>"/>


 <class name="mu2e::HelixVal"/>
 <class name="art::Ptr<mu2e::HelixVal>"/>

 <class name="mu2e::HelixCov"/>
 <class name="art::Ptr<mu2e::HelixCov>"/>

 <class name="TrkT0"/>   <!-- BTrk -->
 <class name="mu2e::HitT0"/>
 <class name="mu2e::RobustHelix"/>
 <class name="mu2e::HelixSeed"/>
 <class name="mu2e::HelixSeedCollection" /> 
 <class name="art::Ptr<mu2e::HelixSeed>"/>
 <class name="art::Wrapper<mu2e::HelixSeedCollection>"/>

 <class name="mu2e::BkgQual"/>
 <class name="mu2e::BkgQualCollection"/>
 <class name="mu2e::BkgQualDetail"/>
 <class name="art::Wrapper<mu2e::BkgQualCollection>"/>

 <class name="mu2e::BkgClusterFlag"/>
 <class name="mu2e::BkgClusterFlagDetail"/>

 <class name="mu2e::BkgClusterHit"/>
 <class name="std::vector<mu2e::BkgClusterHit>"/>
 <class name="art::Wrapper<mu2e::BkgClusterHitCollection>"/>
 <class name="mu2e::BkgCluster"/>
 <class name="mu2e::BkgClusterCollection"/>
 <class name="art::Wrapper<mu2e::BkgClusterCollection>"/>


<!--  ********* tracking output  ********* -->

 <class name="mu2e::TrackSeed"/>
 <class name="mu2e::TrackSeedCollection" />
 <class name="art::Ptr<mu2e::TrackSeed>"/>
 <class name="art::Wrapper<mu2e::TrackSeedCollection>"/>
 <class name="std::vector<art::Ptr<mu2e::TrackSeed> >"/>

 <class name="mu2e::TrkFitFlag"/>
 <class name="mu2e::TrkFitFlagDetail"/>

 <class name="mu2e::TrkExtTrajPoint" />
 <class name="std::vector<mu2e::TrkExtTrajPoint>" />
 <class name="mu2e::TrkExtTraj" />
 <class name="std::vector<mu2e::TrkExtTraj>" />
 <class name="mu2e::TrkExtTrajCollection" />
 <class name="art::Ptr<mu2e::TrkExtTrajPoint>" />
 <class name="art::Ptr<mu2e::TrkExtTraj>" />
 <class name="art::Wrapper<mu2e::TrkExtTrajCollection>" />

 <class name="mu2e::TrackSummary::HelixParams"/>
 <class name="mu2e::TrackSummary::TrackStateAtPoint"/>
 <class name="std::vector<mu2e::TrackSummary::TrackStateAtPoint>"/>
 <class name="mu2e::TrackSummary"/>
 <class name="std::vector<mu2e::TrackSummary>"/>
 <class name="art::Wrapper<std::vector<mu2e::TrackSummary> >"/>
 <class name="art::Ptr<mu2e::TrackSummary>" />

 <class name="mu2e::KalRepPtr"/>
 <class name="mu2e::KalRepPtrCollection" persistent="false"/>
 <class name="art::Wrapper<mu2e::KalRepPtrCollection>"/>

 <class name="mu2e::TrkFitDirection"/>
 <class name="TrkParticle"/>   <!-- BTrk -->
 <class name="mu2e::TrkStrawHitSeed"/>
 <class name="mu2e::TrkCaloHitSeed"/>
 <class name="mu2e::TrkStraw"/>
 <class name="mu2e::KalSegment"/>
 <class name="std::vector<mu2e::TrkStrawHitSeed>"/>
 <class name="std::vector<mu2e::TrkCaloHitSeed>"/>
 <class name="std::vector<mu2e::TrkStraw>"/>
 <class name="std::vector<mu2e::KalSegment>"/>

 <class name="mu2e::KalSeed"/>
 <class name="mu2e::KalSeedCollection"/>
 <class name="art::Wrapper<mu2e::KalSeedCollection>"/>
 <class name="art::Ptr<mu2e::KalSeed>"/>

 <class name="mu2e::MVAStatus"/>
 <class name="mu2e::TrkQual"/>
 <class name="mu2e::TrkQualCollection"/>
 <class name="mu2e::TrkQualDetail"/>
 <class name="art::Wrapper<mu2e::TrkQualCollection>"/>

 <class name="mu2e::TrkCaloHitPID"/>
 <class name="mu2e::TrkCaloHitPIDCollection"/>
 <class name="mu2e::TrkCaloHitPIDDetail"/>
 <class name="art::Wrapper<mu2e::TrkCaloHitPIDCollection>"/>

 <class name="mu2e::RecoQual"/>
 <class name="mu2e::RecoQualCollection"/>
 <class name="art::Wrapper<mu2e::RecoQualCollection>"/>
 
 <class name="mu2e::AlgorithmID"/>
 <class name="mu2e::AlgorithmIDCollection"/>
 <class name="art::Ptr<mu2e::AlgorithmID>"/>
 <class name="std::vector<art::Ptr<mu2e::AlgorithmID> >"/>
 <class name="art::Wrapper<mu2e::AlgorithmIDCollection>"/>

 
 <class name="std::pair<art::Ptr<mu2e::KalRepPtr>,art::Ptr<mu2e::TrackSummary> >" />
 <class name="std::pair<art::Ptr<mu2e::TrackSummary>,art::Ptr<mu2e::KalRepPtr> >" />
 <class name="std::vector<std::pair<art::Ptr<mu2e::KalRepPtr>,art::Ptr<mu2e::TrackSummary> > >" />
 <class name="std::vector<std::pair<art::Ptr<mu2e::TrackSummary>,art::Ptr<mu2e::KalRepPtr> > >" />

 <class name="art::Assns<mu2e::KalRepPtr,mu2e::TrackSummary,void>" persistent="false"  />
 <class name="art::Assns<mu2e::TrackSummary,mu2e::KalRepPtr,void>" persistent="false"  />
 <class name="art::Wrapper<art::Assns<mu2e::KalRepPtr,mu2e::TrackSummary,void> >" />
 <class name="art::Wrapper<art::Assns<mu2e::TrackSummary,mu2e::KalRepPtr,void> >" />


<!--  ********* extrapolation and PID  ********* -->
 <class name="mu2e::TrkCaloIntersect" />
 <class name="std::vector<mu2e::TrkCaloIntersect>" />
 <class name="mu2e::TrkCaloIntersectCollection" />
 <class name="art::Ptr<mu2e::TrkCaloIntersect>" />
 <class name="art::Wrapper<mu2e::TrkCaloIntersectCollection>"/>

 <class name="mu2e::TrackCaloMatchInfo" />
 <class name="std::vector<mu2e::TrackCaloMatchInfo>" />

 <class name="mu2e::TrkCaloMatch" />
 <class name="std::vector<mu2e::TrkCaloMatch>" />
 <class name="mu2e::TrkCaloMatchCollection" />
 <class name="art::Ptr<mu2e::TrkCaloMatch>" />
 <class name="art::Wrapper<mu2e::TrkCaloMatchCollection>"/>

 <class name="mu2e::TrkToCaloExtrapol" />
 <class name="mu2e::TrkToCaloExtrapolCollection" />
 <class name="art::Ptr<mu2e::TrkToCaloExtrapol>"/>
 <class name="std::vector<art::Ptr<mu2e::TrkToCaloExtrapol> >" />
 <class name="art::Wrapper<mu2e::TrkToCaloExtrapolCollection>" />

 <class name="mu2e::TrackClusterMatch" />
 <class name="std::vector<mu2e::TrackClusterMatch>"  />
 <class name="art::Wrapper<mu2e::TrackClusterMatchCollection>" />

 <class name="mu2e::PIDProduct" />
 <class name="mu2e::PIDProductCollection" />
 <class name="art::Ptr<mu2e::PIDProduct>" />
 <class name="art::Wrapper<mu2e::PIDProductCollection>" />

 <class name="mu2e::AvikPIDProduct" />
 <class name="mu2e::AvikPIDProductCollection" />
 <class name="art::Ptr<mu2e::AvikPIDProduct>" />
 <class name="art::Wrapper<mu2e::AvikPIDProductCollection>" />

 <class name="mu2e::AvikPIDNewProduct" />
 <class name="mu2e::AvikPIDNewProductCollection" />
 <class name="art::Ptr<mu2e::AvikPIDNewProduct>" />
 <class name="art::Wrapper<mu2e::AvikPIDNewProductCollection>" />

 <class name="std::pair<art::Ptr<mu2e::KalRepPtr>,art::Ptr<mu2e::CaloCluster> >" />
 <class name="std::pair<art::Ptr<mu2e::CaloCluster>,art::Ptr<mu2e::KalRepPtr> >" />

 <class name="art::Assns<mu2e::KalRepPtr,mu2e::CaloCluster, mu2e::TrackCaloMatchInfo>" />
 <class name="art::Assns<mu2e::CaloCluster,mu2e::KalRepPtr, mu2e::TrackCaloMatchInfo>" />
 <class name="art::Assns<mu2e::KalRepPtr,mu2e::CaloCluster,void>" />
 <class name="art::Assns<mu2e::CaloCluster,mu2e::KalRepPtr,void>" />
 <class name="art::Wrapper<art::Assns<mu2e::KalRepPtr,mu2e::CaloCluster, mu2e::TrackCaloMatchInfo> >" />
 <class name="art::Wrapper<art::Assns<mu2e::CaloCluster,mu2e::KalRepPtr, mu2e::TrackCaloMatchInfo> >" />

<!--  ********* CRV  ********* -->
 <class name="mu2e::CrvDigi" />
 <class name="std::vector<mu2e::CrvDigi>" />
 <class name="mu2e::CrvDigiCollection" />
 <class name="art::Wrapper<mu2e::CrvDigiCollection>" />

 <class name="mu2e::CrvRecoPulse" />
 <class name="art::Ptr<mu2e::CrvRecoPulse>"/>
 <class name="std::vector<mu2e::CrvRecoPulse>" />
 <class name="std::vector<art::Ptr<mu2e::CrvRecoPulse> >" />
 <class name="mu2e::CrvRecoPulseCollection" />
 <class name="art::Wrapper<mu2e::CrvRecoPulseCollection>" />

 <class name="mu2e::CrvCoincidence" />
 <class name="std::vector<mu2e::CrvCoincidence>" />
 <class name="mu2e::CrvCoincidenceCollection" />
 <class name="art::Wrapper<mu2e::CrvCoincidenceCollection>" />

 <class name="mu2e::CrvCoincidenceCluster" />
 <class name="std::vector<mu2e::CrvCoincidenceCluster>" />
 <class name="mu2e::CrvCoincidenceClusterCollection" />
 <class name="art::Wrapper<mu2e::CrvCoincidenceClusterCollection>" />

<!--  ********* ExtMon  ********* -->
 <class name="mu2e::ExtMonFNALRawHit" />
 <class name="std::vector<mu2e::ExtMonFNALRawHit>" />
 <class name="mu2e::ExtMonFNALRawHitCollection" />
 <class name="art::Wrapper<mu2e::ExtMonFNALRawHitCollection>" />

 <class name="art::Ptr<mu2e::ExtMonFNALRawHit>" />
 <class name="art::PtrVector<mu2e::ExtMonFNALRawHit>" />

 <class name="mu2e::ExtMonFNALRawCluster" />
 <class name="art::Ptr<mu2e::ExtMonFNALRawCluster>" />
 <class name="std::vector<mu2e::ExtMonFNALRawCluster>" />
 <class name="mu2e::ExtMonFNALRawClusterCollection" />
 <class name="art::Wrapper<mu2e::ExtMonFNALRawClusterCollection>" />

 <class name="mu2e::ExtMonFNALRecoCluster" />
 <class name="std::vector<mu2e::ExtMonFNALRecoCluster>" />
 <class name="std::vector<std::vector<mu2e::ExtMonFNALRecoCluster> >" />
 <class name="mu2e::ExtMonFNALRecoClusterCollection" />
 <class name="art::Wrapper<mu2e::ExtMonFNALRecoClusterCollection>" />

 <class name="art::Ptr<mu2e::ExtMonFNALRecoCluster>" />
 <class name="std::vector<art::Ptr<mu2e::ExtMonFNALRecoCluster> >" />

 <class name="mu2e::ExtMonFNALTrkParam" />
 <class name="mu2e::ExtMonFNALTrkFitQuality" />
 <class name="mu2e::ExtMonFNALTrkClusterResiduals" />
 <class name="std::vector<mu2e::ExtMonFNALTrkClusterResiduals>" />
 <class name="mu2e::ExtMonFNALTrkFit" />
 <class name="mu2e::ExtMonFNALTrkFitCollection" />
 <class name="art::Wrapper<mu2e::ExtMonFNALTrkFitCollection>" />

<!--  ********* trigger  ********* -->

 <class name="mu2e::TriggerFlagDetail"/>
 <class name="mu2e::TriggerFlag"/>
 <class name="mu2e::TriggerInfo"/>
 <class name="mu2e::TriggerInfoCollection" /> 
 <class name="art::Wrapper<mu2e::TriggerInfo>"/>
 <class name="art::Wrapper<mu2e::TriggerInfoCollection>"/>

<!--  ********* general reco ********* -->

 <class name="mu2e::AHist<uint16_t,70>"/>
 <class name="mu2e::RecoCount"/>
 <class name="art::Wrapper<mu2e::RecoCount>"/>

</lcgdict>
