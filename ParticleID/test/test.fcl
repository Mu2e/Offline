#------------------------------------------------------------------------------
# standalone test by Vadim Rusu
# creates output histogram file testpid.root
#------------------------------------------------------------------------------
#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"

process_name : TestPID

source : {
  module_type : RootInput
    #  fileNames   : [ "/grid/data/mu2e/outstage/murat/cb000101/cb000101.04861x0000"]
    fileNames   : [ "/grid/data/mu2e/outstage/murat/cb000101/cb000101.04861x0000","/grid/data/mu2e/outstage/murat/cb000101/cb000101.04862x0000","/grid/data/mu2e/outstage/murat/cb000101/cb000101.04863x0000","/grid/data/mu2e/outstage/murat/cb000101/cb000101.04865x0000","/grid/data/mu2e/outstage/murat/cb000101/cb000101.04866x0000","/grid/data/mu2e/outstage/murat/cb000101/cb000101.04867x0000","/grid/data/mu2e/outstage/murat/cb000101/cb000101.04868x0000","/grid/data/mu2e/outstage/murat/cb000101/cb000101.04869x0000"]
    #    maxEvents   : 100
}

services : {
  message      : @local::default_message
#  TFileService : { fileName : "out/ex01.root" }
  TFileService : { fileName : "testpid.root" }

  GeometryService        : { inputFile      : "Offline/Mu2eG4/geom/geom_common.txt"            }
  ConditionsService      : { conditionsfile : "Offline/ConditionsService/data/conditions_01.txt"      }
  GlobalConstantsService : { inputFile      : "Offline/GlobalConstantsService/data/globalConstants_01.txt" }
  BTrkHelper             : @local::BTrkHelperDefault

}

physics : {

    producers : {
        FSHPreStereo         : @local::FSHPreStereo
        MakeStereoHits       : @local::MakeStereoHits
        FlagStrawHits        : @local::FlagStrawHits
        FlagBkgHits          : @local::FlagBkgHits
# Tracking for some different particle types
        TPRDeM  : @local::TrkPatRecDeM
        TPRDmuM : @local::TrkPatRecDmuM
        PID                  : @local::ParticleID
    }

    analyzers : {
        RKFDeM : {
            module_type       : ReadKalFits
            fitterModuleLabel : TPRDeM
            fitparticle       : 11
            fitdirection      : 0
        verbosity         : 0
            maxPrint          : 0


    }
        RKFDmuM : {
            module_type       : ReadKalFits
            fitterModuleLabel : TPRDmuM
            fitparticle       : 13
            fitdirection      : 0
            verbosity         : 0
            maxPrint          : 0
        }

        PIDReadDeM :  {
            module_type    : ParticleIDRead
            fitterModuleLabel : PID
            verbosity : 0
            maxPrint : 10

        }
    }

    p1 : [ FSHPreStereo
           , MakeStereoHits, FlagStrawHits, FlagBkgHits
           , TPRDeM, TPRDmuM, PID]

    e1 : [ PIDReadDeM]

    trigger_paths  : [p1]
    end_paths      : [e1]
}

outputs: {
    # Print info about all data products in the file.
    dump: {
        module_type   : DataProductDump
    }
}
#------------------------------------------------------------------------------
# re-definitions
#------------------------------------------------------------------------------
# print per event timing for ::event entry points
# services.Timing: { }
# print

services.scheduler.wantSummary: true
physics.producers.PID.fitterModuleLabel    : TPRDeM

