#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "JobConfig/reco/prolog.fcl"
#include "CosmicReco/fcl/prolog.fcl"

process_name : CosmicAlignTrackSelector

source : { module_type : RootInput }

services : @local::Services.Reco

physics :
{
  producers : {
    @table::Reconstruction.producers
    @table::CommonMC.producers
    @table::CosmicTracking.producers
  }
  filters :  {
    @table::Reconstruction.filters
    @table::CosmicTracking.filters
  }
  analyzers: {
    @table::Reconstruction.analyzers
    @table::CosmicTracking.analyzers
  }
  RecoPath : [ @sequence::Reconstruction.RecoMCPath ]
  EndPath : [ Output, RecoCheck ]
}

outputs : {
  Output :@local::Reconstruction.Output

  CosmicTrackSelector : {
      module_type: RootOutput
      fileName: "dig.owner.CosmicAlignTrackSelector-description.version.sequencer.art"
      SelectEvents: [ RecoPath ]
      outputCommands :  ["drop *_*_*_*", "keep *_*_*_CosmicAlignTrackSelector"]
  }
}

# My epilog
outputs.Output.SelectEvents : [ "RecoPath" ]
services.TFileService.fileName: "nts.owner.CosmicAlignTrackSelector-description.version.sequencer.root"
outputs.Output.fileName: "dig.owner.CosmicAlignTrackSelector-description.version.sequencer.art"
outputs.Output.outputCommands : ["drop *_*_*_*", "keep *_*_*_CosmicAlignTrackSelector"]

services.scheduler.wantSummary: true

physics.RecoPath : [ @sequence::TrkHitReco.PrepareHits, SimpleTimeCluster, LineFinder, CosmicTrackFinderTimeFit ]
outputs.CosmicTrackSelector.SelectEvents : [ RecoPath ]
physics.EndPath : [ CosmicTrackSelector]//,CosmicFitDisplayNew ]
physics.end_paths : [ EndPath ] # needed for generate_fcl

#physics.filters.AlignTrackSelector.CosmicTrackSeedCollection : "CosmicTrackFinderTimeFit"

# these lines are needed to improve performance
services.ProditionsService.strawResponse.useParameterizedDriftErrors : true
physics.producers.makePH.TestRadius : false
physics.producers.makePH.TestFlag : false
