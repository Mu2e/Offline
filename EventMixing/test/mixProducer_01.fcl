# Make an input file with which to test event mixing.
#
# $Id: mixProducer_01.fcl,v 1.2 2012/03/02 17:16:22 gandr Exp $
# $Author: gandr $
# $Date: 2012/03/02 17:16:22 $

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"

# Give this job a name.
process_name : MixProducer01

# Start form an empty source
source :
{
  module_type : EmptyEvent
  maxEvents : 200
}

services :
{
  message : @local::default_message

  TFileService : { fileName : "mixProducer_01.root" }

  RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }

  GeometryService : { inputFile : "Mu2eG4/geom/geom_common.txt" }

  ConditionsService : {  conditionsfile : "Mu2eG4/test/conditions_01.txt" }

  GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }

  G4Helper : { }

}

physics :
{
  producers:
  {

    # Generate the event
    generate: @local::generate

    # Run G4 and add hits to the event
    g4run : @local::g4run

    # Form StrawHits (SH).
    makeSD : @local::makeSD
    makeSH : @local::makeSHfromSD

    @table::CaloDigiMC.producers
    @table::CaloReco.producers

    randomsaver : @local::randomsaver

  }

  analyzers:
  {

    checkhits:
    {
      module_type            : ReadBack
      generatorModuleLabel   : generate
      g4ModuleLabel          : g4run
      caloReadoutModuleLabel : CaloShowerStepROFromShowerStep
      diagLevel              : 0
      minimumEnergy          : 0.000
      maxFullPrint           : 201
    }

    readStrawHits:
    {
      module_type      : ReadStrawHit
      recoModuleLabel : makeSH
      simModuleLabel : makeSD
      diagLevel        : 3
      maxFullPrint     : 100
    }

  }

  p1 : [generate , g4run , makeSD, makeSH, @sequence::CaloDigiMC.DigiSim,@sequence::CaloReco.Reco, randomsaver ]
  e1 : [checkhits, readStrawHits, outfile]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs:
{
  outfile :
  {
    module_type   :   RootOutput
    fileName      :   "mixProducer_data_01.root"
    outputCommands:   [ "keep *_*_*_*"
#                        ,"drop mu2e::PointTrajectorymv_*_*_*"
                      ]
  }

}

physics.producers.makeSH.diagLevel : 0
physics.producers.makeSH.maxFullPrint : 5
physics.producers.generate.inputfile : "Mu2eG4/test/genconfig_01.txt"
