#!/usr/bin/env python
#
#

import os, re
Import('env')

Import('mu2e_helper')

helper=mu2e_helper(env)

rootlibs = env['ROOTLIBS']
babarlibs = env['BABARLIBS']

mainlib = helper.make_mainlib ( [ 'mu2e_Validation_root',
  'mu2e_Mu2eUtilities',
  'mu2e_ConditionsService',
  'mu2e_GeometryService',
  'mu2e_TrackerGeom',
  'mu2e_TrackerConditions',
  'mu2e_MCDataProducts',
  'mu2e_RecoDataProducts',
  'mu2e_DataProducts',
  'mu2e_GeneralUtilities',
  'mu2e_KinKalGeom',
  babarlibs,
  'art_Framework_Core',
  'art_Framework_Principal',
  'art_Framework_Services_Registry',
  'art_root_io_TFileService',
  'art_root_io_tfile_support',
  'art_Persistency_Provenance',
  'art_Persistency_Common',
  'art_Utilities',
  'canvas',
  'cetlib',
  'cetlib_except',
  'KinKal_Trajectory',
  'KinKal_General',
  rootlibs,
  'CLHEP',
  ] )

helper.make_plugins( [ mainlib,'mu2e_Validation_root',
  'mu2e_GeometryService',
  'mu2e_ConditionsService',
  'mu2e_Mu2eUtilities',
  'mu2e_GeneralUtilities',
  'mu2e_MCDataProducts',
  'mu2e_RecoDataProducts',
  'mu2e_DataProducts',
  'mu2e_KinKalGeom',
  'art_Framework_Core',
  'art_Framework_Principal',
  'art_Framework_Services_Registry',
  'art_root_io_TFileService',
  'art_root_io_tfile_support',
  'art_Persistency_Provenance',
  'art_Persistency_Common',
  'art_Utilities',
  'canvas',
  'fhiclcpp',
  'fhiclcpp_types',
  'tbb',
  'cetlib',
  'cetlib_except',
  rootlibs,
  'CLHEP',
  'boost_filesystem' ] )


helper.make_bin( "valCompare", [ 'mu2e_Validation_root', rootlibs ] )


# this tells emacs to view this file in python mode.
# Local Variables:
# mode:python
# End:
