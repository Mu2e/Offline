#
# run tracker and cal reco from a file of digis
#
#include "Mu2eKinKal/fcl/prolog.fcl"
#include "JobConfig/reco/Reco.fcl"

# drop trigger products from input; these are static
source.inputCommands: ["keep *",
  "drop mu2e::KalSeeds_*_*_*",
  "drop mu2e::TriggerInfo_*_*_*",
  "drop mu2e::HelixSeeds_*_*_*",
  "drop mu2e::TimeClusters_*_*_*",
  "drop art::TriggerResults_*_*_*"
]
# add KinKal fits
#
physics.producers : {
  @table::physics.producers
  @table::Mu2eKinKal.producers
}
#
# only run DeM and DeP
#
physics.RecoPath : [
  @sequence::Reconstruction.CaloReco,
  @sequence::Reconstruction.TrkReco,
  @sequence::Reconstruction.CrvReco,
  @sequence::Reconstruction.DeReco,
  @sequence::Reconstruction.MCReco,
  RecoFilter
]
#
physics.producers.SelectRecoMC.KalSeedCollections : [ "KFFDeM", "KFFDeP", "KKSDeM", "KKSDeP"]
physics.producers.SelectRecoMC.HelixSeedCollections  : ["MHDeM", "MHDeP" ]
physics.filters.RecoFilter.TrkTags : [ "KFFDeM", "KFFDeP"]
physics.filters.RecoFilter.MomentumCutoff : [ 60.0, 60.0 ]
physics.producers.KKDeMSeedFit.ModuleSettings.HelixSeedCollections : [ "MHDeM" ]
physics.producers.KKDeMSeedFit.ModuleSettings.ComboHitCollection : "makeSH"
physics.producers.KKDeMSeedFit.ModuleSettings.StrawHitFlagCollection : "FlagBkgHits:StrawHits"
physics.producers.KKDePSeedFit.ModuleSettings.HelixSeedCollections : [ "MHDeP" ]
physics.producers.KKDePSeedFit.ModuleSettings.ComboHitCollection : "makeSH"
physics.producers.KKDePSeedFit.ModuleSettings.StrawHitFlagCollection : "FlagBkgHits:StrawHits"

outputs: {
   Output: {
      SelectEvents: [
         "RecoPath"
      ]
      fileName: "mcs.owner.val-reco.dsconf.seq.art"
      module_type: "RootOutput"
      outputCommands: [
         "drop *_*_*_*",
         "keep mu2e::TriggerInfo_*_*_*",
         "keep art::TriggerResults_*_*_*",
         "keep mu2e::KalSeeds_TT*_*_*",
         "keep mu2e::HelixSeeds_TT*_*_*",
         "keep mu2e::TimeClusters_TT*_*_*",
         "keep mu2e::CaloClusters_CaloClusterFast_*_*",
         "keep mu2e::KalSeeds_KFF*_*_*",
         "keep mu2e::KalSeeds_KSF*_*_*",
         "keep mu2e::KalSeeds_KK*_*_*",
         "keep mu2e::HelixSeeds_MH*_*_*",
         "keep mu2e::TimeClusters_MH*_*_*",
         "keep mu2e::CaloClusters_CaloClusterMaker_*_*",
         "keep mu2e::EventWindowMarker_*_*_*",
         "keep mu2e::ProtonBunchTime_*_*_*",
         "keep *_SelectRecoMC_*_*",
         "keep *_genCounter_*_*",
         "keep mu2e::PrimaryParticle_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep mu2e::ProtonBunchIntensity_*_*_*",
         "keep mu2e::ProtonBunchTimeMC_*_*_*",
         "keep mu2e::EventWeight_*_*_*",
         "keep *_compressRecoMCs_*_*",
	 "drop *_*UeM_*_*",
	 "drop *_*UeP_*_*",
	 "drop *_*DmuP_*_*",
	 "drop *_*DmuM_*_*",
	 "drop *_*UmuP_*_*",
	 "drop *_*UmuM_*_*"
      ]
   }
}

# print summaries
services.scheduler.wantSummary: true
services.TimeTracker.printSummary: true

# histogram file
services.TFileService.fileName : "nts.owner.val-reco.dsconf.seq.root"
# art file
outputs.Output.fileName : "mcs.owner.val-reco.dsconf.seq.art"

# use the default standard geometry
services.GeometryService.inputFile : "JobConfig/common/geom_baseline.txt"

