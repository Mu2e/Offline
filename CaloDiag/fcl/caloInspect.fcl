#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "TrkDiag/fcl/prolog.fcl"
#include "CommonMC/fcl/prolog.fcl"
#include "Filters/fcl/prolog.fcl"

process_name: g4CaloExample


source: { 
   module_type: RootInput
   maxEvents : 5000
}

services : {
  @table::Services.SimAndReco
  TFileService : { fileName : "test.root" }
}



physics: {

  producers : 
  {
      FindMCPrimary : { 
        @table::CommonMC.FindMCPrimary
      }
      
      @table::CaloReco.producers
      @table::CaloMC.TruthProducers
      @table::CaloCluster.producers
      @table::CaloClusterMC.producers	
  }
  
  analyzers : 
  {
      CaloExample: {
          module_type                : CaloExample
          generatorCollection        : compressDigiMCs
          vdCollection               : "compressDigiMCs:virtualdetector"
          caloHitCollection          : CaloHitMaker
          caloClusterCollection      : CaloClusterMaker
          caloHitTruth               : CaloHitTruthMatch
          caloClusterTruth           : CaloClusterTruthMatch
	  timeOffsets                : { inputs : [ "compressDigiMCs:protonTimeMap", "compressDigiMCs:muonTimeMap" ] }
          addGenerator               : true
      }

      CaloMCInspector: {
          module_type               : CaloMCInspector
          caloCrystalModuleLabel    : CaloHitMaker
          caloShowerSimModuleLabel  : compressDigiMCs # CaloShowerStepROFromShowerStep
          caloDigiTruthModuleLabel  : CaloHitTruthMatch
      }
  }
  
  p1: [ FindMCPrimary,
        @sequence::CaloReco.Reco,
	@sequence::CaloCluster.Reco,
        @sequence::CaloMC.TruthMatch	 	  
      ]

  e1: [CaloExample,CaloMCInspector]
   

  trigger_paths: [p1]
  end_paths:     [e1]
}




services.SeedService.baseSeed         :  99
services.SeedService.maxUniqueEngines :  20

physics.producers.CaloHitTruthMatch.caloShowerSimCollection  : "compressDigiMCs"
