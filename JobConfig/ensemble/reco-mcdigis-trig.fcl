#
# Reconstruct from MC digis, including trigger simulation
# David Brown (LBNL) 1 Feb 2019
#
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "JobConfig/reco/prolog.fcl"
##include "JobConfig/ensemble/prolog_reco.fcl"
#include "Trigger/fcl/templates.fcl"
#
process_name : recomcdigistrig

source : { module_type : RootInput }

services : @local::Services.Reco

physics :
{
  producers : {
    @table::Reconstruction.producers
    @table::Trigger.producers
  }
  filters :  {
    @table::CalPatRec.filters
    RecoFilter : {
      module_type   : RecoMomFilter
      KalFinalTagRoot : ""
      TrkTags : [ "KFFDeM", "KFFDeP",
                  "KFFUeM", "KFFUeP",
                  "KFFDmuM", "KFFDmuP",
                  "KFFUmuM", "KFFUmuP"
                ]
                # // set low cutoffs
      MomentumCutoff : [ 95.0, 85.0,
                         95.0, 85.0,
                         95.0, 85.0,
                         95.0, 85.0 ]
    }
    @table::Trigger.filters
  }
  analyzers: {
    @table::Reconstruction.analyzers
    @table::Trigger.analyzers
  }
  RecoPath : [ @sequence::Reconstruction.RecoMCPath ]
  EndPath : [ Output, RecoCheck  ]
}

outputs : { 
  Output :@local::Reconstruction.Output
}

# My epilog
##include "JobConfig/ensemble/epilog_reco.fcl"
#include "JobConfig/reco/epilog.fcl"
# trigger epilog
##include "gen/fcl/Trigger/offline/allTrig/allPaths.fcl"
#include "TriggerEpilogs/allPaths.fcl"
outputs.Output.SelectEvents : [ "RecoPath" ]
#
# the following need to be overwritten for the specific channel
services.TFileService.fileName: "nts.owner.${name}.version.sequencer.root"
outputs.Output.fileName: "mcs.owner.${name}.version.sequencer.art"
physics.end_paths : [ EndPath ] # needed for generate_fcl

physics.producers.compressRecoMCs.mcTrajectoryTag : "compressDigiMCs"


services.scheduler.wantSummary: true
