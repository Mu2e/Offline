#
# Prolog to create pileup particle steps for mixing
#
BEGIN_PROLOG

Pileup: {
  producers : {
  # override compression to be more selective
    compressDetStepMCs: {
      stepPointMCTags : [ ] # turn off VD hits for pileup
      compressionOptions : @local::DetStepCompression.extraCompression # remove some intermediate genealogy steps
      mcTrajectoryTag : "" # no MC Trajectories
    }
  }
  filters : {
# override step filter to select any detectable signal
    DetStepFilter : {
      CrvSteps : [ "CrvSteps" ] # include CRV steps for pileup
      # lower all the thresholds for saving an event
      MinimumPartMom : 0.0 # MeV/c
      MinimumTrkSteps : 1
      MinimumSumCaloStepE : 0.01
      MinimumCrvSteps : 1
    }
  }
# define products needed to run mixing
  KeptProducts : [ "keep mu2e::StrawGasSteps_compressDetStepMCs_*_*",
		       "keep mu2e::CaloShowerSteps_compressDetStepMCs_*_*",
		       "keep mu2e::CrvSteps_compressDetStepMCs_*_*",
		       "keep mu2e::SimParticlemv_compressDetStepMCs_*_*",
		       "keep mu2e::GenParticles_compressDetStepMCs_*_*",
		       "keep mu2e::StatusG4_*_*_*",
		       "keep mu2e::GenEventCount_*_*_*" ]

  Output : {
     module_type : RootOutput
     SelectEvents : [ TriggerPath ]
     fileName    : @nil
     # drop StepPoints from calorimeter
  }
# define paths
  EndPath : [ genCountLogger, Output ]

# define tools used in mustop daughter generation
  dioGenTool : {
    tool_type : DIOGenerator
    spectrum : {
      spectrumShape : Czarnecki
      pdgId : 11 # Czarnecki option in BinnedSpecturm needs pdgId here
      elow : 1. #MeV
      spectrumResolution : 0.1 #MeV
    }
  }
  
  muonCaptureProtonGenTool : {
    tool_type : MuCapProtonGenerator
    spectrumVariable : kineticEnergy
    spectrum : {
      spectrumShape : ejectedProtons
      nbins: 1000
    }
  }
  
  muonCaptureDeuteronGenTool : {
    tool_type : MuCapDeuteronGenerator
    spectrumVariable : kineticEnergy
    spectrum : {
      spectrumShape : ejectedProtons
      nbins: 1000
    }
  }
  
  muonCaptureNeutronGenTool : {
    tool_type : MuCapNeutronGenerator
    spectrumVariable: kineticEnergy
    spectrum: {
      spectrumShape: tabulated
      spectrumFileName: "ConditionsService/data/neutronSpectrum.txt"
    }
  }
  
  muonCapturePhotonGenTool : {
    tool_type : MuCapPhotonGenerator
    spectrum : {
      spectrumShape: flat
      elow: 0.0 # MeV
      ehi: 7.0  # MeV
    }
  }
  
  # An example that isn't used in this fcl
  #muonCapture1809keVGammaGenTool : {
  #  tool_type : MuCap1809keVGammaGenerator
  #}

}
# define output
Pileup.Output.outputCommands : [ "drop *_*_*_*",
		       @sequence::Pileup.KeptProducts]
END_PROLOG
