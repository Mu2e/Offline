#
# Prolog for digitizing detector steps.  These scripts can be run as-is, or in conjunction with mixing
#
#include "CommonMC/fcl/prolog.fcl"
#include "TrackerMC/fcl/prolog.fcl"
#include "CaloMC/fcl/prolog.fcl"
#include "CRVResponse/fcl/prolog.fcl"
#include "Filters/fcl/prolog.fcl"
#
BEGIN_PROLOG

Digitize: {
  producers : {
    @table::CommonMC.producers
    @table::TrackerDigiMC.producers
    @table::CaloDigiMC.producers
    @table::CrvDAQPackage.producers
  }
  filters : {
# digi filtering for Digi Primary selection.
    DigiFilter : {
      module_type : StrawDigiMCFilter
      StrawDigiMCCollection : "makeStrawDigis"
    }
  }
  Sequence : [  @sequence::CommonMC.DigiSim,
    makeStrawDigis,
    @sequence::CaloDigiMC.DigiSim,
    @sequence::CaloDigiMC.TruthMatch,
    @sequence::CrvDAQPackage.CrvResponseSequence ]
#    compressDigiMCs ]

  analyzers: {
#    digiCompressionCheck : @local::DigiCompression.Check
  }

  Output : {
     module_type : RootOutput
#     SelectEvents : [ DigiPath ]
     fileName    : @nil
     # drop StepPoints from calorimeter
#     outputCommands : @local::DigiCompression.OutputCommands
  }
  EndPath : [ digiCompressionCheck, Output ]

}
# define paths
Digitize.TriggerPath : [ @sequence::Digitize.Sequence ]

END_PROLOG
