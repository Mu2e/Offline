// Lisa Goodenough, March 2018
// modified version of beam_g4s1.fcl for running in MT mode

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "Mu2eG4/fcl/prolog.fcl"

BEGIN_PROLOG
#----------------------------------------------------------------
# for the GenParticle and Event Stashes
stashSize:50

#----------------------------------------------------------------
# Mu2eG4 cuts

dsRegionCuts: {
   type: intersection
   pars: [
      // Plane on the west side, outside of the wall
      { type: plane normal: [  0, 0, 1 ] point : [ 0, 0, -4851 ] },

      // Yuri's e-mail 2015-04-10: x=1612. from CRV considerations.
      // This is also large enought to enclose TS3 (its half length is 975 mm).
      { type: plane normal: [ -1, 0, 0 ] point : [ 1612., 0, 0 ] },

      // Make sure the muon beam reaches our TS3Vacuum stopping volume
      { type: notInVolume pars: [TS2Vacuum] },

      // This union splits the output of the above cuts
      // into two exclusive streams
      { type: union pars:  [
	    {
	       type: intersection
	       pars: [
		  { type: inVolume pars: [TS3Vacuum] },
		  { type: isCharged }
	       ]
	       write: mubeam
	    },
            {  type: constant
               value: true
               write: dsregion
            }
         ]
      }
   ]
}

extMonRegionCuts: {
   type: intersection
   pars: [
      {
         type: plane
         normal: @local::mu2eg4BeamDumpNormal
         // Dump core center: (661.90,  527.40, -19428.2)
	 // A plane 950 mm beyond the core center as measured along
	 // the "beam" direction normal to the dump face.
	 // DeltaZ = L/cos(13.72 degrees)
         point: [ 661.90, 527.40, -20406.10 ]
      },

      // Split the output of the "plane" cut above into two exclusive streams
      { type: union pars:  [

            {  type: intersection
	       pars: [
		  {
		     type: inVolume
		     pars:
		     [  collimator1Channel,
			HallAir,
			ExtMonFNALfilterMagnetAperture,
			ExtMonFNALfilterMagnetApertureMarginUp,
			ExtMonFNALfilterMagnetApertureMarginDn
		     ]
		  },
		  { type: isCharged }
	       ]
               write: extmonbeam
            },

            { type: constant  value: true       write: extmonregion }
         ]
      }
   ]
}
#----------------------------------------------------------------
END_PROLOG

#================================================================
# Give this job a name.
process_name :  beamg4s1

source : {
   module_type : EmptyEvent
   maxEvents : @nil
}

services : {

   message               : @local::default_message
   TFileService          : { fileName : "nts.owner.beam-g4s1.version.sequencer.root" }
   RandomNumberGenerator : { }

   GeometryService        : { inputFile      : "JobConfig/common/geom_baseline.txt" }
   ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
   GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
   G4Helper               : { }
   SeedService            : @local::automaticSeeds
}

physics : {
   analyzers: {
      genCountLogger: {
         module_type: GenEventCountReader
      }

      collectionSizes: {
	 module_type: CollectionSizeAnalyzer
         useModuleLabel: true useInstanceName: true useProcessName: false
      }
   }

   producers: {

      generate: {
         module_type          : PrimaryProtonGunN
         inputfile            : "Mu2eG4/test/genconfig_PrimaryProtonsN.txt"
         stashSize            : @local::stashSize
      }

      genCounter: {
         module_type: GenEventCounter
      }

      g4run : {
         module_type: Mu2eG4
         runinMTMode : true
         numberOfThreads : 5

         physics: @local::mu2eg4DefaultPhysics
         ResourceLimits: @local::mu2eg4DefaultResourceLimits
	 TrajectoryControl: @local::mu2eg4NoTrajectories
         debug: @local::mu2eg4DefaultDebug
         visualization: @local::mu2eg4NoVisualization

         generatorModuleLabel: generate
         MultiStageParameters: {} // this is the first stage

         SDConfig: {
            enableSD: [ virtualdetector ] // activate just the explicitly listed SDs
            TimeVD: { times: [] }
         }

         Mu2eG4StackingOnlyCut: @local::mu2eg4CutNeutrinos

         Mu2eG4SteppingOnlyCut: {}

         // Mu2eG4 cuts are evaluated in the listed order.
         // The first match wins.  For the "intersection"
         // type, the first false stops the evaluation.
         // For the "union" type the first true stops the evaluation.
         Mu2eG4CommonCut: {
            type: union
            pars: [
               @local::mu2eg4CutDeltaElectrons, // 8% speed up from killing electrons with Ek<1 MeV
               @local::dsRegionCuts,
               @local::extMonRegionCuts
            ]
         }
      }

      compressPVmuonBeam : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "muonBeamFilter" ]
      }

      compressPVdsRegion : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "dsRegionFilter" ]
      }

      compressPVextmonBeam : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "extmonBeamFilter" ]
      }

      compressPVextmonRegion : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "extmonRegionFilter" ]
      }

      compressPVFull : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "g4run" ]
      }
   }

   filters: {
      muonBeamFilter: {
         module_type: FilterG4Out
         mainHitInputs : [ "g4run:mubeam" ]
         extraHitInputs : [ "g4run:virtualdetector" ]
         vetoDaughters: []
      }

      dsRegionFilter: {
         module_type: FilterG4Out
         mainHitInputs : [ "g4run:dsregion" ]
         extraHitInputs : [ "g4run:virtualdetector" ]
         vetoDaughters: []
      }

      extmonBeamFilter: {
         module_type: FilterG4Out
         mainHitInputs : [ "g4run:extmonbeam" ]
         extraHitInputs : [ "g4run:virtualdetector" ]
         vetoDaughters: []
      }

      extmonRegionFilter: {
         module_type: FilterG4Out
         mainHitInputs : [ "g4run:extmonregion" ]
         extraHitInputs : [ "g4run:virtualdetector" ]
         vetoDaughters: []
      }

      g4status: {
         module_type: FilterStatusG4
         input: "g4run"
      }

      g4consistent: {
         module_type: FilterStatusG4
         input: "g4run"
	 maxAcceptedStatus: 9  #  status 10 and above means StepPointMCCollection may have non-dereferencable pointers
      }
   }

   trigmubeam : [generate, genCounter, g4run, g4consistent, muonBeamFilter, compressPVmuonBeam]
   trigdsregion : [generate, genCounter, g4run, g4consistent, dsRegionFilter, compressPVdsRegion]
   trigextmonbeam : [generate, genCounter, g4run, g4consistent, extmonBeamFilter, compressPVextmonBeam]
   trigextmonregion : [generate, genCounter, g4run, g4consistent, extmonRegionFilter, compressPVextmonRegion]
   g4StatusFilter : [generate, genCounter, g4run, "!g4status", compressPVFull ]
   trigger_paths  : [trigmubeam, trigdsregion, trigextmonbeam, trigextmonregion, g4StatusFilter]

   outputs: [truncatedEvtsOutput, mubeamout, dsout, extmonbeamout,extmonregionout]
   an: [ genCountLogger, collectionSizes ]
   end_paths: [outputs, an]
}

outputs: {

   mubeamout : {
      module_type : RootOutput
      SelectEvents: ["trigmubeam"]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_muonBeamFilter_*_*",
         "keep *_compressPVmuonBeam_*_*"
      ]
      fileName    : "sim.owner.beam-g4s1-mubeam.version.sequencer.art"
   }

   dsout : {
      module_type : RootOutput
      SelectEvents: ["trigdsregion"]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_dsRegionFilter_*_*",
         "keep *_compressPVdsRegion_*_*"
      ]
      fileName    : "sim.owner.beam-g4s1-dsregion.version.sequencer.art"
   }

   extmonbeamout : {
      module_type : RootOutput
      SelectEvents: ["trigextmonbeam"]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_extmonBeamFilter_*_*",
         "keep *_compressPVextmonBeam_*_*"
      ]
      fileName    : "sim.owner.beam-g4s1-extmonbeam.version.sequencer.art"
   }

   extmonregionout : {
      module_type : RootOutput
      SelectEvents: ["trigextmonregion"]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_extmonRegionFilter_*_*",
         "keep *_compressPVextmonRegion_*_*"
      ]
      fileName    : "sim.owner.beam-g4s1-extmonregion.version.sequencer.art"
   }

   truncatedEvtsOutput : {
      module_type : RootOutput
      SelectEvents: ["g4StatusFilter"]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_g4run_*_*",
         "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*",
         "keep *_compressPVFull_*_*"
      ]
      fileName    : "sim.owner.beam-g4s1-truncated.version.sequencer.art"
   }

}
// Larger range cut for the first stage
physics.producers.g4run.physics.minRangeCut : 1. // mm

// Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 300

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  0
services.SeedService.maxUniqueEngines :  20
