// Re-sample particles entering the DS, propagate them, and write out tracker hits
// and compressed  calorimeter showers.
//
// Yuri Oksuzian, 2019

#include "JobConfig/beam/prolog.fcl"

process_name: dsresampler

source: { module_type : EmptyEvent }
services: { @table::mu2e.services.simServices }
physics: { @table::mu2e.physics.g4s4Flash }
outputs: { @table::mu2e.outputs.g4s4Defs }

//----------------------------------------------------------------
physics.trigger_paths: [ detPath, tgtFilter ]
physics.out: [ detectorOutput, tgtStopOutput ]

// We should run genCounter for all EmptyEvent jobs.
physics.producers.genCounter: {module_type: GenEventCounter }

// Bring in info from the previous stage
physics.filters.flashResample: {
   module_type: ResamplingMixer
   fileNames: @nil
   readMode: "sequential"
   wrapFiles: true
   mu2e: {
      products: {
	 genParticleMixer: { mixingMap: [ [ "generate", "" ] ] }
	 simParticleMixer: { mixingMap: [ [ "muonBeamFilter", "" ] ] }
	 stepPointMCMixer: { mixingMap: [ 
	       [ "muonBeamFilter:virtualdetector", ":" ],
	       [ "muonBeamFilter:mubeam", ":" ] 
	       ] }
      }
   }
}

// Point Mu2eG4 to the pre-simulated data
physics.producers.g4run.MultiStageParameters: {
   simParticleNumberOffset: 100000
   genInputHits:  [ "flashResample:mubeam" ]
   inputSimParticles: "flashResample"
   inputMCTrajectories: ""
   inputPhysVolumeMultiInfo: "" # earlier info dropped
}
physics.producers.g4run.SDConfig.preSimulatedHits:  ["flashResample:virtualdetector"]

//----------------------------------------------------------------
// stopped muon daughter vetoing

physics.producers.stoppedMuonFinder: {
   module_type: "StoppedParticlesFinder"
   particleInput: "g4run"
   particleOffsetThreshold: 100000
   particleTypes: [ 13 ]
   physVolInfoInput: "g4run"
   stoppingMaterial: "StoppingTarget_Al"
   verbosityLevel: 1
}

physics.producers.stoppedMuonDaughters: {
   module_type: SimParticleDaughterSelector
   particleInput: "stoppedMuonFinder"
   // EMCascade should not be vetoed because we do not re-simulate it
   processes: [ "DIO", "NuclearCapture" ]
}

physics.filters.flashPrefilter: {
   module_type: FilterG4Out
   mainHitInputs:  [ "g4run:tracker", "g4run:calorimeter", "g4run:calorimeterRO", "g4run:CRV", "g4run:protonabsorber", "g4run:virtualdetector" ]
   vetoParticles:  [ "stoppedMuonDaughters" ]
}

physics.filters.tgtStopFilter: {
   module_type: FilterG4Out
   mainHitInputs: []
   extraHitInputs: [ "g4run:virtualdetector" ]
   mainSPPtrInputs: [ "stoppedMuonFinder" ]
}

//----------------------------------------------------------------
// Fix shower compressor config
physics.producers.CaloShowerStepFromStepPt.physVolInfoInput: g4run
physics.producers.CaloShowerStepFromStepPt.usePhysVolInfo: true
physics.producers.CaloShowerStepFromStepPt.calorimeterStepPoints: "flashPrefilter:calorimeter"
physics.producers.CaloShowerStepFromStepPt.calorimeterROStepPoints: "flashPrefilter:calorimeterRO"
// The module needs to stop using getMany() and accept InputTags for configuration.
// Until it is fixed, we have to use a hacked version.
physics.producers.CaloShowerStepFromStepPt.module_type: CaloShowerStepFromStepPtHACKED


//----------------------------------------------------------------
// The final filter
physics.filters.detectorFilter: {
   module_type: "FilterG4Out"
   mainHitInputs: [
      "flashPrefilter:tracker",
      "flashPrefilter:CRV"
   ]
   mainSPPtrInputs: [
      "CaloShowerStepFromStepPt"
   ]
   extraHitInputs: [
      "flashPrefilter:virtualdetector",
      "flashPrefilter:protonabsorber"
   ]
}

// Add genCounter and flashResample to the trigger path.
physics.detPath: [ "genCounter", "flashResample", 
   //need to remove compressPVDetector//  @sequence::physics.detPath
   "g4run",
   "g4consistent",
   // Need to veto stopped muon daughters
   "stoppedMuonFinder",
   "stoppedMuonDaughters",
   "flashPrefilter", # removes stopped muon daughters, filters out stuff not hitting tracker or calo
   "CaloShowerStepFromStepPt",
   "detectorFilter", # filters out particles in calo showers
   "CaloShowerCrystalSteps",
   "CaloShowerROSteps"
]

physics.tgtFilter :  ["genCounter", "flashResample", g4run, g4consistent, stoppedMuonFinder, tgtStopFilter]


outputs.tgtStopOutput : {
   module_type : RootOutput
   SelectEvents: [tgtFilter]
   outputCommands:   [ "drop *_*_*_*",
      "keep mu2e::GenParticles_*_*_*",
      "keep mu2e::GenEventCount_*_*_*",
      "keep mu2e::StatusG4_*_*_*",
      "keep *_tgtStopFilter_*_*"
   ]
   fileName    : "sim.owner.DS-TGTstops.version.sequencer.art"
}

// Set output file names
services.TFileService.fileName: "nts.owner.DS-resampler.version.sequencer.root"
outputs.detectorOutput.fileName: "sim.owner.DS-resampler-TrkCalCRV.version.sequencer.art"
services.GeometryService.simulatedDetector.tool_type : "Mu2e"
services.GeometryService.inputFile : "Mu2eG4/geom/geom_common_phase1.txt"

physics.producers.g4run.Mu2eG4CommonCut:{
   // Kill stuck e+/e-	
   type: intersection
   pars: 
   [
   {type: intersection pars: [ { type: kineticEnergy cut: 1.0 }, { type: pdgId pars: [ 11, -11] }]},
   {type: inVolume pars: [ TS2Vacuum, TS3Vacuum, TS4Vacuum, TS5Vacuum, DS2Vacuum, HallAir ]}
   ]
}

// Test:
// physics.filters.flashResample.fileNames: [ "/pnfs/mu2e/tape/phy-sim/sim/mu2e/beam-g4s1-mubeam/g4-10-5/art/46/9c/sim.mu2e.beam-g4s1-mubeam.g4-10-5.002701_00002991.art" ]
