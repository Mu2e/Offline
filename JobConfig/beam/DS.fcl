// Andrei Gaponenko, 2015
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

# Give this job a name.
process_name : DS

source : { module_type : RootInput }

services : @local::Services.Sim

physics : {

   //================================================================
   producers: {
      g4run: @local::g4run

      compressPVMothers: {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "mothersFilter" ]
      }

      compressPVCRV: {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "crvFilter" ]
      }

      compressPVTGTStops: {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "tgtStopFilter" ]
      }

      compressPVOOTStops: {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "ootStopFilter" ]
      }

      compressPVFull : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "g4run" ]
      }

      //----------------------------------------------------------------
      stoppedMuonFinder : {
         module_type : StoppedParticlesFinder
         particleInput : "g4run"
         // multiple matches, we'll get the one from the current process, which is what we want
         physVolInfoInput : "g4run"
         stoppingMaterial : "StoppingTarget_Al"
         particleTypes : [ 13 ] // mu-
         verbosityLevel: 1
      }

      stoppedMuonDaughters: {
         module_type: SimParticleDaughterSelector
         particleInput: "stoppedMuonFinder"
         // EMCascade should not be vetoed because we do not re-simulate it
         processes: [ "DIO", "NuclearCapture" ]
      }

      outOfTargetMuonFinder : {
         module_type : StoppedParticlesFinder
         particleInput : "g4run"
         physVolInfoInput : "g4run"
         vetoedMaterials : [ "StoppingTarget_Al" ]
         particleTypes : [ 13 ] // mu-
         verbosityLevel: 1
      }

      outOfTargetMuonDaughters: {
         module_type: SimParticleDaughterSelector
         particleInput: "outOfTargetMuonFinder"
         // We do re-simulate EMCascade for out of target stops
         processes: [ "DIO", "NuclearCapture", "EMCascade" ]
      }

   } // producers

   //================================================================
   filters: {
      mothersFilter: {
         module_type: FilterG4Out
         mainHitInputs: [ "g4run:DetectorMother" ]
         extraHitInputs: [ "g4run:virtualdetector" ]
         vetoParticles: [ "stoppedMuonDaughters", "outOfTargetMuonDaughters" ]
      }

      crvFilter: {
         module_type: FilterG4Out
         mainHitInputs: [ "g4run:CRV" ]
         extraHitInputs: [ "g4run:virtualdetector" ]
         vetoParticles: [ "stoppedMuonDaughters", "outOfTargetMuonDaughters" ]
      }

      tgtStopFilter: {
         module_type: FilterG4Out
         mainHitInputs: []
         extraHitInputs: [ "g4run:virtualdetector" ]
         mainSPPtrInputs: [ "stoppedMuonFinder" ]
      }

      ootStopFilter: {
         module_type: FilterG4Out
         mainHitInputs: []
         extraHitInputs: [ "g4run:virtualdetector" ]
         mainSPPtrInputs: [ "outOfTargetMuonFinder" ]
      }

      g4status: {
         module_type: FilterStatusG4
         input: "g4run"
      }

      g4consistent: {
         module_type: FilterStatusG4
         input: "g4run"
         maxAcceptedStatus: 9  #  status 10 and above means StepPointMCCollection may have non-dereferencable pointers
      }
   }

   //================================================================
   analyzers: {
      genCountLogger: {
         module_type: GenEventCountReader
      }
   }


   //================================================================
   motherFilter: [ g4run, g4consistent,
      stoppedMuonFinder, stoppedMuonDaughters,
      outOfTargetMuonFinder, outOfTargetMuonDaughters,
      mothersFilter, compressPVMothers
   ]

   trigCRV: [ g4run, g4consistent,
      stoppedMuonFinder, stoppedMuonDaughters,
      outOfTargetMuonFinder, outOfTargetMuonDaughters,
      crvFilter, compressPVCRV
   ]

   tgtFilter :  [g4run, g4consistent, stoppedMuonFinder, tgtStopFilter, compressPVTGTStops]
   ootFilter :  [g4run, g4consistent, outOfTargetMuonFinder, ootStopFilter, compressPVOOTStops]
   g4StatusFilter :  [g4run, "!g4status", compressPVFull ]
   trigger_paths  : [motherFilter, trigCRV, tgtFilter, ootFilter, g4StatusFilter]

   out : [mothersOutput, crvOutput, tgtStopOutput, ootStopOutput, truncatedEvtsOutput]
   gcl : [genCountLogger]
   end_paths      : [out, gcl]
}

outputs: {
   mothersOutput : {
      module_type : RootOutput
      SelectEvents: [motherFilter]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_mothersFilter_*_*",
         "keep *_compressPVMothers_*_*"
      ]
      fileName    : "sim.owner.DS-beam.version.sequencer.art"
   }

   crvOutput : {
      module_type : RootOutput
      SelectEvents: [trigCRV]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_crvFilter_*_*",
         "keep *_compressPVCRV_*_*"
      ]
      fileName    : "sim.owner.DS-crv.version.sequencer.art"
   }

   tgtStopOutput : {
      module_type : RootOutput
      SelectEvents: [tgtFilter]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_tgtStopFilter_*_*",
         "keep *_compressPVTGTStops_*_*"
      ]
      fileName    : "sim.owner.DS-TGTstops.version.sequencer.art"
   }

   ootStopOutput : {
      module_type : RootOutput
      SelectEvents: [ootFilter]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_ootStopFilter_*_*",
         "keep *_compressPVOOTStops_*_*"
      ]
      fileName    : "sim.owner.DS-OOTstops.version.sequencer.art"
   }

   truncatedEvtsOutput : {
      module_type : RootOutput
      SelectEvents: [g4StatusFilter]
      outputCommands:   [ "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_g4run_*_*",
         "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_*_*_*",
         "keep *_compressPVFull_*_*"
      ]
      fileName    : "sim.owner.DS-truncated.version.sequencer.art"
   }
}
//================================================================
physics.producers.g4run.inputs: {
   primaryType: "StepPoints"
   primaryTag: "muonBeamFilter:DSVacuum"
   inputMCTrajectories: ""
   inputPhysVolumeMultiInfo: "compressPVmuonBeam"
}

// Mu2eG4 cuts are evaluated in the listed order.
// The first match wins.  For the "intersection"
// type, the first false stops the evaluation.
// For the "union" type the first true stops the evaluation.
physics.producers.g4run.Mu2eG4CommonCut: {
   type: inVolume
   pars: [TrackerMother, CalorimeterMother]
   write: DetectorMother
}

physics.producers.g4run.SDConfig: {
   enableSD : [ virtualdetector, CRV ] // activate just the explicitly listed SDs
   preSimulatedHits: ["muonBeamFilter:virtualdetector"]
   TimeVD: { times: [] }
}

// Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 300

physics.producers.g4run.physics.minRangeCut : 0.010 // mm

services.TFileService.fileName : "nts.owner.DS.version.sequencer.root"

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  8
services.SeedService.maxUniqueEngines :  20
