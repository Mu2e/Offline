#
# Prolog specific to creating primary (signal, signal-like or calibration) particles
#
#include "JobConfig/beam/prolog.fcl"
#include "EventGenerator/fcl/prolog.fcl"
#include "TrackerMC/fcl/prolog.fcl"
#include "CaloMC/fcl/prolog.fcl"
#include "CRVResponse/fcl/prolog.fcl"
#include "Filters/fcl/prolog.fcl"
#
BEGIN_PROLOG

Primary: {
  producers : {
    g4run : @local::mu2e.physics.producers.g4run.muons
    genCounter: { module_type: GenEventCounter }
    @table::EventGenerator.producers
    @table::TrackerMC.producers
    @table::CaloDigiMC.producers
    @table::CrvDAQPackage.producers
    makeCSS : @local::CaloShowerStepMaker
    compressDigiMCs : @local::DigiCompression.Primary
  }
  filters : {
# generator truncation filter; only needed for cosmic rays in principle
    g4status: {
      module_type: FilterStatusG4
      input: "g4run"
    }
# step filter for Sim Primary selection
    DetStepFilter : {
      module_type : DetectorStepFilter
      StrawGasSteps : [ "makeSGS" ] 
      CaloShowerSteps : [ "makeCSS" ]
      CrvSteps : [ "g4run:CRV" ]
      MinimumTrkStepEnergy : 1.0e-6 # 1 ev
      MinimumCaloStepEnergy : 1.0 # 1 MeV
      MinimumCrvStepEnergy : 1.0e-6 # FIXME!
      MinimumPartMom : 80.0 # MeV/c
      MaximumPartMom : 200.0 # MeV/c
      KeepPDG : [-11, 11, -13, 13 ] # electrons and muons: should be central FIXME
      TestTrk : true
      TestCalo : true
      TestCrv : false
      MinimumTrkSteps : 10
      MinimumSumCaloStepE : 50.0
    }
  }
  Sequence : [ generate, genCounter, g4run, g4status,  
    @sequence::TrackerMC.StepSim, makeCSS, 
    DetStepFilter ]

  analyzers: {
    genCountLogger: { module_type: GenEventCountReader makeHistograms: false }
  }

  Output : {
     module_type : RootOutput
     SelectEvents : [ TriggerPath ]
     fileName    : @nil
     # drop StepPoints from calorimeter
  }
  EndPath : [ genCountLogger, Output ]

}
# define path
Primary.TriggerPath : [ @sequence::Primary.Sequence ]

END_PROLOG
