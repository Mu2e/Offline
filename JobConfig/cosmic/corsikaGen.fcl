#include "JobConfig/primary/prolog.fcl"

process_name: CorsikaGen

targetParams: {
    projectToTargetBox : true
    targetBoxXmin: -10000
    targetBoxXmax: 3000
    targetBoxYmin: -5000
    targetBoxYmax: 5000
    targetBoxZmin: -5000
    targetBoxZmax: 21000
}

source: {
    module_type: FromCorsikaBinary
    fileNames: ["/mu2e/app/users/srsoleti/corsika-77100/run/DAT110001"]
    runNumber          : 1
    firstSubRunNumber  : 0
    firstEventNumber   : 1
    showerAreaExtension  : 10000
    maxEvents: -1
    @table::targetParams
    seed: 1
    resample: false
    compact: true
    fluxConstant: 1.8e4
    lowE: 1.3
    highE: 1e6
}

services: @local::Services.Sim
physics : {
  producers : {

    generate : {
      module_type : CORSIKAEventGenerator
      corsikaModuleLabel: "FromCorsikaBinary"
      refPointChoice: "UNDEFINED"
      projectToTargetBox : true
      targetBoxYmax : 5000
      intDist: -1
    }

    @table::Primary.producers
  }

  filters: { @table::Primary.filters }
  analyzers: { @table::Primary.analyzers }
  TriggerPath : @local::Primary.TriggerPath
  EndPath : [ digiCompressionCheck, Output ]
}

outputs : {
  Output :@local::Primary.Output
}
#
# final configuration
#
#include "JobConfig/primary/epilog.fcl"
# customize the output
physics.producers.generate.muonStops : @erase

services.TFileService.fileName: "nts.owner.CorsikaGen.version.sequencer.root"
outputs.Output.fileName: "dig.owner.CorsikaGen.version.sequencer.art"
physics.end_paths : [ EndPath ] # needed for generate_fcl