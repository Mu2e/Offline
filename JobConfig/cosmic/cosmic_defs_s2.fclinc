// This file contains the common part of job configuration for stage 2
// cosmic ray simulations.  It is included by top level files
// (like cosmic_s2_target1.fcl), which define output file names.
// 
// Ralf Ehrlich and Andrei Gaponenko, 2015

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"
#include "Mu2eG4/fcl/prolog.fcl"

BEGIN_PROLOG
#----------------------------------------------------------------
# Mu2eG4 cuts

crvOuterBox: 
{
   type: union
   pars: 
   [
      // Upstream plane
      { type: plane normal: [  0, 0, -1 ] point : [ 0, 0, -2440 ] },

      // Downstream plane
      { type: plane normal: [  0, 0, 1 ] point : [ 0, 0, 18910 ] },

      // +x plane
      { type: plane normal: [  1, 0, 0 ] point : [ 0, 0, 0 ] },

      // -x plane (outside of cryo box)
      { type: plane normal: [  -1, 0, 0 ] point : [ -7390, 0, 0 ] },

      // +y plane
      { type: plane normal: [  0, 1, 0 ] point : [ 0, 2760, 0 ] },

      // -y plane
      { type: plane normal: [  0, -1, 0 ] point : [ 0, -2100, 0 ] }
   ]
}

cosmicKineticEnergyCuts: 
{
   type: union
   pars:
   [
      {
        type: intersection
        pars: 
        [ 
          @local::crvOuterBox,
          { type: kineticEnergy cut: 80.0 }, 
          { type: pdgId pars: [ 22, 11, -11 ] }
        ]
      },
      {
        type: intersection
        pars: 
        [ 
          @local::crvOuterBox,
          { type: kineticEnergy cut: 3.4 }, 
          { type: pdgId pars: [ 2212, 2112 ] }
        ]
      }
   ]
}
#----------------------------------------------------------------
END_PROLOG

#================================================================
# Give this job a name.
process_name :  cosmics2

source : 
{
   module_type : RootInput
}

services : 
{
   message               : @local::default_message
   TFileService          : { }
   RandomNumberGenerator : { }

   GeometryService        : { inputFile      : "JobConfig/cosmic/geom_cosmic.txt" }
   ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
   GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
   G4Helper               : { }
   SeedService            : @local::automaticSeeds
}

physics : 
{
   analyzers: 
   {
      genCountLogger: 
      {
         module_type: GenEventCountReader
      }
   }

   producers: 
   {
      g4run : 
      {
         module_type: Mu2eG4
         physics: @local::mu2eg4DefaultPhysics
         ResourceLimits: @local::mu2eg4DefaultResourceLimits
	 TrajectoryControl: @local::mu2eg4DefaultTrajectories 
         debug:  @local::mu2eg4DefaultDebug
         visualization: @local::mu2eg4NoVisualization

	 MultiStageParameters : 
         {
            simParticleNumberOffset: 1000000  // safe b/c of g4.particlesSizeLimit in stage1
            genInputHits: [ "cosmicFilter:crvStage1" ]
            inputSimParticles: "cosmicFilter"
	    inputMCTrajectories: "cosmicFilter"
            inputPhysVolumeMultiInfo: "compressPV"
	 }

         SDConfig : 
         {
            enableSD: [ tracker, calorimeter, calorimeterRO, CRV, virtualdetector ]  // activate just the explicitly listed SDs
            preSimulatedHits: ["cosmicFilter:CRV"]
	    TimeVD: { times: [] }
         }

         Mu2eG4StackingOnlyCut: @local::mu2eg4CutNeutrinos

         Mu2eG4SteppingOnlyCut: {}

         Mu2eG4CommonCut: 
         {
            type: union
            pars: 
            [
               @local::cosmicKineticEnergyCuts,
               {
	          type: inVolume
                  pars: [ worldDirtBottom, worldDirtNW, worldDirtSW, worldDirtSE, worldDirtNE ]
               }
            ]
         }
      }

      compressPV : 
      {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "detectorFilter" ]
      }

      compressPVFull : {
         module_type: CompressPhysicalVolumes
         volumesInput : "g4run"
         hitInputs : []
         particleInputs : [ "g4run" ]
      }
   }

   filters: 
   {
      trackerStepPointFilter : 
      {
         module_type : TrackerStepPointFilter 
      }

      detectorFilter:
      {
         module_type: FilterG4Out
         mainHitInputs: [ "g4run:tracker", "g4run:calorimeter", "g4run:calorimeterRO", "g4run:CRV" ]
         extraHitInputs : [ "g4run:virtualdetector" ]
         mcTrajectoryInputs : [ "g4run" ]
         vetoDaughters: []
      }

      g4status: 
      {
         module_type: FilterStatusG4
         input: "g4run"
      }

      g4consistent: {
         module_type: FilterStatusG4
         input: "g4run"
	 maxAcceptedStatus: 9  #  status 10 and above means StepPointMCCollection may have non-dereferencable pointers
      }
   }

   trigFilter     : [g4run, g4consistent, trackerStepPointFilter, detectorFilter, compressPV]
   g4StatusFilter : [g4run, "!g4status", compressPVFull ]
   trigger_paths  : [trigFilter, g4StatusFilter]

   outputs: [truncatedEvtsOutput, filteredOutput]
   an: [ genCountLogger ]
   end_paths: [outputs, an]
}

outputs: 
{
   filteredOutput : 
   {
      module_type : RootOutput
      SelectEvents: ["trigFilter"]
      outputCommands:   
      [ 
         "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_detectorFilter_*_cosmics2",
         "keep *_compressPV_*_cosmics2"
      ]
   }

   truncatedEvtsOutput : 
   {
      module_type : RootOutput
      SelectEvents: ["g4StatusFilter"]
      outputCommands:   
      [ 
         "drop *_*_*_*",
         "keep mu2e::GenParticles_*_*_*",
         "keep mu2e::GenEventCount_*_*_*",
         "keep mu2e::StatusG4_*_*_*",
         "keep *_g4run_*_*",
         "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*",
         "keep *_compressPVFull_*_*"
      ]
   }

}

physics.producers.g4run.physics.minRangeCut : 0.01 // mm
physics.producers.g4run.ResourceLimits.maxSimParticleCollectionSize: 1000000

// Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 300

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  0
services.SeedService.maxUniqueEngines :  20
