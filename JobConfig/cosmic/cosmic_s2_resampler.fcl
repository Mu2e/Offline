// Re-sample cosmics from stage-1
// Yuri Oksuzian, 2020

#include "JobConfig/primary/primary.fcl"
#include "JobConfig/cosmic/epilog.fcl"

// Bring in info from the previous stage
physics.filters.dsResample: {
   module_type: ResamplingMixer
   fileNames: @nil  
   readMode: "sequential"
   wrapFiles: true
   mu2e: {
      products: {
	 genParticleMixer: { mixingMap: [ [ "generate", "" ] ] }
	 simParticleMixer: { mixingMap: [ [ "cosmicFilter", ""] ] } 
	 mcTrajectoryMixer:{ mixingMap: [ [ "cosmicFilter", ""] ] }
	 stepPointMCMixer: { mixingMap: [ [ "cosmicFilter:crvStage1", ":" ], [ "cosmicFilter:CRV", ":" ] ] }
      }
   }
}
// Point Mu2eG4 to the pre-simulated data
physics.producers.g4run.MultiStageParameters: {
   simParticleNumberOffset: 300000  # FIX ME!!!
   genInputHits:  [ "dsResample:crvStage1" ]
   inputSimParticles: "dsResample"
   inputMCTrajectories: "dsResample"
   inputPhysVolumeMultiInfo: "" 
}
// Kill cosmics outside of the CRV region
physics.producers.g4run.Mu2eG4CommonCut:{
            type: union
            pars:
            [
               @local::cosmicKineticEnergyCutS2,
               {
	          type: inVolume
                  pars: [ worldDirtBottom ]
               }
            ]
         }
physics.producers.g4run.SDConfig.preSimulatedHits:  ["dsResample:CRV"]
physics.producers.CrvSteps.stepPointsModuleLabels : ["dsResample"]
physics.producers.FindMCPrimary.PrimaryGenIds: ["CosmicCRY", "CosmicCORSIKA"]
physics.producers.FindMCPrimary.GenParticles: "dsResample"
physics.producers.FindMCPrimary.SimParticles: "dsResample"
physics.producers.generate: @local::physics.filters.dsResample
physics.TriggerPath: [dsResample, @sequence::Primary.TriggerSequence]
