#
# mix beam backgrounds on top of cosmic rays. 
#
#  Dave Brown (LBNL) October 2018
#
#include "JobConfig/mixing/prolog.fcl"
process_name: CalocosmicMix

source: { 
  module_type : RootInput
  # drop products that will get remade and aren't needed for filtering.
  inputCommands: ["keep *_*_*_*",
		  @sequence::Mixing.Input.droppedProducts]
}
services: @local::Services.Sim
physics : { 
  producers : {
    generate : @local::dummyGenerator # needed to reuse the same prolog
    @table::Mixing.producers
    separateCaloShowerSteps : { module_type : SeparateCaloShowerSteps
    			        inputTag : "compressDigiMCs"
				crystalOutputInstance : "calorimeter"
				sipmOutputInstance : "calorimeterRO"
			      }
  }
  filters: { @table::Mixing.filters }
  analyzers: { @table::Mixing.analyzers }
# special path that reuses some of the inputs as primary information
  TriggerPath : [
    protonBunchIntensity,
    @sequence::Mixing.TrkCalMixSequence,
    @sequence::Mixing.CRVMixSequence,
    @sequence::CommonMC.TimeMaps,
    @sequence::TrackerMC.DigiSim,
    separateCaloShowerSteps,
    CaloShowerStepROFromShowerStep, CaloDigiFromShower,
    @sequence::CrvDAQPackage.CrvResponseSequence,
    compressDigiMCs ]
 
  EndPath : @local::Mixing.EndPath
}
outputs: { Output : @local::Mixing.Output }
#
# final configuration
#
#include "JobConfig/mixing/epilog.fcl"
#
# change compression to also merge (compressed) primary info from the input file instead of g4run
#
physics.producers.compressDigiMCs.simParticleTags : [ "compressDigiMCs", @sequence::Mixing.TrkCalMixSequence, @sequence::Mixing.CRVMixSequence ]
physics.producers.compressDigiMCs.caloShowerStepTags : [ "separateCaloShowerSteps:calorimeter", "separateCaloShowerSteps:calorimeterRO", @sequence::Mixing.caloMixerTags ]
physics.producers.compressDigiMCs.extraStepPointMCTags : [ "compressDigiMCs:virtualdetector", "compressDigiMCs:protonabsorber" ]
physics.producers.compressDigiMCs.mcTrajectoryTag : "compressDigiMCs"

#
# change maps to use the read-in compressed primary maps as input (these are empty for cosmic rays)
#
physics.producers.protonTimeMap.InputTimeMaps : [ "compressDigiMCs:protonTimeMap", @sequence::Mixing.protonTimeMaps ]
physics.producers.muonTimeMap.InputTimeMaps : [ "compressDigiMCs:muonTimeMap" ]
#
# calo shower config
#
physics.producers.CaloShowerStepROFromShowerStep.caloCrystalShowerInputs     : [ "separateCaloShowerSteps:calorimeter", @sequence::Mixing.caloMixerTags ]
#
# change output to only keep new compression output, not old
#
outputs.Output.outputCommands : [ "drop *_*_*_*",
		       "keep *_compressDigiMCs_*_CalocosmicMix",
		       @sequence::DigiCompression.Mixing.keptProducts ]
#
# customize the output
services.TFileService.fileName: "nts.owner.Calo-cosmic-mix.version.sequencer.root"
outputs.Output.fileName: "dig.owner.Calo-cosmic-mix.version.sequencer.art"
physics.end_paths : [ EndPath ] # needed for generate_fcl
