# Minimal KinKal job that fits digis to a downstream electron as a trigger seed fit , and analyzes the output with TrkAna
# To create a functional job you must add database purpose and version; ie create a fcl stub that #includes this file and
# adds (for instance):
# services.DbService.purpose: MDC2020_perfect
# services.DbService.version: v1_0
#
#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Production/JobConfig/reco/prolog.fcl"
#include "mu2e_trig_config/gen/trig_physMenuPSConfig_OnSpill.fcl"
#include "mu2e_trig_config/gen/trig_physMenu_OnSpill.fcl"
#include "TrkAna/fcl/prolog.fcl"
#include "Offline/CommonMC/fcl/prolog.fcl"

process_name: TTBTrk
source : { module_type : RootInput }
services : @local::Services.Reco
physics :
{
   @table::TrigSequences
   producers : { @table::TrigProducers.producers }

   filters : {
      @table::TrigFilters.filters
      @table::Trig_physMenuPSConfig
   }

   analyzers : {
      TAtpr : @local::TrkAnaReco.analyzers.TrkAnaNeg
      evtprint : {
         module_type : RunSubrunEvent
         printSam    : false
         printRun    : false
         printSubrun : false
         printEvent  : true
      }
      TAcpr : @local::TrkAnaReco.analyzers.TrkAnaNeg
      evtprint : {
         module_type : RunSubrunEvent
         printSam    : false
         printRun    : false
         printSubrun : false
         printEvent  : true
      }
   }
   EndPath : [TAtpr, TAcpr]

   tprDeM_highP_stopTarg           : [ @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTtimeClusterFinder, tprDeMHighPStopTargTCFilter, TThelixFinder,
      TTHelixMergerDeM, tprDeMHighPStopTargHSFilter,
      TTKSFDeM, tprDeMHighPStopTargTSFilter ]
   cprDeM_highP_stopTarg           : [ @sequence::CaloHitRecoTrigger.prepareHits, @sequence::CaloClusterTrigger.Reco,
      @sequence::TrkHitRecoTrigger.sequences.TTprepareHits,
      TTCalTimePeakFinder, cprDeMHighPStopTargTCFilter, TTCalHelixFinderDe,
      TTCalHelixMergerDeM, cprDeMHighPStopTargHSFilter,
      TTCalSeedFitDem, cprDeMHighPStopTargTSFilter]

}
physics.trigger_paths : [tprDeM_highP_stopTarg, cprDeM_highP_stopTarg ]
physics.end_paths : [ EndPath ]
#include "mu2e_trig_config/core/trigDigiInputsEpilog.fcl"

physics.analyzers.TAtpr.SelectEvents : [  tprDeM_highP_stopTarg  ]
physics.analyzers.TAtpr.candidate.options : @local::AllOpt
physics.analyzers.TAtpr.diagLevel : 2
physics.analyzers.TAtpr.FillCRVHits : false
physics.analyzers.TAtpr.FillMCInfo : false
physics.analyzers.TAtpr.RecoCountTag : ""
physics.analyzers.TAtpr.FillTriggerInfo : true
physics.analyzers.TAtpr.FillTrkPIDInfo : false
physics.analyzers.TAtpr.FillHitInfo : true
physics.analyzers.TAtpr.FillTriggerInfo : false
physics.analyzers.TAtpr.candidate.input : "TTKSF"
physics.analyzers.TAtpr.candidate.suffix : "DeM"
physics.analyzers.TAtpr.candidate.options.fillHits : true
physics.analyzers.TAtpr.supplements : []

physics.analyzers.TAcpr.SelectEvents : [  cprDeM_highP_stopTarg  ]
physics.analyzers.TAcpr.candidate.options : @local::AllOpt
physics.analyzers.TAcpr.diagLevel : 2
physics.analyzers.TAcpr.FillCRVHits : false
physics.analyzers.TAcpr.FillMCInfo : false
physics.analyzers.TAcpr.RecoCountTag : ""
physics.analyzers.TAcpr.FillTriggerInfo : true
physics.analyzers.TAcpr.FillTrkPIDInfo : false
physics.analyzers.TAcpr.FillHitInfo : true
physics.analyzers.TAcpr.FillTriggerInfo : false
physics.analyzers.TAcpr.candidate.input : "TTCalSeedFit"
physics.analyzers.TAcpr.candidate.suffix : "Dem"
physics.analyzers.TAcpr.candidate.options.fillHits : true
physics.analyzers.TAcpr.supplements : []

services.TimeTracker.printSummary: true
services.TFileService.fileName: "nts.owner.TTBTrk.version.sequence.root"
