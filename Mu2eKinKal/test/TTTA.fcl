# Run trigger, add MC truth matching, and write TrkAna tree output
# To create a functional job you must add database purpose and version; ie create a fcl stub that #includes this file and
# adds (for instance):
# services.DbService.purpose: MDC2020_best
# services.DbService.version: v1_1
#
#include "Offline/fcl/standardServices.fcl"
#include "mu2e_trig_config/core/trigProducers.fcl"
#include "mu2e_trig_config/core/trigFilters.fcl"
#include "mu2e_trig_config/core/trigRecoSequences.fcl"
#include "mu2e_trig_config/core/trigSequences.fcl"
#include "mu2e_trig_config/gen/trig_physMenuPSConfig_OnSpill.fcl"
#include "mu2e_trig_config/gen/trig_physMenu_OnSpill.fcl"
#include "Offline/CommonMC/fcl/prolog_trigger.fcl"
#include "TrkAna/fcl/prolog_trigger.fcl"
process_name : OnSpillTrigger
services : @local::Services.Reco
source : {
   module_type : RootInput
}

physics : {
   producers : {
      EWMProducer : { module_type : NullProducer }
      CaloShowerROMaker : { module_type : NullProducer }
      CaloDigiMaker : { module_type : NullProducer }
      makeSD : { module_type : NullProducer }
      @table::TrigProducers.producers
      SelectRecoMCDeCpr : {
         @table::CommonMCTrigger.TTSelectRecoMC
         KalSeedCollections  : [ "TTCalSeedFitDe" ]
         HelixSeedCollections  : ["TTCalHelixMergerDe" ]
      }
      SelectRecoMCDeTpr : {
         @table::CommonMCTrigger.TTSelectRecoMC
         KalSeedCollections  : [ "TTKSFDe" ]
         HelixSeedCollections  : ["TTHelixMergerDe" ]
      }
   }
   filters :  {
      @table::TrigFilters.filters
      @table::Trig_physMenuPSConfig
   }
   analyzers : {
      TADeTpr : {
         @table::TrkAnaTrigger.TrkAnaDeTT
         FitType : LoopHelix
      }

      TADeCpr : {
         @table::TrkAnaTrigger.TrkAnaDeTT
         FitType : LoopHelix
      }
   }
   @table::TrigRecoSequences
   @table::TrigSequences
   EndPath : [TADeTpr, TADeCpr, TADePtpr, TADePcpr]
}
physics.trigger_paths : [@sequence::Trig_physMenu.trigger_paths]
#include "mu2e_trig_config/core/trigDigiInputsEpilog.fcl"
#physics.producers.EWMProducer.SpillType : 1
#include "Production/JobConfig/common/epilog.fcl"
#include "Production/JobConfig/reco/drop_trigger.fcl"
physics.end_paths : [ EndPath ]
# add MC truth matching to the relevant paths
physics.tprDe_highP_stopTarg           : [ @sequence::physics.tprDe_highP_stopTarg, SelectRecoMCDeTpr]
physics.cprDe_highP_stopTarg           : [ @sequence::physics.cprDe_highP_stopTarg, SelectRecoMCDeCpr]

physics.analyzers.TADeTpr.SelectEvents : [  tprDe_highP_stopTarg  ]
physics.analyzers.TADeTpr.candidate.input : "TTKSF"
physics.analyzers.TADeTpr.candidate.suffix : "De"
physics.analyzers.TADeTpr.KalSeedMCAssns: "SelectRecoMCDeTpr"

physics.analyzers.TADeCpr.SelectEvents : [  cprDe_highP_stopTarg  ]
physics.analyzers.TADeCpr.candidate.input : "TTCalSeedFit"
physics.analyzers.TADeCpr.candidate.suffix : "De"
physics.analyzers.TADeCpr.KalSeedMCAssns: "SelectRecoMCDeCpr"

# this next is currently needed to get correct hit-level MC truth matching.  It needs to be fixed at the
# ComboHitCollection.  This setting works, but will slow down the trigger: don't use this script for timing studies
physics.producers.TTmakeSH.FilterHits : false
physics.producers.TTmakePH.TestFlag : true
physics.producers.TTmakePH.StrawHitSelectionBits : ["EnergySelection","TimeSelection","RadiusSelection"]
physics.producers.TTmakePH.StrawHitMask          : ["Dead"]

services.TimeTracker.printSummary: true
services.TFileService.fileName: "nts.owner.TTKKSeed.version.sequence.root"
# Mimic digitization config
# minimal BField map
services.GeometryService.bFieldFile     : "Offline/Mu2eG4/geom/bfgeom_reco_v01.txt"
# setup proditions; as new proditions are added to the database this file MUST be updated or reco won't see them
services.ProditionsService.alignedTracker.useDb: true
services.ProditionsService.alignedTracker.verbose: 0
services.ProditionsService.trackerStatus.Settings.useDb: true
services.ProditionsService.trackerStatus.Settings.verbose: 0
services.ProditionsService.strawElectronics.useDb: true
services.ProditionsService.strawElectronics.verbose: 0
# don't use database time offsets in digitization
services.ProditionsService.strawElectronics.overrideDbTimeOffsets : true
