
# Run trigger and write TrkAna tree output
# To create a functional job you must add database purpose and version; ie create a fcl stub that #includes this file and
# adds (for instance):
# services.DbService.purpose: MDC2020_perfect
# services.DbService.version: v1_0
#
#include "Offline/fcl/standardServices.fcl"
#include "Offline/Trigger/fcl/prolog_trigger.fcl"
#include "TrkAna/fcl/prolog_trigger.fcl"
process_name : OnSpillTrigger
services : @local::Services.Reco
source : {
  module_type : RootInput
}

physics : {
  producers : {
    @table::Trigger.producers
  }
  filters :  { @table::Trigger.filters }
  analyzers : {
    @table::Trigger.analyzers
    TADeMtpr : {
      @table::TrkAnaTrigger.TrkAnaDeMTT
      FitType : LoopHelix
      FillMCInfo : false
    }

    TADeMcpr : {
      @table::TrkAnaTrigger.TrkAnaDeMTT
      FitType : LoopHelix
      FillMCInfo : false
    }
    TADePtpr : {
      @table::TrkAnaTrigger.TrkAnaDePTT
      FitType : LoopHelix
      FillMCInfo : false
    }
    TADePcpr : {
      @table::TrkAnaTrigger.TrkAnaDePTT
      FitType : LoopHelix
      FillMCInfo : false
   }
  }
  EndPath : [TADeMtpr, TADeMcpr, TADePtpr, TADePcpr]
}
#include "Offline/gen/fcl/Trigger/OnSpillTrigMenu/OnSpillTrigMenu.fcl"
physics.producers.EWMProducer.SpillType : 1
#include "Production/JobConfig/common/epilog.fcl"
#include "Production/JobConfig/reco/drop_trigger.fcl"
physics.end_paths : [ EndPath ]

physics.analyzers.TADeMtpr.SelectEvents : [  tprDeM_highP_stopTarg_trigger  ]
physics.analyzers.TADeMtpr.candidate.input : "TTKSF"
physics.analyzers.TADeMtpr.candidate.suffix : "DeM"

physics.analyzers.TADeMcpr.SelectEvents : [  cprDeM_highP_stopTarg_trigger  ]
physics.analyzers.TADeMcpr.candidate.input : "TTCalSeedFit"
physics.analyzers.TADeMcpr.candidate.suffix : "Dem"

physics.analyzers.TADePtpr.SelectEvents : [  tprDeP_highP_stopTarg_trigger  ]
physics.analyzers.TADePtpr.candidate.input : "TTKSF"
physics.analyzers.TADePtpr.candidate.suffix : "DeP"

physics.analyzers.TADePcpr.SelectEvents : [  cprDeP_highP_stopTarg_trigger  ]
physics.analyzers.TADePcpr.candidate.input : "TTCalSeedFit"
physics.analyzers.TADePcpr.candidate.suffix : "Dep"

services.TimeTracker.printSummary: true
services.TFileService.fileName: "nts.owner.TTKKSeed.version.sequence.root"

# minimal BField map
services.GeometryService.bFieldFile     : "Offline/Mu2eG4/geom/bfgeom_reco_v01.txt"
# setup proditions; as new proditions are added to the database this file MUST be updated or reco won't see them
services.ProditionsService.alignedTracker.useDb: true
services.ProditionsService.alignedTracker.verbose: 0
services.ProditionsService.trackerStatus.Settings.useDb: true
services.ProditionsService.trackerStatus.Settings.verbose: 0
services.ProditionsService.strawElectronics.useDb: true
services.ProditionsService.strawElectronics.verbose: 0
# don't use database time offsets in digitization
services.ProditionsService.strawElectronics.overrideDbTimeOffsets : true
