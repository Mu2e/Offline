// Read text files from MARS, compute randomization parameters for each particle,
// and save everything as ntuples, which will be used as inputs for g4s1 Room jobs.
//
// Andrei Gaponenko, 2012

#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/ExtinctionMonitorFNAL/test/marsInputs_monfnal3w1.fcl"
#include "Offline/ExtinctionMonitorFNAL/test/marsInputs_monfnal3w1All.fcl"

process_name: EMFRoomFluxAnalyzer

source: {
   module_type: FromEMFMARSFileWeighted
   fileNames: @local::mars3w1randAll
   runNumber : 1 // starting with rand1 set. Run number is incremented when needed.
}

services: {
   message: @local::default_message
   scheduler: { defaultExceptions : false }
   TFileService: { fileName : "EMFRoomFluxAnalyzer.root" }
   GlobalConstantsService: { inputFile : "Offline/GlobalConstantsService/data/globalConstants_01.txt" }
   GeometryService: { inputFile : "Offline/ExtinctionMonitorFNAL/test/geom_emfMARS.txt" }
}

physics: {
   analyzers: {
      EMFRoomFluxAnalyzer: {
         module_type: EMFRoomFluxAnalyzer
         verbosityLevel : 2

         generatorModuleLabel : FromEMFMARSFileWeighted
         geomModuleLabel : ""

         srcGeom : {
            zFront   : -7200
            zBack    : -10200
            yFloor   : +1750
            yCeiling : +4493
            xSW      : -1762
            xNE      : +2814

            srcPositionTolerance : 2 // mm off the plane
            signalHalfdx : 40
            signalHalfdy : 40
         }

         numNeighbors : 5
         minSourceGroupStatistics : 2
      }
   }

   e1: [EMFRoomFluxAnalyzer]
   end_paths: [e1]
}
