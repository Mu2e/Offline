// Andrei Gaponenko, 2012

#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"

//================================================================
PatRecAnalysis: {
    module_type : EMFDetMCHistPatRec
    clusterTruthModuleLabel : "pixelRecoClusterTruthMaking"

    cutParticleMinClusters : 6
    cutHitXmax : 16.5 // mm
    cutHitYmax : 16.5 // mm

    cutMinCommonClusters : 6
}

//================================================================

source: { module_type : RootInput }

services: {
    message: @local::default_message
    scheduler: { defaultExceptions : false }
    TFileService: {}
    GeometryService: { inputFile      : "Offline/Mu2eG4/geom/geom_common.txt" }
    ConditionsService: { conditionsfile : "Offline/ConditionsService/data/conditions_01.txt" }
    GlobalConstantsService: { inputFile : "Offline/GlobalConstantsService/data/globalConstants_01.txt" }
}

physics : {
    producers : {
        pixelRawClusterization : @local::pixelRawClusterization
        pixelRecoClusterization : @local::pixelRecoClusterization
        pixelRecoClusterTruthMaking : @local::pixelRecoClusterTruthMaking
        EMFPatRecFromTracklets : @local::EMFPatRecFromTracklets
        EMFPatRecFromTrackletsTruthMaking : @local::EMFPatRecFromTrackletsTruthMaking
        EMFTrackClusterArbiter: @local::EMFTrackClusterArbiter
        EMFTrackClusterArbiterTruthMaking: @local::EMFTrackClusterArbiterTruthMaking
    }

    analyzers: {
        emfRecoClusters: {
            module_type: EMFDetHistRecoClusters
            inputModuleLabel  : "pixelRecoClusterization"
        }
        emfPatRec: {
            module_type: EMFDetHistPatRec
            patRecInTag  : "EMFPatRecFromTracklets"
        }
        emfPatArb: {
            module_type: EMFDetHistPatRec
            patRecInTag  : "EMFTrackClusterArbiter"
            geomModuleLabel: ""
        }
        emfPatRecAnalysis: @local::PatRecAnalysis
        emfPatArbAnalysis: @local::PatRecAnalysis
    }

    makers : [ pixelRawClusterization
               , pixelRecoClusterization, pixelRecoClusterTruthMaking
               , EMFPatRecFromTracklets, EMFPatRecFromTrackletsTruthMaking
               , EMFTrackClusterArbiter, EMFTrackClusterArbiterTruthMaking
             ]

    diagnostic: [ emfRecoClusters, emfPatRec, emfPatArb
                  , emfPatRecAnalysis, emfPatArbAnalysis
                ]

    out : [FullOutput]

    trigger_paths  : [makers]
    end_paths : [diagnostic, out]
}

outputs: { FullOutput : { module_type : RootOutput } }

physics.analyzers.emfPatRecAnalysis.patRecModuleLabel : "EMFPatRecFromTracklets"
physics.analyzers.emfPatRecAnalysis.trkTruthModuleLabel : "EMFPatRecFromTrackletsTruthMaking"
physics.analyzers.emfPatArbAnalysis.patRecModuleLabel : "EMFTrackClusterArbiter"
physics.analyzers.emfPatArbAnalysis.trkTruthModuleLabel : "EMFTrackClusterArbiterTruthMaking"

// somewhat reduce the amount of "volatile" printouts
services.message.destinations.log.noTimeStamps : true
services.message.statistics.noTimeStamps : true

// This tells emacs to view this file in the JavaScript mode.
// Local Variables:
// mode:js
// End:
