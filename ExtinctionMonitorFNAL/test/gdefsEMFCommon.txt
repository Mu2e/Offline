// Common overrides for ExtMonFNAL studies

// ExtMonUCI interferes with the civil construction
bool hasExtMonUCI = false;

/// ProtonBeamDumpMaker: shieldingFaceZatXmin = -16097.7, ZatXmax = -16931.4
// Using -16931.4 works for G4, but leads to problems with the exported ROOT geometry. Move farther back:
double hall.insideZExtMonUCIWall = -17200;  // to the corner of dump shielding

// From the drawing S-1:
vector<double> extMonFNAL.roomInsideX = { -1750, -1750, -3731, -3731, -1750, -1750, +2822, +2822, +3584, +3584, +2822, +2822 };
vector<double> extMonFNAL.roomInsideZ = {     0, -2928, -2928, -7422, -7422, -9200, -9200, -4200, -4200,  -796,  -796,     0 };

//int g4.steppingActionMaxSteps = 100000;
//int g4.stepsSizeLimit = 10000;
int g4.particlesSizeLimit = 100000;

// bool g4SteppingAction.killerVerbose = true;

//string g4.physicsListName = "Minimal";
string g4.physicsListName = "QGSP_BERT";
double g4.minRangeCut = 1.;            // mm
bool g4.killLowEKine = true;
double g4.eKineMin = 100.; // MeV

// // Uncomment to enable debug printout on a per event or per track basis.
// vector<int> g4.steppingActionEventList = { 0, 1, 2, 3, 4, 5 };
// vector<int> g4.steppingActionTrackList = {    1, 2, 3, 4, 5 };
// vector<int> g4.trackingActionEventList = { 0, 1, 2, 3, 4, 5};

//----------------------------------------------------------------
// Tweak visibility for debugging the channel setup

bool toyDS.visible           = false;
bool crs.vetoVisible         = false;
bool protonabsorber.visible  = false;
//bool neutronabsorber.visible = false;
bool mbs.visible             = false;
bool vd.visible              = true;

bool tracker.envelopeVisible       = false;
bool tracker.planeEnvelopeVisible = false;
bool tracker.supportVisible        = false;

//----------------------------------------------------------------
//// Write mu2e geometry into a GDML file
//bool   writeGDML        = true;
//bool   protonBeamDump.applyROOTVisualizationKludge = true;
//string GDMLFileName     = "extMonFNAL.gdml";

int PSShield.verbosityLevel = 1;
int PSEnclosure.verbosityLevel = 1;
int protonBeamDump.verbosityLevel = 1;
int extMonFNAL.verbosityLevel = 2;
int world.verbosityLevel  = 1;
//

// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
