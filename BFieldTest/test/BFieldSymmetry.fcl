#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

process_name: BFieldSymmetry

source: {
  module_type : EmptyEvent
  maxEvents   : 1
}

services: {
  message               : @local::default_message
  RandomNumberGenerator : {defaultEngineKind: "MixMaxRng" }
  TFileService          : { fileName : "bfmapSymmetry.root" }
  scheduler             : { defaultExceptions : false }

  GeometryService        : { inputFile      : "Mu2eG4/geom/geom_common.txt" }
  ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
  GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
  SeedService            : @local::automaticSeeds
}

physics: {
    analyzers: {
        bfsym: {
           module_type : BFieldSymmetry
           mapNames    : [ "Mu2e_DSMap", "Mu2e_TSdMap" ]
           nPoints     : 10000
           nBins       : 200
        }
    }

    e1: [bfsym]
    end_paths: [e1]
}

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  8
services.SeedService.maxUniqueEngines :  20
